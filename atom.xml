<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ksrgszk🥝</title>
  
  
  <link href="https://815101909.github.io/atom.xml" rel="self"/>
  
  <link href="https://815101909.github.io/"/>
  <updated>2023-12-12T01:14:03.000Z</updated>
  <id>https://815101909.github.io/</id>
  
  <author>
    <name>Ksrgszk🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaWeb实战项目</title>
    <link href="https://815101909.github.io/posts/100007d.html"/>
    <id>https://815101909.github.io/posts/100007d.html</id>
    <published>2023-12-12T01:14:03.000Z</published>
    <updated>2023-12-12T01:14:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h1><h2 id="办公自动化OA系统"><a href="#办公自动化OA系统" class="headerlink" title="办公自动化OA系统"></a>办公自动化OA系统</h2><p>办公自动化系统（Office Automation）是代替传统办公的解决方案</p><p>OA系统是利用软件技术构建的单位内部办公平台，用于辅助办公</p><p>利用OA系统可将办公数据数字化，可极大提高办公流程执行效率</p><p><img src="/assets/1672972750552.png" alt="1672972750552" style="zoom:80%;" /></p><h2 id="需求介绍"><a href="#需求介绍" class="headerlink" title="需求介绍"></a>需求介绍</h2><p>慕课办公OA系统要求采用B/S架构设计开发</p><p>HR为每一位员工分配系统账户，员工用此账户登陆系统</p><p>公司采用分级定岗，从1-8依次提升，不同岗位薪资水平不同</p><h3 id="需求介绍-请假流程"><a href="#需求介绍-请假流程" class="headerlink" title="需求介绍-请假流程"></a>需求介绍-请假流程</h3><p>6级（含）一下员工为<strong>业务岗</strong>，对应人员执行公司业务事宜</p><p>7-8级为<strong>管理岗</strong>，其中7级为部门经理，8级为总经理</p><p>业务岗与管理岗员工可用系统功能不同，要求允许灵活配置</p><p>公司所有员工都可以使用“请假申请”功能申请休假</p><p>请假时间少于72小时，部门经理审批后直接通过</p><p>请假时间大于72小时，部门经理审批后还需总经理进行审批</p><p>部门经理只允许批准本部门员工申请</p><p>部门经理请假需直接由总经理审批</p><p>总经理提起请假申请，系统自动批准通过</p><p><img src="/assets/1672973243649.png" alt="1672973243649"  /></p><h1 id="搭建基础架构"><a href="#搭建基础架构" class="headerlink" title="搭建基础架构"></a><strong>搭建基础架构</strong></h1><h2 id="框架-amp-组件"><a href="#框架-amp-组件" class="headerlink" title="框架&amp;组件"></a><strong>框架&amp;组件</strong></h2><p>MySQL 8                 Mybatis 3.5</p><p>Alibaba Druid           Servlet 3.1</p><p>Vue 3.x                 Element Plus</p><hr><p><img src="/assets/1672973990261.png" alt="1672973990261"  /></p><p><img src="/assets/1672974000531.png" alt="1672974000531"  /></p><p><img src="/assets/1672974123811.png" alt="1672974123811" style="zoom:80%;" /></p><p><img src="/assets/1672975059489.png" alt="1672975059489"  /></p><p><img src="/assets/1672975072812.png" alt="1672975072812" style="zoom:150%;" /></p><p><img src="/assets/1672975155662.png" alt="1672975155662" style="zoom:150%;" /></p><p><img src="/assets/1672975203944.png" alt="1672975203944"  /></p><p><img src="/assets/1672975276420.png" alt="1672975276420" style="zoom:80%;" /></p><p><img src="/assets/1672975322830.png" alt="1672975322830"  /></p><h2 id="MVC模式讲解"><a href="#MVC模式讲解" class="headerlink" title="MVC模式讲解"></a><strong>MVC模式讲解</strong></h2><h4 id="MVC架构模式"><a href="#MVC架构模式" class="headerlink" title="MVC架构模式"></a>MVC架构模式</h4><p><img src="/assets/1672975399674.png" alt="1672975399674" style="zoom:80%;" /></p><h4 id="MVC架构模式优点"><a href="#MVC架构模式优点" class="headerlink" title="MVC架构模式优点"></a>MVC架构模式优点</h4><p>软件团队分工合作，成员各司其职</p><p>分层开发，显示与数据解耦，便于维护</p><p>组件可灵活替代，互不影响</p><h4 id="基于MVC的软件分层设计"><a href="#基于MVC的软件分层设计" class="headerlink" title="基于MVC的软件分层设计"></a>基于MVC的软件分层设计</h4><p><img src="/assets/1672975814276.png" alt="1672975814276"  /></p><h2 id="开发MyBatisUtils工具类"><a href="#开发MyBatisUtils工具类" class="headerlink" title="开发MyBatisUtils工具类"></a><strong>开发MyBatisUtils工具类</strong></h2><p><img src="/assets/1672976869234.png" alt="1672976869234" style="zoom:80%;" /></p><p><img src="/assets/1672976403321.png" alt="1672976403321" style="zoom:150%;" /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  开启驼峰命名转换 form id -&gt; formId  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/imooc_oa?useSSL=false<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=Asia/Shanghai<span class="symbol">&amp;amp;</span>allowPublicKeyRetrieval=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mappers/test.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672991807274.png" alt="1672991807274"  /></p><p><img src="/assets/1672993205104.png" alt="1672993205104" style="zoom:80%;" /></p><h2 id="实现MyBatisUtils工具类"><a href="#实现MyBatisUtils工具类" class="headerlink" title="实现MyBatisUtils工具类"></a><strong>实现MyBatisUtils工具类</strong></h2><p><img src="/assets/1672991997650.png" alt="1672991997650" style="zoom:150%;" /></p><p><img src="/assets/1672992161403.png" alt="1672992161403"  /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;sample&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;String&quot;</span>&gt;</span></span><br><span class="line">        select &#x27;success&#x27;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672992236704.png" alt="1672992236704" style="zoom:80%;" /></p><p><img src="/assets/1672992423289.png" alt="1672992423289" style="zoom: 150%;" /></p><p><img src="/assets/1672992824861.png" alt="1672992824861"  /></p><p>执行test</p><p><img src="/assets/1672992852116.png" alt="1672992852116"  /></p><p>和test.xml文本中的一致</p><p>还可以写得更简洁</p><p><img src="/assets/1672993037638.png" alt="1672993037638"  /></p><p>增删改类：</p><p><img src="/assets/1672993572583.png" alt="1672993572583"  /></p><hr><h2 id="MyBatis整合Druid连接池"><a href="#MyBatis整合Druid连接池" class="headerlink" title="MyBatis整合Druid连接池"></a><strong>MyBatis整合Druid连接池</strong></h2><p><img src="/assets/image-20230106234501718.png" alt="image-20230106234501718"  /></p><p><img src="/assets/image-20230106234607545.png" alt="image-20230106234607545"  /></p><p><img src="/assets/image-20230106234915833.png" alt="image-20230106234915833"  /></p><p><img src="/assets/image-20230106235254029.png" alt="image-20230106235254029"  /></p><p><img src="/assets/image-20230106235630023.png" alt="image-20230106235630023"  /></p><p>这里为什么改成driverClassName？原因如下：</p><p><img src="/assets/image-20230106235717811.png" alt="image-20230106235717811"  /></p><p>运行试试：</p><p><img src="/assets/image-20230106235937947.png" alt="image-20230106235937947" style="zoom:80%;" /></p><p><img src="/assets/image-20230107000043910.png" alt="image-20230107000043910"  /></p><h1 id="登录与RBAC权限设计"><a href="#登录与RBAC权限设计" class="headerlink" title="登录与RBAC权限设计"></a>登录与RBAC权限设计</h1><h2 id="RBAC权限底层设计"><a href="#RBAC权限底层设计" class="headerlink" title="RBAC权限底层设计"></a><strong>RBAC权限底层设计</strong></h2><h3 id="Role-Based-Access-Control"><a href="#Role-Based-Access-Control" class="headerlink" title="Role-Based Access Control"></a>Role-Based Access Control</h3><p>基于角色权限控制(RBAC)是面向企业安全策略的访问控制方式。</p><p>RBAC核心思想是将控制访问的资源与角色(Role)进行绑定。</p><p>系统的用户(User)与角色(Role)再进行绑定，用户便拥有对应权限。</p><h3 id="RBAC底层设计"><a href="#RBAC底层设计" class="headerlink" title="RBAC底层设计"></a>RBAC底层设计</h3><p><img src="/assets/image-20230107000451478.png" alt="image-20230107000451478"  /></p><h2 id="RBAC数据表解析"><a href="#RBAC数据表解析" class="headerlink" title="RBAC数据表解析"></a><strong>RBAC数据表解析</strong></h2><p><img src="/assets/image-20230107001902084.png" alt="image-20230107001902084" style="zoom:80%;" /></p><p><img src="/assets/image-20230107001942612.png" alt="image-20230107001942612" style="zoom:150%;" /></p><p><img src="/assets/image-20230107002222403.png" alt="image-20230107002222403"  /><br><img src="/assets/image-20230107002207006.png" alt="image-20230107002207006"  /></p><p><img src="/assets/image-20230107002635939.png" alt="image-20230107002635939"  /></p><p><img src="/assets/image-20230107002705051.png" alt="image-20230107002705051"  /></p><p><img src="/assets/image-20230107003049578.png" alt="image-20230107003049578"  /></p><p><img src="/assets/image-20230107003002244.png" alt="image-20230107003002244"  /></p><h2 id="初识ElementPlus"><a href="#初识ElementPlus" class="headerlink" title="初识ElementPlus"></a><strong>初识ElementPlus</strong></h2><p><a href="https://element-plus.gitee.io/zh-CN/">https://element-plus.gitee.io/zh-CN/</a></p><p><img src="/assets/image-20230107003132838.png" alt="image-20230107003132838"  /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//unpkg.com/element-plus/dist/index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external nofollow&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>  /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 引入 Vue --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/vue@next&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external nofollow&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/element-plus&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external nofollow&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实现登录功能"><a href="#实现登录功能" class="headerlink" title="实现登录功能"></a>实现登录功能</h2><p><img src="/assets/image-20230107004519283.png" alt="image-20230107004519283"  /></p><p><img src="/assets/image-20230107005212191.png" alt="image-20230107005212191"  /></p><p><img src="/assets/image-20230107005541108.png" alt="image-20230107005541108" style="zoom:150%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>办公OA系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/element-plus/index.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-box</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dcdfe6</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">350px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">180px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">35px</span> <span class="number">35px</span> <span class="number">15px</span> <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            -moz-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">25px</span> <span class="number">#909300</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;loginForm&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//初始化Vue，绑定Main中的数，利用ElementPlus对#app容器进行重新渲染</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107010802371.png" alt="image-20230107010802371" style="zoom:80%;" /></p><hr><h2 id="绘制登录页面"><a href="#绘制登录页面" class="headerlink" title="绘制登录页面"></a>绘制登录页面</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>办公OA系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/element-plus/index.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dcdfe6</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">350px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">180px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">35px</span> <span class="number">35px</span> <span class="number">15px</span> <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            -moz-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">25px</span> <span class="number">#909399</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-title</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">40px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#303133</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;loginForm&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;login-title&quot;</span>&gt;</span>OA办公系统<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;账号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入账号&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;onSubmit(&#x27;loginForm&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    , <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                , <span class="attr">rules</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">username</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;账号不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">password</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;密码不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        , <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">onSubmit</span>(<span class="params">formName</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> form = <span class="variable language_">this</span>.<span class="property">$refs</span>[formName];</span></span><br><span class="line"><span class="language-javascript">                form.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;表单校验成功，准备提交数据&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//初始化Vue，绑定Main中的数，利用ElementPlus对#app容器进行重新渲染</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107112014643.png" alt="image-20230107112014643" style="zoom:80%;" /></p><hr><h2 id="实现用户登录Model层"><a href="#实现用户登录Model层" class="headerlink" title="实现用户登录Model层"></a><strong>实现用户登录Model层</strong></h2><p><img src="/assets/image-20230107115151890.png" alt="image-20230107115151890" style="zoom:80%;" /></p><p><img src="/assets/image-20230107115604473.png" alt="image-20230107115604473" style="zoom:150%;" /></p><p><img src="/assets/image-20230107115656834.png" alt="image-20230107115656834" style="zoom:80%;" /></p><p><img src="/assets/image-20230107115948282.png" alt="image-20230107115948282" style="zoom:150%;" /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;usermapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByUsername&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.oa.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select * from sys_user where username = #&#123;value&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107120034236.png" alt="image-20230107120034236"  /></p><p><img src="/assets/image-20230107120446307.png" alt="image-20230107120446307" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectByUsername</span><span class="params">(String username)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)MybatisUtils.executeQuery(sqlSession -&gt; sqlSession.selectOne(<span class="string">&quot;usermapper.selectByUsername&quot;</span>, username));</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107134956456.png" alt="image-20230107134956456" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoginException</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107135019589-1673146697314-2.png" alt="image-20230107135019589" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserMapper</span>();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据前台输入进行登录校验</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 前台输入的用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 前台输入的密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验通过后，包含对应用户数据的User实体类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> LoginException 用户登录异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">checkLogin</span><span class="params">(String username, String password)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectByUsername(username);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">LoginException</span>(<span class="string">&quot;用户名不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!password.equals(user.getPassword()))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">LoginException</span>(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><p><img src="/assets/image-20230107135144668.png" alt="image-20230107135144668"  /></p><p><img src="/assets/image-20230107135217291.png" alt="image-20230107135217291"  /></p><p><img src="/assets/image-20230107135451852.png" alt="image-20230107135451852" style="zoom:80%;" /></p><p><img src="/assets/image-20230107135515774.png" alt="image-20230107135515774"  /></p><p><img src="/assets/image-20230107135552520.png" alt="image-20230107135552520"  /></p><p><img src="/assets/image-20230107135558788.png" alt="image-20230107135558788"  /></p><p><img src="/assets/image-20230107135649417.png" alt="image-20230107135649417"  /></p><p><img src="/assets/image-20230107135701425.png" alt="image-20230107135701425"  /></p><h2 id="实现用户登录Controller层"><a href="#实现用户登录Controller层" class="headerlink" title="实现用户登录Controller层"></a><strong>实现用户登录Controller层</strong></h2><p><img src="/assets/image-20230107141459364.png" alt="image-20230107141459364" style="zoom:150%;" /></p><p><img src="/assets/image-20230107141451762.png" alt="image-20230107141451762"  /></p><p><img src="/assets/image-20230107141804411.png" alt="image-20230107141804411"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/api/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserService</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//接收用户输入</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">//调用业务逻辑</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.checkLogin(username, password);</span><br><span class="line">            <span class="comment">//处理结果编码，0表示处理成功，非0表示处理失败</span></span><br><span class="line">            result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">            result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            result.put(<span class="string">&quot;code&quot;</span>, e.getClass().getSimpleName());</span><br><span class="line">            result.put(<span class="string">&quot;message&quot;</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回JSON结果</span></span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> objectMapper.writeValueAsString(result);</span><br><span class="line">        resp.getWriter().println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>别忘记加入依赖：</p><p><img src="/assets/image-20230107142112199.png" alt="image-20230107142112199"  /></p><p><img src="/assets/image-20230107142203873.png" alt="image-20230107142203873" style="zoom:80%;" /></p><p><img src="/assets/image-20230107142235727.png" alt="image-20230107142235727"  /></p><p><img src="/assets/image-20230107142251774.png" alt="image-20230107142251774"  /></p><p><img src="/assets/image-20230107142714112.png" alt="image-20230107142714112"  /></p><p><img src="/assets/image-20230107142906802.png" alt="image-20230107142906802"  /></p><p><img src="/assets/image-20230107142952374.png" alt="image-20230107142952374"  /></p><h2 id="实现用户登录View层"><a href="#实现用户登录View层" class="headerlink" title="实现用户登录View层"></a><strong>实现用户登录View层</strong></h2><p>回到login.html</p><p><img src="/assets/image-20230107144003480.png" alt="image-20230107144003480"  /></p><p><img src="/assets/image-20230107144139187.png" alt="image-20230107144139187" style="zoom:80%;" /></p><p><img src="/assets/image-20230107144554225.png" alt="image-20230107144554225"  /></p><p>登录成功后跳转页面</p><p><img src="/assets/image-20230107144637815.png" alt="image-20230107144637815"  /></p><p>账号输错，会在上端报错</p><p><img src="/assets/image-20230107144658113.png" alt="image-20230107144658113" style="zoom:80%;" /></p><p>密码输错，也会在上端报错</p><p><img src="/assets/image-20230107144759407.png" alt="image-20230107144759407" style="zoom:80%;" /></p><h2 id="封装ResponseUtils工具类"><a href="#封装ResponseUtils工具类" class="headerlink" title="封装ResponseUtils工具类"></a><strong>封装ResponseUtils工具类</strong></h2><p><img src="D:\Typora Pic\image-20230107153700755.png" alt="image-20230107153700755"></p><p><img src="/assets/image-20230107153835163.png" alt="image-20230107153835163"  /></p><p>最后面加上</p><p><img src="/assets/image-20230107154333521.png" alt="image-20230107154333521"  /></p><p>对put()创建test对象</p><p><img src="/assets/image-20230107154433904.png" alt="image-20230107154433904"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResponseUtilsTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ResponseUtils</span> <span class="variable">resp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>(<span class="string">&quot;LoginException&quot;</span>, <span class="string">&quot;密码错误&quot;</span>).put(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;XXXClass&quot;</span>).put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;mooc&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> resp.toJsonString();</span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107212751464.png" alt="image-20230107212751464"  /></p><p>还可以再简写为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">ResponseUtils</span>(<span class="string">&quot;LoginException&quot;</span>, <span class="string">&quot;密码错误&quot;</span>).put(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;XXXClass&quot;</span>).put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;mooc&quot;</span>).toJsonString());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改LoginServlet内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/api/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserService</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//接收用户输入</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">//调用业务逻辑</span></span><br><span class="line">        <span class="type">ResponseUtils</span> <span class="variable">resp</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.checkLogin(username, password);</span><br><span class="line">            <span class="comment">//处理结果编码，0表示处理成功，非0表示处理失败</span></span><br><span class="line">            <span class="type">Map</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>();</span><br><span class="line">            data.put(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>().put(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>(e.getClass().getSimpleName(), e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回JSON结果</span></span><br><span class="line">        response.getWriter().println(resp.toJsonString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107220820601.png" alt="image-20230107220820601"  /></p><p><img src="D:\Java学习笔记\JavaWeb实战\慕课OA系统.assets\image-20230107220836632.png" alt="image-20230107220836632"></p><p><img src="/assets/image-20230107220841758.png" alt="image-20230107220841758"  /></p><hr><h2 id="封装Md5Utils加密工具类"><a href="#封装Md5Utils加密工具类" class="headerlink" title="封装Md5Utils加密工具类"></a><strong>封装Md5Utils加密工具类</strong></h2><h4 id="MD5摘要算法"><a href="#MD5摘要算法" class="headerlink" title="MD5摘要算法"></a>MD5摘要算法</h4><p>MD5信息摘要算法是广泛应用的密码散列函数</p><p>MD5可以产生出128位的散列值用于标识源数据</p><p>项目中通常使用MD5作为敏感数据的加密算法</p><p><a href="http://md5.chahuo.com/">http://md5.chahuo.com/</a></p><p><img src="/assets/image-20230107223454882.png" alt="image-20230107223454882"  /></p><h4 id="Apache-Commons-Codec"><a href="#Apache-Commons-Codec" class="headerlink" title="Apache Commons Codec"></a>Apache Commons Codec</h4><p>Commons-Codec是Apache提供的编码/解码组件</p><p>通过Commons-Codec可轻易生成源数据的MD5摘要</p><p>MD5摘要方法: String md5 = DigestUtils.md5Hex(源数据)</p><p><a href="https://commons.apache.org/proper/commons-codec/">https://commons.apache.org/proper/commons-codec/</a></p><p>在pom.xml中加入依赖</p><p><img src="/assets/image-20230107224228479.png" alt="image-20230107224228479"  /></p><p>别忘记把依赖加入lib</p><p><img src="/assets/image-20230107224130319.png" alt="image-20230107224130319"  /></p><p><img src="/assets/image-20230107224357988.png" alt="image-20230107224357988" style="zoom:150%;" /></p><p><img src="/assets/image-20230107224406801.png" alt="image-20230107224406801"  /></p><p>生成测试用例类：</p><p><img src="/assets/image-20230107224424376.png" alt="image-20230107224424376"  /></p><p><img src="/assets/image-20230107224527323.png" alt="image-20230107224527323"  /></p><p><img src="/assets/image-20230107224547691.png" alt="image-20230107224547691"  /></p><p>但是这还不是很安全，如可以利用<a href="https://www.cmd5.com/">https://www.cmd5.com/</a></p><p><img src="/assets/image-20230107224647906.png" alt="image-20230107224647906"  /></p><p>所以这时候就要用到盐值(salt)</p><p><img src="/assets/image-20230107225356146.png" alt="image-20230107225356146" style="zoom: 150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Md5Utils</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">md5Digest</span><span class="params">(String source)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DigestUtils.md5Hex(source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">md5Digest</span><span class="params">(String source, Integer salt)</span>&#123;</span><br><span class="line">        <span class="type">char</span>[] chars = source.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chars.length; i++)&#123;</span><br><span class="line">            chars[i] = (<span class="type">char</span>) (chars[i] + salt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chars);</span><br><span class="line">        System.out.println(target);</span><br><span class="line">        <span class="type">String</span> <span class="variable">md5</span> <span class="operator">=</span> DigestUtils.md5Hex(target);</span><br><span class="line">        <span class="keyword">return</span> md5;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230107225454681.png" alt="image-20230107225454681"  /></p><p><img src="D:\Typora Pic\image-20230107225645530.png" alt="image-20230107225645530"></p><p><img src="/assets/image-20230107225708715.png" alt="image-20230107225708715"  /></p><hr><h2 id="完整实现登录功能"><a href="#完整实现登录功能" class="headerlink" title="完整实现登录功能"></a><strong>完整实现登录功能</strong></h2><p><img src="/assets/image-20230107225940491.png" alt="image-20230107225940491"  /></p><p>这些密码就是进过加盐的。</p><p>修改UserServlet</p><p><img src="/assets/image-20230107230759310.png" alt="image-20230107230759310" style="zoom: 150%;" /></p><p><img src="/assets/image-20230107230716258.png" alt="image-20230107230716258"  /></p><p>测试看看：</p><p><img src="/assets/image-20230107231141026.png" alt="image-20230107231141026"  /></p><p>正确密码：</p><p><img src="/assets/image-20230107231204446.png" alt="image-20230107231204446"  /></p><p><img src="/assets/image-20230107231229182.png" alt="image-20230107231229182"  /></p><p>错误密码：</p><p><img src="/assets/image-20230107231254008.png" alt="image-20230107231254008"  /></p><p><img src="/assets/image-20230107231303515.png" alt="image-20230107231303515"  /></p><p><img src="/assets/image-20230107231512073.png" alt="image-20230107231512073" style="zoom: 80%;" /></p><p><img src="/assets/image-20230107231530826.png" alt="image-20230107231530826" style="zoom:80%;" /></p><p>注意把返回数据设为null，防止被抓包。</p><p><img src="/assets/image-20230107231759665.png" alt="image-20230107231759665" style="zoom:80%;" /></p><p><img src="/assets/image-20230107231924127.png" alt="image-20230107231924127" style="zoom:80%;" /></p><p>这样password和salt就消失不见了。</p><hr><h2 id="实现后台首页"><a href="#实现后台首页" class="headerlink" title="实现后台首页"></a>实现后台首页</h2><p><img src="/assets/image-20230108000057920.png" alt="image-20230108000057920"  /></p><p><img src="/assets/image-20230108000227396.png" alt="image-20230108000227396" style="zoom:80%;" /></p><p><img src="D:\Java学习笔记\JavaWeb实战\慕课OA系统.assets\image-20230108000402849.png" alt="image-20230108000402849"></p><p><img src="/assets/image-20230108000957134.png" alt="image-20230108000957134" style="zoom:150%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>办公OA系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/element-plus/index.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-header</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">238</span>, <span class="number">241</span>, <span class="number">246</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">&quot;height:100%;border: 1px solid #eee&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-header</span>&gt;</span></span><br><span class="line">                1112321321</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108001050489.png" alt="image-20230108001050489"  /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>办公OA系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/element-plus/index.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-header</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">238</span>, <span class="number">241</span>, <span class="number">246</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">&quot;height:100%;border: 1px solid #eee&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-header</span>&gt;</span></span><br><span class="line">                1112321321</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-height: 100%;background-color: rgb(238,241,246)&quot;</span> &gt;</span></span><br><span class="line">                    我是功能区</span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">                    我是页面显示区</span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108001412570.png" alt="image-20230108001412570"  /></p><p><img src="/assets/image-20230108001532647.png" alt="image-20230108001532647" style="zoom:80%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>办公OA系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/element-plus/index.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-header</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">238</span>, <span class="number">241</span>, <span class="number">246</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>,<span class="selector-tag">body</span>,<span class="selector-id">#app</span>,el-container&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">&quot;height:100%;border: 1px solid #eee&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-header</span>&gt;</span></span><br><span class="line">                1112321321</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-height: 100%;background-color: rgb(238,241,246)&quot;</span> &gt;</span></span><br><span class="line">                    我是功能区</span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">                    我是页面显示区</span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">        app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108001628952.png" alt="image-20230108001628952" style="zoom:80%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">&quot;height:100%;border: 1px solid #eee&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-header</span>&gt;</span></span><br><span class="line">                我是Header</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-height: 100%;background-color: rgb(238,241,246)&quot;</span> &gt;</span></span><br><span class="line">                    我是功能区</span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">name</span>=<span class="string">&quot;main&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;height: 95%;border: 0px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108002225493.png" alt="image-20230108002225493" style="zoom:80%;" /></p><h2 id="开发RBACModel层"><a href="#开发RBACModel层" class="headerlink" title="开发RBACModel层"></a><strong>开发RBACModel层</strong></h2><p>查询员工可用功能。</p><p><img src="/assets/image-20230108005412992.png" alt="image-20230108005412992"  /></p><p><img src="/assets/image-20230108005557708.png" alt="image-20230108005557708"  /></p><p><img src="/assets/image-20230108010152730.png" alt="image-20230108010152730" style="zoom:150%;" /></p><p><img src="/assets/image-20230108010213204.png" alt="image-20230108010213204" style="zoom:80%;" /></p><p><img src="/assets/image-20230108005727347.png" alt="image-20230108005727347" style="zoom:150%;" /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;rbacmapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectNodeByUserId&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.oa.entity.Node&quot;</span>&gt;</span></span><br><span class="line">        select DISTINCT n.*</span><br><span class="line">        from sys_role_user ru, sys_role_node rn ,sys_node n</span><br><span class="line">        where</span><br><span class="line">            ru.role_id = rn.role_id and rn.node_id = n.node_id</span><br><span class="line">          and ru.user_id = #&#123;value&#125;</span><br><span class="line">        order by n.node_code</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108010359350.png" alt="image-20230108010359350"  /></p><p><img src="/assets/image-20230108010716671.png" alt="image-20230108010716671" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RbacMapper</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Node&gt; <span class="title function_">selectNodeByUserId</span><span class="params">(Long userId)</span>&#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> (List) MybatisUtils.executeQuery(sqlSession -&gt; sqlSession.selectList(<span class="string">&quot;rbacmapper.selectNodeByUserId&quot;</span>, userId));</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108010734006.png" alt="image-20230108010734006" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RbacService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">RbacMapper</span> <span class="variable">rbacMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RbacMapper</span>();</span><br><span class="line">    <span class="keyword">public</span> List&lt;Node&gt; <span class="title function_">selectNodeByUserId</span><span class="params">(Long userId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rbacMapper.selectNodeByUserId(userId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108010926819.png" alt="image-20230108010926819"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RbacServiceTest</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">RbacService</span> <span class="variable">rbacService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RbacService</span>();</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectNodeByUserId</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Node&gt; nodes = rbacService.selectNodeByUserId(<span class="number">3l</span>);</span><br><span class="line">        <span class="keyword">for</span> (Node n:nodes)&#123;</span><br><span class="line">            System.out.println(n.getNodeName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记得selectNodeByUserId(3l)里传入的是长整型，后面加l。</p><p><img src="/assets/image-20230108011232844.png" alt="image-20230108011232844" style="zoom:150%;" /></p><hr><h2 id="开发RBACController层"><a href="#开发RBACController层" class="headerlink" title="开发RBACController层"></a><strong>开发RBACController层</strong></h2><p><img src="/assets/image-20230108112659310.png" alt="image-20230108112659310"  /></p><p><img src="/assets/image-20230108113628566.png" alt="image-20230108113628566" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/api/user_info&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInfoServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">RbacService</span> <span class="variable">rbacService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RbacService</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">uid</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;uid&quot;</span>);</span><br><span class="line">        List&lt;Node&gt; nodes = rbacService.selectNodeByUserId(Long.parseLong(uid));</span><br><span class="line">        List&lt;Map&gt; treeList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">module</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (Node node : nodes)&#123;</span><br><span class="line">            <span class="keyword">if</span> (node.getNodeType() == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">module</span> = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>();</span><br><span class="line">                <span class="keyword">module</span>.put(<span class="string">&quot;node&quot;</span>,node);</span><br><span class="line">                <span class="keyword">module</span>.put(<span class="string">&quot;children&quot;</span>, <span class="keyword">new</span> <span class="title class_">ArrayList</span>());</span><br><span class="line">                treeList.add(<span class="keyword">module</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (node.getNodeType() == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="type">List</span> <span class="variable">children</span> <span class="operator">=</span> (List) <span class="keyword">module</span>.get(<span class="string">&quot;children&quot;</span>);</span><br><span class="line">                children.add(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>().put(<span class="string">&quot;nodeList&quot;</span>, treeList).toJsonString();</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        response.getWriter().println(json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108114050363.png" alt="image-20230108114050363" style="zoom:80%;" /></p><p>uid=1为管理岗</p><p><img src="/assets/image-20230108114113141.png" alt="image-20230108114113141" style="zoom:80%;" /></p><hr><h2 id="实现RBACView层"><a href="#实现RBACView层" class="headerlink" title="实现RBACView层"></a><strong>实现RBACView层</strong></h2><p>先暂时注释掉跳转页面，方便调试：</p><p><img src="/assets/image-20230108200036831.png" alt="image-20230108200036831" style="zoom:80%;" /></p><p><img src="/assets/image-20230108200409037.png" alt="image-20230108200409037" style="zoom:80%;" /></p><p><img src="/assets/image-20230108200432090.png" alt="image-20230108200432090"  /></p><p>再次登录成功后：</p><p><img src="/assets/image-20230108201052108.png" alt="image-20230108201052108"  /></p><p>关闭浏览器后，这里的就被清除了。</p><p>本地存储(Local Storage)的是长期存储的</p><p>会话存储(Session Storage)的是短期存储的</p><p>来到index.html</p><p><img src="/assets/image-20230108202027019.png" alt="image-20230108202027019"  /></p><p>打开index.html控制台</p><p><img src="/assets/image-20230108202108874.png" alt="image-20230108202108874"  /></p><p>再次回到代码中：</p><p><img src="/assets/image-20230108202545860.png" alt="image-20230108202545860"  /></p><p><img src="/assets/image-20230108202505901.png" alt="image-20230108202505901"  /></p><p>push()将内容填充到了上面的nodeList：[]</p><p>导栏菜单:</p><p><img src="/assets/image-20230108202815285.png" alt="image-20230108202815285" style="zoom:80%;" /></p><p>该源代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;tac&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;mb-2&quot;</span>&gt;</span>Default colors<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-menu</span></span></span><br><span class="line"><span class="tag">        <span class="attr">default-active</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">open</span>=<span class="string">&quot;handleOpen&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">close</span>=<span class="string">&quot;handleClose&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">location</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator One<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;Group One&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span>item one<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>item two<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;Group Two&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-3&quot;</span>&gt;</span>item three<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span>item four<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-4-1&quot;</span>&gt;</span>item one<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator Two<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">document</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator Three<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">setting</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator Four<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;mb-2&quot;</span>&gt;</span>Custom colors<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-menu</span></span></span><br><span class="line"><span class="tag">        <span class="attr">active-text-color</span>=<span class="string">&quot;#ffd04b&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">background-color</span>=<span class="string">&quot;#545c64&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">default-active</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">text-color</span>=<span class="string">&quot;#fff&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">open</span>=<span class="string">&quot;handleOpen&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">close</span>=<span class="string">&quot;handleClose&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">location</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator One<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;Group One&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-1&quot;</span>&gt;</span>item one<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-2&quot;</span>&gt;</span>item two<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">&quot;Group Two&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-3&quot;</span>&gt;</span>item three<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span>item four<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;1-4-1&quot;</span>&gt;</span>item one<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">icon-menu</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator Two<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">document</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator Three<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">setting</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>Navigator Four<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Document</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Menu</span> <span class="keyword">as</span> <span class="title class_">IconMenu</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Location</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Setting</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleOpen</span> = (<span class="params">key: string, keyPath: string[]</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handleClose</span> = (<span class="params">key: string, keyPath: string[]</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key, keyPath)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>来到index.html中的功能区</p><p><img src="/assets/image-20230108203445764.png" alt="image-20230108203445764"  /></p><p><img src="/assets/image-20230108204350201.png" alt="image-20230108204350201" style="zoom:80%;" /></p><p><img src="/assets/image-20230108205107886.png" alt="image-20230108205107886"  /></p><p><img src="/assets/image-20230108205121163.png" alt="image-20230108205121163"  /></p><p>换个低级用户试试：</p><p><img src="/assets/image-20230108205212994.png" alt="image-20230108205212994" style="zoom:80%;" /></p><p><img src="/assets/image-20230108205609484.png" alt="image-20230108205609484" style="zoom:80%;" /></p><p><img src="/assets/image-20230108205634856.png" alt="image-20230108205634856" style="zoom:80%;" /></p><p><img src="/assets/image-20230108205717549.png" alt="image-20230108205717549" style="zoom:80%;" /></p><p><img src="/assets/image-20230108205723228.png" alt="image-20230108205723228" style="zoom:80%;" /></p><hr><h2 id="回顾Mapper接口开发过程"><a href="#回顾Mapper接口开发过程" class="headerlink" title="回顾Mapper接口开发过程"></a><strong>回顾Mapper接口开发过程</strong></h2><p>回到index.html头部</p><p><img src="/assets/image-20230108212752105.png" alt="image-20230108212752105" style="zoom:80%;" /></p><p><img src="/assets/image-20230108212813430.png" alt="image-20230108212813430"  /></p><p>再往右上角显示登录人：</p><p><img src="/assets/image-20230108213251237.png" alt="image-20230108213251237"  /></p><p><img src="/assets/image-20230108213302138.png" alt="image-20230108213302138" style="zoom:80%;" /></p><p>再往数据库中加载该sql，补充部门和员工信息。</p><p><img src="/assets/image-20230108213452308.png" alt="image-20230108213452308"  /></p><p><img src="/assets/image-20230108213523259.png" alt="image-20230108213523259" style="zoom:80%;" /></p><p><img src="/assets/image-20230108213555577.png" alt="image-20230108213555577" style="zoom:150%;" /></p><p><img src="/assets/image-20230108213625901.png" alt="image-20230108213625901" style="zoom:80%;" /></p><p><img src="/assets/image-20230108213635263.png" alt="image-20230108213635263"  /></p><p><img src="/assets/image-20230108214041561.png" alt="image-20230108214041561"  /></p><p><img src="/assets/image-20230108214400754.png" alt="image-20230108214400754" style="zoom:150%;" /></p><p>注意这里namespace用了接口名。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.example.oa.mapper.EmployeeMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.oa.entity.Employee&quot;</span>&gt;</span></span><br><span class="line">        select * from adm_employee where employee_id = #&#123;value&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230108214542194.png" alt="image-20230108214542194"  /></p><p><img src="/assets/image-20230108214601687.png" alt="image-20230108214601687" style="zoom:150%;" /></p><p>别忘了注册：</p><p><img src="/assets/image-20230108214719297.png" alt="image-20230108214719297"  /></p><p><img src="/assets/image-20230108214807580.png" alt="image-20230108214807580"  /></p><p>再测试一下</p><p><img src="/assets/image-20230108214839357.png" alt="image-20230108214839357"  /></p><p><img src="/assets/image-20230108215149929.png" alt="image-20230108215149929"  /></p><p><img src="/assets/image-20230108215238257.png" alt="image-20230108215238257"  /></p><hr><h2 id="实现Header显示与注销功能"><a href="#实现Header显示与注销功能" class="headerlink" title="实现Header显示与注销功能"></a><strong>实现Header显示与注销功能</strong></h2><p><img src="/assets/image-20230108215916365.png" alt="image-20230108215916365" style="zoom: 150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeServlet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Employee <span class="title function_">selectById</span><span class="params">(Long employeeId)</span>&#123;</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> (Employee) MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="keyword">return</span> mapper.selectById(employeeId);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> employee;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>来到之前的controller中：</p><p><img src="/assets/image-20230108220004708.png" alt="image-20230108220004708" style="zoom:150%;" /></p><p><img src="/assets/image-20230108220227341.png" alt="image-20230108220227341" style="zoom:80%;" /></p><p><img src="/assets/image-20230108220437748.png" alt="image-20230108220437748" style="zoom:80%;" /></p><p><img src="/assets/image-20230108220639945.png" alt="image-20230108220639945" style="zoom:80%;" /></p><p>接下来绑定页面</p><p>来到index.html</p><p><img src="/assets/image-20230108221146853.png" alt="image-20230108221146853" style="zoom:80%;" /></p><p>来到上面进行双向绑定：</p><p><img src="/assets/image-20230108221320738.png" alt="image-20230108221320738"  /></p><p><img src="/assets/image-20230108221410399.png" alt="image-20230108221410399" style="zoom:80%;" /></p><p>轮到注销了</p><p><img src="/assets/image-20230108221838066.png" alt="image-20230108221838066" style="zoom:80%;" /></p><p>清空数据，回到登录页面：</p><p><img src="/assets/image-20230108221633410.png" alt="image-20230108221633410"  /></p><hr><h1 id="开发多级审批流程"><a href="#开发多级审批流程" class="headerlink" title="开发多级审批流程"></a>开发多级审批流程</h1><h2 id="请假流程"><a href="#请假流程" class="headerlink" title="请假流程"></a>请假流程</h2><p><img src="/assets/image-20230108225813883.png" alt="image-20230108225813883" style="zoom:150%;" /></p><h2 id="设计约束"><a href="#设计约束" class="headerlink" title="设计约束"></a>设计约束</h2><p>每一个单位对应一个审批流程</p><p>请假单创建后，按业务规则生成部门经理、总经理审批任务</p><p>审批任务的经办人只能审批自己辖区内的请假申请</p><p>所以审批任务”通过”，代表请假已经批准</p><p>任意审批任务”驳回”操作，其余审批任务取消，请假申请被驳回</p><p>请假流程中任意节点产生的操作都要生成对应的系统通知</p><h2 id="请假流程数据库设计"><a href="#请假流程数据库设计" class="headerlink" title="请假流程数据库设计"></a><strong>请假流程数据库设计</strong></h2><p>设计表</p><p><img src="/assets/image-20230108230827584.png" alt="image-20230108230827584"  /></p><p><img src="/assets/image-20230108230752617.png" alt="image-20230108230752617"  /></p><p><img src="/assets/image-20230109003935786.png" alt="image-20230109003935786"  /></p><h2 id="开发请假申请功能"><a href="#开发请假申请功能" class="headerlink" title="开发请假申请功能"></a>开发请假申请功能</h2><p><img src="/assets/image-20230109004008454.png" alt="image-20230109004008454"  /></p><p><img src="/assets/image-20230109004659634.png" alt="image-20230109004659634"  /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>请假申请单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/assets/element-plus/index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/element-plus/locale/zh-cn.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-form</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#DCDFE6</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">180px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">35px</span> <span class="number">35px</span> <span class="number">15px</span> <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            -moz-<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">25px</span> <span class="number">#909399</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;leaveForm&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-descriptions</span> <span class="attr">title</span>=<span class="string">&quot;请假申请单&quot;</span> <span class="attr">:column</span>=<span class="string">&quot;1&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span>&gt;</span>研发部<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;申请人&quot;</span>&gt;</span>王美美[高级研发工程师]</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;请假类型&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;form.formType&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;事假&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;病假&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;工伤假&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;婚嫁&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;产假&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;丧假&quot;</span> <span class="attr">value</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;请假时间&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;timeRange&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;0px&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">v-model</span>=<span class="string">&quot;form.timeRange&quot;</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">type</span>=<span class="string">&quot;datetimerange&quot;</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">range-separator</span>=<span class="string">&quot;至&quot;</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">start-placeholder</span>=<span class="string">&quot;开始日期&quot;</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">end-placeholder</span>=<span class="string">&quot;结束日期&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;请假原因&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;reason&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;0px&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请假原因&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.reason&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-descriptions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;padding-top: 30px&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> &gt;</span>立即申请<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">formType</span>: <span class="string">&quot;1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">timeRange</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">startTime</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">endTime</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">reason</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">eid</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 表单验证，需要在 el-form-item 元素中增加 prop 属性</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">rules</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">timeRange</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请选择请假时间&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">reason</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请填写请假原因&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ElementPlus</span>.<span class="title function_">locale</span>(<span class="title class_">ElementPlus</span>.<span class="property">lang</span>.<span class="property">zhCn</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>, <span class="title class_">ElementPlus</span>.<span class="property">lang</span>.<span class="property">zhCn</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="开发请假申请Mapper层"><a href="#开发请假申请Mapper层" class="headerlink" title="开发请假申请Mapper层"></a><strong>开发请假申请Mapper层</strong></h2><p><img src="/assets/image-20230109010248978.png" alt="image-20230109010248978" style="zoom:150%;" /></p><p><img src="/assets/image-20230109010300852.png" alt="image-20230109010300852" style="zoom:80%;" /></p><p>利用setter and getter和toString方法。</p><p><img src="/assets/image-20230109010417558.png" alt="image-20230109010417558" style="zoom: 150%;" /></p><p><img src="/assets/image-20230109010427523.png" alt="image-20230109010427523"  /></p><p><img src="/assets/image-20230109011857830.png" alt="image-20230109011857830" style="zoom:150%;" /></p><p><img src="/assets/image-20230109012336180.png" alt="image-20230109012336180"  /></p><p>这里可以利用一条垃圾数据来生成insert语句方便写入。</p><p><img src="/assets/image-20230109012500552.png" alt="image-20230109012500552"  /></p><p>再进行修改，记得这里用不到form_id，将其删去</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.example.oa.mapper.LeaveFormMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;org.example.oa.entity.LeaveForm&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO `imooc_oa`.`adm_leave_form` ( `employee_id`, `form_type`, `start_time`, `end_time`, `reason`, `create_time`, `state`)</span><br><span class="line">        VALUES ( #&#123;employeeId&#125;, #&#123;formType&#125;, #&#123;startTime&#125;,  #&#123;endTime&#125;, #&#123;reason&#125;, #&#123;createTime&#125;, #&#123;state&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再完善一下，加入主键。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.example.oa.mapper.LeaveFormMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;org.example.oa.entity.LeaveForm&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;formId&quot;</span> <span class="attr">keyColumn</span>=<span class="string">&quot;form_id&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO `imooc_oa`.`adm_leave_form` ( `employee_id`, `form_type`, `start_time`, `end_time`, `reason`, `create_time`, `state`)</span><br><span class="line">        VALUES ( #&#123;employeeId&#125;, #&#123;formType&#125;, #&#123;startTime&#125;,  #&#123;endTime&#125;, #&#123;reason&#125;, #&#123;createTime&#125;, #&#123;state&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>记得注册：</p><p><img src="/assets/image-20230109013722018.png" alt="image-20230109013722018"  /></p><p>测试一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">()</span> &#123;</span><br><span class="line">        MybatisUtils.executeUpdate(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">            <span class="type">LeaveForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveForm</span>();</span><br><span class="line">            form.setEmployeeId(<span class="number">4l</span>); <span class="comment">//员工编号</span></span><br><span class="line">            form.setFormType(<span class="number">1</span>); <span class="comment">//事假</span></span><br><span class="line">            <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">            <span class="type">Date</span> <span class="variable">startTime</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//起始时间</span></span><br><span class="line">            <span class="type">Date</span> <span class="variable">endTime</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//结束时间</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                startTime = sdf.parse(<span class="string">&quot;2020-03-25 08:00:00&quot;</span>);</span><br><span class="line">                endTime = sdf.parse(<span class="string">&quot;2020-04-01 18:00:00&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            form.setStartTime(startTime);</span><br><span class="line">            form.setEndTime(endTime);</span><br><span class="line">            form.setReason(<span class="string">&quot;回家探亲&quot;</span>);<span class="comment">//请假事由</span></span><br><span class="line">            form.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());<span class="comment">//创建时间</span></span><br><span class="line">            form.setState(<span class="string">&quot;processing&quot;</span>);<span class="comment">//当前状态</span></span><br><span class="line">            mapper.insert(form);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230109105118531.png" alt="image-20230109105118531"  /></p><p><img src="/assets/image-20230109105427434.png" alt="image-20230109105427434" style="zoom:150%;" /></p><p>form_id它会自动加一。</p><p><img src="/assets/image-20230109111302067.png" alt="image-20230109111302067"  /></p><p>同之前一样，setter getter and toString</p><p><img src="/assets/image-20230109111231127.png" alt="image-20230109111231127" style="zoom:150%;" /></p><p><img src="/assets/image-20230109111240790.png" alt="image-20230109111240790"  /></p><p><img src="/assets/image-20230109111546560.png" alt="image-20230109111546560"  /></p><p>insert语句还是从数据库中复制，并修改。</p><p>process_id和对应值要去掉。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.example.oa.mapper.ProcessFormMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;org.example.oa.entity.ProcessFlow&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;processId&quot;</span> <span class="attr">keyColumn</span>=<span class="string">&quot;process_id&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO `imooc_oa`.`adm_process_flow` ( `form_id`, `operator_id`, `action`, `result`, `reason`, `create_time`, `audit_time`, `order_no`, `state`, `is_last`)</span><br><span class="line">        VALUES (#&#123;formId&#125;, #&#123;operatorId&#125;, #&#123;action&#125;, #&#123;result&#125;, #&#123;reason&#125;, #&#123;createTime&#125;, #&#123;auditTime&#125;, #&#123;orderNo&#125;, #&#123;state&#125;, #&#123;isLast&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>记得注册：</p><p><img src="/assets/image-20230109112119087.png" alt="image-20230109112119087"  /></p><p>进行测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProcessFormMapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">()</span> &#123;</span><br><span class="line">        MybatisUtils.executeUpdate(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">ProcessFormMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(ProcessFormMapper.class);</span><br><span class="line">            <span class="type">ProcessFlow</span> <span class="variable">processFlow</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">            processFlow.setFormId(<span class="number">3l</span>);</span><br><span class="line">            processFlow.setOperatorId(<span class="number">2l</span>);</span><br><span class="line">            processFlow.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">            processFlow.setResult(<span class="string">&quot;approved&quot;</span>);</span><br><span class="line">            processFlow.setReason(<span class="string">&quot;同意&quot;</span>);</span><br><span class="line">            processFlow.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">            processFlow.setAuditTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">            processFlow.setOrderNo(<span class="number">1</span>);</span><br><span class="line">            processFlow.setState(<span class="string">&quot;ready&quot;</span>);</span><br><span class="line">            processFlow.setIsLast(<span class="number">1</span>);</span><br><span class="line">            mapper.insert(processFlow);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230109143039410.png" alt="image-20230109143039410"  /></p><p><img src="/assets/image-20230109143053755.png" alt="image-20230109143053755"  /></p><p>再处理notice表</p><p><img src="/assets/image-20230109143152428.png" alt="image-20230109143152428"  /></p><p>这里不仅要get set toSting方法，还要含参无参构造方法</p><p><img src="/assets/image-20230109143721743.png" alt="image-20230109143721743"  /></p><p>这里含参的是这两个参数，再修改一下，删去Date参数。如下：</p><p><img src="/assets/image-20230109143758417.png" alt="image-20230109143758417"  /></p><p><img src="/assets/image-20230109143923000.png" alt="image-20230109143923000" style="zoom:150%;" /></p><p><img src="/assets/image-20230109144128386.png" alt="image-20230109144128386"  /></p><p><img src="/assets/image-20230109144621392.png" alt="image-20230109144621392" style="zoom:150%;" /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.example.oa.mapper.NoticeMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;org.example.oa.entity.Notice&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;noticeId&quot;</span> <span class="attr">keyColumn</span>=<span class="string">&quot;notice_id&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO `sys_notice` (`receiver_id`, `content`, `create_time`)</span><br><span class="line">        VALUES (#&#123;receiverId&#125;, #&#123;content&#125;, #&#123;createTime&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注册：<img src="/assets/image-20230109144705174.png" alt="image-20230109144705174"  /></p><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NoticeMapperTest</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">()</span> &#123;</span><br><span class="line">        MybatisUtils.executeUpdate(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">NoticeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(NoticeMapper.class);</span><br><span class="line">            mapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(<span class="number">2l</span>, <span class="string">&quot;测试消息&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230109145834143.png" alt="image-20230109145834143"  /></p><p><img src="/assets/image-20230109145920937.png" alt="image-20230109145920937"  /></p><hr><h2 id="开发请假申请Service层"><a href="#开发请假申请Service层" class="headerlink" title="开发请假申请Service层"></a><strong>开发请假申请Service层</strong></h2><p><img src="/assets/image-20230109155108838.png" alt="image-20230109155108838" style="zoom:150%;" /></p><p><img src="/assets/image-20230109155115787.png" alt="image-20230109155115787"  /></p><p><img src="/assets/image-20230109160033584.png" alt="image-20230109160033584"  /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.example.oa.mapper.EmployeeMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.oa.entity.Employee&quot;</span>&gt;</span></span><br><span class="line">        select * from adm_employee where employee_id = #&#123;value&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByParams&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.util.Map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.oa.entity.Employee&quot;</span>&gt;</span></span><br><span class="line">        select * from adm_employee</span><br><span class="line">        where</span><br><span class="line">            1=1</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;level != null&quot;</span>&gt;</span></span><br><span class="line">            and level = #&#123;level&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;departmentId != null&quot;</span>&gt;</span></span><br><span class="line">            and department_id = #&#123;department&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">            and title = #&#123;title&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>都暂时先返回null，进行测试：</p><p><img src="/assets/image-20230109162741685.png" alt="image-20230109162741685" style="zoom: 150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Employee <span class="title function_">selectById</span><span class="params">(Long employeeId)</span>&#123;</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> (Employee) MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="keyword">return</span> mapper.selectById(employeeId);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> employee;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Employee <span class="title function_">selectLeader</span><span class="params">(Long employeeId)</span>&#123;</span><br><span class="line">        MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> mapper.selectById(employeeId);</span><br><span class="line">            <span class="keyword">if</span> (employee.getLevel() &lt; <span class="number">7</span>)&#123;</span><br><span class="line">                <span class="comment">//查询部门经理</span></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">7</span>)&#123;</span><br><span class="line">                <span class="comment">//查询总经理</span></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">8</span>)&#123;</span><br><span class="line">                <span class="comment">//返回自己</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230109163842091.png" alt="image-20230109163842091"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeaveFormService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建请假单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> form 前端输入的请假单数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 持久化的请假单对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> LeaveForm <span class="title function_">createLeaveForm</span><span class="params">(LeaveForm form)</span>&#123;</span><br><span class="line">        MybatisUtils.executeUpdate(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="comment">//1.持久化form表单数据，8级以下员工表单状态为processing，8级(总经理)状态为approved</span></span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">employeeMapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> employeeMapper.selectById(form.getEmployeeId());</span><br><span class="line">            <span class="keyword">if</span> (employee.getLevel() == <span class="number">8</span>)&#123;</span><br><span class="line">                form.setState(<span class="string">&quot;approved&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                form.setState(<span class="string">&quot;processing&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">leaveFormMapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">            leaveFormMapper.insert(form);</span><br><span class="line">            <span class="comment">//2.增加第一条流程数据，说明表单已提交，状态为complete</span></span><br><span class="line">            <span class="type">ProcessFlowMapper</span> <span class="variable">processFlowMapper</span> <span class="operator">=</span> sqlSession.getMapper(ProcessFlowMapper.class);</span><br><span class="line">            <span class="type">ProcessFlow</span> <span class="variable">flow1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">            flow1.setFormId(form.getFormId());</span><br><span class="line">            flow1.setOperatorId(employee.getEmployeeId());</span><br><span class="line">            flow1.setAction(<span class="string">&quot;apply&quot;</span>);</span><br><span class="line">            flow1.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">            flow1.setOrderNo(<span class="number">1</span>);</span><br><span class="line">            flow1.setState(<span class="string">&quot;complete&quot;</span>);</span><br><span class="line">            flow1.setIsLast(<span class="number">0</span>);</span><br><span class="line">            processFlowMapper.insert(flow1);</span><br><span class="line">            <span class="comment">//3.分情况创建其余流程数据</span></span><br><span class="line">            <span class="comment">//3.1 7级以下员工，生成部门经理审批任务，请假时间大于等于72小时，还需生成总经理审批任务</span></span><br><span class="line">            <span class="comment">//3.2 7级员工，仅生成总经理审批任务</span></span><br><span class="line">            <span class="comment">//3.3 8级员工，生成总经理审批任务，系统自动通过</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectByParams1</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Map</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    params.put(<span class="string">&quot;level&quot;</span>, <span class="number">7</span>);</span><br><span class="line">    params.put(<span class="string">&quot;department&quot;</span>, <span class="number">2</span>);</span><br><span class="line">    MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">        <span class="type">EmployeeMapper</span> <span class="variable">employeeMapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">        List&lt;Employee&gt; employees = employeeMapper.selectByParams(params);</span><br><span class="line">        <span class="keyword">return</span> employees;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectByParams2</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Map</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    params.put(<span class="string">&quot;level&quot;</span>, <span class="number">8</span>);</span><br><span class="line">    MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">        <span class="type">EmployeeMapper</span> <span class="variable">employeeMapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">        List&lt;Employee&gt; employees = employeeMapper.selectByParams(params);</span><br><span class="line">        <span class="keyword">return</span> employees;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于测试1：</p><p><img src="/assets/image-20230109162603453.png" alt="image-20230109162603453"  /></p><p>对于测试2：</p><p><img src="/assets/image-20230109162643466.png" alt="image-20230109162643466"  /></p><p>再回到EmployeeService补充完整</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.example.oa.entity.Employee;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.utils.MybatisUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Employee <span class="title function_">selectById</span><span class="params">(Long employeeId)</span>&#123;</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> (Employee) MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="keyword">return</span> mapper.selectById(employeeId);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> employee;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Employee <span class="title function_">selectLeader</span><span class="params">(Long employeeId)</span>&#123;</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">l</span> <span class="operator">=</span> (Employee)MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> mapper.selectById(employeeId);</span><br><span class="line">            <span class="type">Map</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">leader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (employee.getLevel() &lt; <span class="number">7</span>)&#123;</span><br><span class="line">                <span class="comment">//查询部门经理</span></span><br><span class="line">                params.put(<span class="string">&quot;level&quot;</span>, <span class="number">7</span>);</span><br><span class="line">                params.put(<span class="string">&quot;departmentId&quot;</span> ,employee.getDepartmentId());</span><br><span class="line">                List&lt;Employee&gt; employees = mapper.selectByParams(params);</span><br><span class="line">                leader = employees.get(<span class="number">0</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">7</span>)&#123;</span><br><span class="line">                <span class="comment">//查询总经理</span></span><br><span class="line">                params.put(<span class="string">&quot;level&quot;</span>, <span class="number">8</span>);</span><br><span class="line">                List&lt;Employee&gt; employees = mapper.selectByParams(params);</span><br><span class="line">                leader = employees.get(<span class="number">0</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">8</span>)&#123;</span><br><span class="line">                <span class="comment">//返回自己</span></span><br><span class="line">                leader = employee;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> leader;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>将LeaveFormService也补充完整</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.example.oa.entity.Employee;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.entity.LeaveForm;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.entity.ProcessFlow;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.LeaveFormMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.ProcessFlowMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.utils.MybatisUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeaveFormService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EmployeeService</span> <span class="variable">employeeService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmployeeService</span>();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建请假单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> form 前端输入的请假单数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 持久化的请假单对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> LeaveForm <span class="title function_">createLeaveForm</span><span class="params">(LeaveForm form)</span>&#123;</span><br><span class="line">        <span class="type">LeaveForm</span> <span class="variable">f</span> <span class="operator">=</span> (LeaveForm) MybatisUtils.executeUpdate(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="comment">//1.持久化form表单数据，8级以下员工表单状态为processing，8级(总经理)状态为approved</span></span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">employeeMapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> employeeMapper.selectById(form.getEmployeeId());</span><br><span class="line">            <span class="keyword">if</span> (employee.getLevel() == <span class="number">8</span>)&#123;</span><br><span class="line">                form.setState(<span class="string">&quot;approved&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                form.setState(<span class="string">&quot;processing&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">leaveFormMapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">            leaveFormMapper.insert(form);</span><br><span class="line">            <span class="comment">//2.增加第一条流程数据，说明表单已提交，状态为complete</span></span><br><span class="line">            <span class="type">ProcessFlowMapper</span> <span class="variable">processFlowMapper</span> <span class="operator">=</span> sqlSession.getMapper(ProcessFlowMapper.class);</span><br><span class="line">            <span class="type">ProcessFlow</span> <span class="variable">flow1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">            flow1.setFormId(form.getFormId());</span><br><span class="line">            flow1.setOperatorId(employee.getEmployeeId());</span><br><span class="line">            flow1.setAction(<span class="string">&quot;apply&quot;</span>);</span><br><span class="line">            flow1.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">            flow1.setOrderNo(<span class="number">1</span>);</span><br><span class="line">            flow1.setState(<span class="string">&quot;complete&quot;</span>);</span><br><span class="line">            flow1.setIsLast(<span class="number">0</span>);</span><br><span class="line">            processFlowMapper.insert(flow1);</span><br><span class="line">            <span class="comment">//3.分情况创建其余流程数据</span></span><br><span class="line">            <span class="comment">//3.1 7级以下员工，生成部门经理审批任务，请假时间大于等于72小时，还需生成总经理审批任务</span></span><br><span class="line">            <span class="keyword">if</span> (employee.getLevel() &lt; <span class="number">7</span>)&#123;</span><br><span class="line">                <span class="type">Employee</span> <span class="variable">dmanager</span> <span class="operator">=</span> employeeService.selectLeader(employee.getEmployeeId());</span><br><span class="line">                <span class="type">ProcessFlow</span> <span class="variable">flow2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                flow2.setFormId(form.getFormId());</span><br><span class="line">                flow2.setOperatorId(dmanager.getEmployeeId());</span><br><span class="line">                flow2.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                flow2.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setOrderNo(<span class="number">2</span>);</span><br><span class="line">                flow2.setState(<span class="string">&quot;process&quot;</span>);</span><br><span class="line">                <span class="type">long</span> <span class="variable">diff</span> <span class="operator">=</span> form.getEndTime().getTime() - form.getStartTime().getTime();</span><br><span class="line">                <span class="type">float</span> <span class="variable">hours</span> <span class="operator">=</span> diff / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>) * <span class="number">1f</span>;</span><br><span class="line">                <span class="keyword">if</span> (hours &gt;= <span class="number">72</span>) &#123;</span><br><span class="line">                    flow2.setIsLast(<span class="number">0</span>);</span><br><span class="line">                    processFlowMapper.insert(flow2);</span><br><span class="line">                    <span class="type">Employee</span> <span class="variable">manager</span> <span class="operator">=</span> employeeService.selectLeader(dmanager.getEmployeeId());</span><br><span class="line">                    <span class="type">ProcessFlow</span> <span class="variable">flow3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                    flow3.setFormId(form.getFormId());</span><br><span class="line">                    flow3.setOperatorId(manager.getEmployeeId());</span><br><span class="line">                    flow3.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                    flow3.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                    flow3.setState(<span class="string">&quot;ready&quot;</span>);</span><br><span class="line">                    flow3.setOrderNo(<span class="number">3</span>);</span><br><span class="line">                    flow3.setIsLast(<span class="number">1</span>);</span><br><span class="line">                    processFlowMapper.insert(flow3);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    flow2.setIsLast(<span class="number">1</span>);</span><br><span class="line">                    processFlowMapper.insert(flow2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">7</span>) &#123;</span><br><span class="line">                <span class="comment">//3.2 7级员工，仅生成总经理审批任务</span></span><br><span class="line">                <span class="type">Employee</span> <span class="variable">manager</span> <span class="operator">=</span> employeeService.selectLeader(employee.getEmployeeId());</span><br><span class="line">                <span class="type">ProcessFlow</span> <span class="variable">flow2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                flow2.setFormId(form.getFormId());</span><br><span class="line">                flow2.setOperatorId(manager.getEmployeeId());</span><br><span class="line">                flow2.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                flow2.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setState(<span class="string">&quot;process&quot;</span>);</span><br><span class="line">                flow2.setOrderNo(<span class="number">2</span>);</span><br><span class="line">                flow2.setIsLast(<span class="number">1</span>);</span><br><span class="line">                processFlowMapper.insert(flow2);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">8</span>)&#123;</span><br><span class="line">                <span class="comment">//3.3 8级员工，生成总经理审批任务，系统自动通过</span></span><br><span class="line">                <span class="type">ProcessFlow</span> <span class="variable">flow2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                flow2.setFormId(form.getFormId());</span><br><span class="line">                flow2.setOperatorId(employee.getEmployeeId());</span><br><span class="line">                flow2.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                flow2.setResult(<span class="string">&quot;approved&quot;</span>);</span><br><span class="line">                flow2.setReason(<span class="string">&quot;自动通过&quot;</span>);</span><br><span class="line">                flow2.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setAuditTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setState(<span class="string">&quot;complete&quot;</span>);</span><br><span class="line">                flow2.setOrderNo(<span class="number">2</span>);</span><br><span class="line">                flow2.setIsLast(<span class="number">1</span>);</span><br><span class="line">                processFlowMapper.insert(flow2);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> form;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeaveFormServiceTest</span> &#123;</span><br><span class="line">    <span class="type">LeaveFormService</span> <span class="variable">leaveFormService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveFormService</span>();</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createLeaveForm</span><span class="params">()</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMddHH&quot;</span>);</span><br><span class="line">        <span class="type">LeaveForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveForm</span>();</span><br><span class="line">        form.setEmployeeId(<span class="number">8l</span>);</span><br><span class="line">        form.setStartTime(sdf.parse(<span class="string">&quot;2020032608&quot;</span>));</span><br><span class="line">        form.setEndTime(sdf.parse(<span class="string">&quot;2020040118&quot;</span>));</span><br><span class="line">        form.setFormType(<span class="number">1</span>);</span><br><span class="line">        form.setReason(<span class="string">&quot;市场部员工请假单(72小时以上)&quot;</span>);</span><br><span class="line">        form.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">LeaveForm</span> <span class="variable">savedForm</span> <span class="operator">=</span> leaveFormService.createLeaveForm(form);</span><br><span class="line">        System.out.println(savedForm.getFormId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出了：10001</p><p><img src="/assets/image-20230110003127374.png" alt="image-20230110003127374"  /></p><p><img src="/assets/image-20230110003310809.png" alt="image-20230110003310809"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createLeaveForm2</span><span class="params">()</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">       <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMddHH&quot;</span>);</span><br><span class="line">       <span class="type">LeaveForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveForm</span>();</span><br><span class="line">       form.setEmployeeId(<span class="number">8l</span>);</span><br><span class="line">       form.setStartTime(sdf.parse(<span class="string">&quot;2020032608&quot;</span>));</span><br><span class="line">       form.setEndTime(sdf.parse(<span class="string">&quot;2020032718&quot;</span>));</span><br><span class="line">       form.setFormType(<span class="number">1</span>);</span><br><span class="line">       form.setReason(<span class="string">&quot;市场部员工请假单(72小时以内)&quot;</span>);</span><br><span class="line">       form.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">       <span class="type">LeaveForm</span> <span class="variable">savedForm</span> <span class="operator">=</span> leaveFormService.createLeaveForm(form);</span><br><span class="line">       System.out.println(savedForm.getFormId());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110003538481.png" alt="image-20230110003538481"  /></p><p><img src="/assets/image-20230110003618810.png" alt="image-20230110003618810"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createLeaveForm3</span><span class="params">()</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMddHH&quot;</span>);</span><br><span class="line">        <span class="type">LeaveForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveForm</span>();</span><br><span class="line">        form.setEmployeeId(<span class="number">2l</span>);</span><br><span class="line">        form.setStartTime(sdf.parse(<span class="string">&quot;2020032608&quot;</span>));</span><br><span class="line">        form.setEndTime(sdf.parse(<span class="string">&quot;2020040118&quot;</span>));</span><br><span class="line">        form.setFormType(<span class="number">1</span>);</span><br><span class="line">        form.setReason(<span class="string">&quot;研发部部门经理请假单&quot;</span>);</span><br><span class="line">        form.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">LeaveForm</span> <span class="variable">savedForm</span> <span class="operator">=</span> leaveFormService.createLeaveForm(form);</span><br><span class="line">        System.out.println(savedForm.getFormId());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110003937306.png" alt="image-20230110003937306"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createLeaveForm4</span><span class="params">()</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMddHH&quot;</span>);</span><br><span class="line">    <span class="type">LeaveForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveForm</span>();</span><br><span class="line">    form.setEmployeeId(<span class="number">1l</span>);</span><br><span class="line">    form.setStartTime(sdf.parse(<span class="string">&quot;2020032608&quot;</span>));</span><br><span class="line">    form.setEndTime(sdf.parse(<span class="string">&quot;2020040118&quot;</span>));</span><br><span class="line">    form.setFormType(<span class="number">1</span>);</span><br><span class="line">    form.setReason(<span class="string">&quot;总经理请假单&quot;</span>);</span><br><span class="line">    form.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="type">LeaveForm</span> <span class="variable">savedForm</span> <span class="operator">=</span> leaveFormService.createLeaveForm(form);</span><br><span class="line">    System.out.println(savedForm.getFormId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110004240026.png" alt="image-20230110004240026"  /></p><hr><h2 id="开发请假Controller层"><a href="#开发请假Controller层" class="headerlink" title="开发请假Controller层"></a><strong>开发请假Controller层</strong></h2><p><img src="/assets/image-20230110004444053.png" alt="image-20230110004444053" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/api/leave/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeaveFormServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">LeaveFormService</span> <span class="variable">leaveFormService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveFormService</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//http://localhost/api/leave/create</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> request.getRequestURI();</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> url.substring(url.lastIndexOf(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (methodName.equals(<span class="string">&quot;create&quot;</span>))&#123;</span><br><span class="line">            <span class="built_in">this</span>.create(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (methodName.equals(<span class="string">&quot;list&quot;</span>)) &#123;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (methodName.equals(<span class="string">&quot;audit&quot;</span>)) &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">create</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">strEmployeeId</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;eid&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">formType</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;formType&quot;</span>);</span><br><span class="line">        <span class="comment">//从1970到现在的毫秒数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">startTime</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;startTime&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">endTime</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;endTime&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">reason</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;reason&quot;</span>);</span><br><span class="line">        <span class="type">LeaveForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LeaveForm</span>();</span><br><span class="line">        form.setEmployeeId(Long.parseLong(strEmployeeId));</span><br><span class="line">        form.setStartTime(<span class="keyword">new</span> <span class="title class_">Date</span>(Long.parseLong(startTime)));</span><br><span class="line">        form.setEndTime(<span class="keyword">new</span> <span class="title class_">Date</span>(Long.parseLong(endTime)));</span><br><span class="line">        form.setFormType(Integer.parseInt(formType));</span><br><span class="line">        form.setReason(reason);</span><br><span class="line">        form.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">ResponseUtils</span> <span class="variable">resp</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            leaveFormService.createLeaveForm(form);</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>(e.getClass().getSimpleName(), e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        response.getWriter().println(resp.toJsonString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="开发请假申请View层"><a href="#开发请假申请View层" class="headerlink" title="开发请假申请View层"></a><strong>开发请假申请View层</strong></h2><p>来到leave_form.html</p><p>在<script\>中补充 employee:{}和mounted()</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">employee</span>:&#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">department</span>:&#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">formType</span>: <span class="string">&quot;1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">timeRange</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">startTime</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">endTime</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">reason</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">eid</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 表单验证，需要在 el-form-item 元素中增加 prop 属性</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">rules</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">timeRange</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请选择请假时间&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">reason</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请填写请假原因&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        ,<span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">changeTimeRange</span>: <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">form</span>.<span class="property">timeRange</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        ,<span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> objApp = <span class="variable language_">this</span>;</span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">get</span>(<span class="string">&quot;/api/user_info?uid=&quot;</span> + <span class="variable language_">sessionStorage</span>.<span class="property">uid</span> + <span class="string">&quot;&amp;eid=&quot;</span> + <span class="variable language_">sessionStorage</span>.<span class="property">eid</span>)</span></span><br><span class="line"><span class="language-javascript">            .<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">response</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(response);</span></span><br><span class="line"><span class="language-javascript">                objApp.<span class="property">employee</span> = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">employee</span>;</span></span><br><span class="line"><span class="language-javascript">                objApp.<span class="property">department</span> = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">department</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ElementPlus</span>.<span class="title function_">locale</span>(<span class="title class_">ElementPlus</span>.<span class="property">lang</span>.<span class="property">zhCn</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>, <span class="title class_">ElementPlus</span>.<span class="property">lang</span>.<span class="property">zhCn</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110152730594.png" alt="image-20230110152730594"  /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">objApp.employee = response.data.data.employee;</span><br><span class="line">objApp.department = response.data.data.department;</span><br></pre></td></tr></table></figure><p>为传入数据，将姓名填充到申请单上。</p><p>增加部门类</p><p><img src="/assets/image-20230110153647806.png" alt="image-20230110153647806" style="zoom:150%;" /></p><p><img src="/assets/image-20230110153846637.png" alt="image-20230110153846637" style="zoom:80%;" /></p><p>增加部门接口</p><p><img src="/assets/image-20230110153838001.png" alt="image-20230110153838001" style="zoom:150%;" /></p><p><img src="/assets/image-20230110153858203.png" alt="image-20230110153858203"  /></p><p>添加xml：</p><p><img src="/assets/image-20230110154132194.png" alt="image-20230110154132194" style="zoom:150%;" /></p><p><img src="/assets/image-20230110154148105.png" alt="image-20230110154148105"  /></p><p>注册：</p><p><img src="/assets/image-20230110154220244.png" alt="image-20230110154220244" style="zoom:150%;" /></p><p>添加业务</p><p><img src="/assets/image-20230110154312458.png" alt="image-20230110154312458"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.oa.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.oa.entity.Department;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.DepartmentMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.utils.MybatisUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DepartmentService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Department <span class="title function_">selectById</span><span class="params">(Long departmentId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (Department) MybatisUtils.executeQuery(sqlSession -&gt; sqlSession.getMapper(DepartmentMapper.class).selectById(departmentId));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样写语句虽然比较长，但比之前多行写的体验更好些。(开发小技巧)</p><p>最后在</p><p><img src="/assets/image-20230110155039148.png" alt="image-20230110155039148" style="zoom: 150%;" /></p><p>controller进行补充：</p><p><img src="/assets/image-20230110155112081.png" alt="image-20230110155112081"  /></p><p><img src="/assets/image-20230110155209968.png" alt="image-20230110155209968" style="zoom:80%;" /></p><p><img src="/assets/image-20230110162521084.png" alt="image-20230110162521084"  /></p><p><strong>开发请假审批功能</strong></p><p><img src="/assets/image-20230110145515401.png" alt="image-20230110145515401"  /></p><p>在webapp中新建audit.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/assets/element-plus/index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> &gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-class">.el-col</span>,<span class="selector-class">.info</span> <span class="selector-class">.el-select</span> ,<span class="selector-class">.info</span> <span class="selector-class">.el-input</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-bottom</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>请假审批<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span></span></span><br><span class="line"><span class="tag">            <span class="attr">ref</span>=<span class="string">&quot;singleTable&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">highlight-current-row</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">current-change</span>=<span class="string">&quot;handleCurrentChange&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">type</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;ctime&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;申请时间&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;ftype&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;类型&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;department_name&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;name&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;员工&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;stime&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;起始时间&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;etime&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;结束时间&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;reason&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;请假原因&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">&quot;请假审批&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;dialogFormVisible&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-descriptions</span>  <span class="attr">:column</span>=<span class="string">&quot;2&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span>&gt;</span>&#123;&#123;currentRow.department_name&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span>&#123;&#123;currentRow.name&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;起始时间&quot;</span> &gt;</span>&#123;&#123;currentRow.stime&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;结束时间&quot;</span> &gt;</span>&#123;&#123;currentRow.etime&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;请假原因&quot;</span> <span class="attr">:span</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;currentRow.reason&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-descriptions</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;auditForm&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;form.result&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;是否同意&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;同意&quot;</span> <span class="attr">value</span>=<span class="string">&quot;approved&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;驳回&quot;</span> <span class="attr">value</span>=<span class="string">&quot;refused&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.reason&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入审批意见&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;onSubmit(&#x27;auditForm&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span>确认提交<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">formatDate</span>(<span class="params">time</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> newDate = <span class="keyword">new</span> <span class="title class_">Date</span>(time);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> newDate.<span class="title function_">getFullYear</span>() + <span class="string">&quot;-&quot;</span> +</span></span><br><span class="line"><span class="language-javascript">            (newDate.<span class="title function_">getMonth</span>() + <span class="number">1</span>) + <span class="string">&quot;-&quot;</span> + newDate.<span class="title function_">getDate</span>()</span></span><br><span class="line"><span class="language-javascript">            + <span class="string">&quot; &quot;</span> + newDate.<span class="title function_">getHours</span>() + <span class="string">&quot;时&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">dialogFormVisible</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">result</span>:<span class="string">&quot;approved&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">reason</span>:<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">formLabelWidth</span>: <span class="string">&#x27;120px&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">tableData</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">ctime</span>:<span class="string">&quot;2021-5-29 18时&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">ftype</span>:<span class="string">&quot;事假&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stime</span>:<span class="string">&quot;2021-5-31 0时&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">etime</span>:<span class="string">&quot;2021-6-3 0时&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">department_name</span>:<span class="string">&quot;研发部&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&quot;王美美&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">reason</span>:<span class="string">&quot;测试数据&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;],</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">currentRow</span>: <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        ,<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleCurrentChange</span>(<span class="params">val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">currentRow</span> = val;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(val);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">dialogFormVisible</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="开发待审批表单Model层"><a href="#开发待审批表单Model层" class="headerlink" title="开发待审批表单Model层"></a><strong>开发待审批表单Model层</strong></h2><p><img src="/assets/image-20230110173203732.png" alt="image-20230110173203732" style="zoom:150%;" /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByParams&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.util.Map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.util.LinkedHashMap&quot;</span>&gt;</span></span><br><span class="line">        select f.*, e.name, d.*</span><br><span class="line">        from</span><br><span class="line">            adm_leave_form f,adm_process_flow pf, adm_employee e, adm_department d</span><br><span class="line">        where</span><br><span class="line">            f.form_id = pf.form_id</span><br><span class="line">            and f.employee_id = e.employee_id</span><br><span class="line">            and e.department_id = d.department_id</span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;pf_state != null&quot;</span>&gt;</span></span><br><span class="line">                and pf.state = #&#123;pf_state&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;pf_operator_id != null&quot;</span>&gt;</span></span><br><span class="line">                and pf.operator_id = #&#123;pf_operator_id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110173240728.png" alt="image-20230110173240728" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">LeaveFormMapper</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(LeaveForm form)</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        public List&lt;Map&gt; selectByParams(Map params);</span></span><br><span class="line"><span class="comment">            map.put(&quot;pf_operator_id&quot;, xxxx)</span></span><br><span class="line"><span class="comment">            map.put(&quot;pf_state&quot;, xxxx)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">selectByParams</span><span class="params">(<span class="meta">@Param(&quot;pf_state&quot;)</span> String pfState</span></span><br><span class="line"><span class="params">            , <span class="meta">@Param(&quot;pf_operator_id&quot;)</span> Long pfOperatorId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectByParams</span><span class="params">()</span>&#123;</span><br><span class="line">        MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">           List&lt;Map&gt; list = mapper.selectByParams(<span class="string">&quot;process&quot;</span>, <span class="number">2l</span>);</span><br><span class="line">            System.out.println(list);</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110213101964.png" alt="image-20230110213101964"  /></p><p><img src="/assets/image-20230110213412316.png" alt="image-20230110213412316"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">getLeaveFormList</span><span class="params">(String pfState, Long operatorId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;Map&gt;) MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">            List&lt;Map&gt; maps = mapper.selectByParams(pfState, operatorId);</span><br><span class="line">            <span class="keyword">return</span>  maps;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="实现查询待审批请假单"><a href="#实现查询待审批请假单" class="headerlink" title="实现查询待审批请假单"></a><strong>实现查询待审批请假单</strong></h2><p><img src="/assets/image-20230110213550967.png" alt="image-20230110213550967" style="zoom:150%;" /></p><p> 添加list方法</p><p><img src="/assets/image-20230110221134189.png" alt="image-20230110221134189"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">employeeId</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;eid&quot;</span>);</span><br><span class="line">       <span class="type">ResponseUtils</span> <span class="variable">resp</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">try</span>&#123;</span><br><span class="line">       List&lt;Map&gt; formList = leaveFormService.getLeaveFormList(<span class="string">&quot;process&quot;</span>, Long.parseLong(employeeId));</span><br><span class="line">       resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>().put(<span class="string">&quot;list&quot;</span>, formList);</span><br><span class="line">       &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">           resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>(e.getClass().getSimpleName(), e.getMessage());</span><br><span class="line">       &#125;</span><br><span class="line">       response.getWriter().println(resp.toJsonString());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>audit.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/assets/element-plus/index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-class">.el-col</span>, <span class="selector-class">.info</span> <span class="selector-class">.el-select</span>, <span class="selector-class">.info</span> <span class="selector-class">.el-input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-bottom</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>请假审批<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span></span></span><br><span class="line"><span class="tag">            <span class="attr">ref</span>=<span class="string">&quot;singleTable&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">highlight-current-row</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">current-change</span>=<span class="string">&quot;handleCurrentChange&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">type</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;ctime&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;申请时间&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;ftype&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;类型&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;department_name&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;name&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;员工&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;stime&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;起始时间&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;etime&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;结束时间&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;reason&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;请假原因&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">&quot;请假审批&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;dialogFormVisible&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-descriptions</span> <span class="attr">:column</span>=<span class="string">&quot;2&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span>&gt;</span>&#123;&#123;currentRow.department_name&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span>&#123;&#123;currentRow.name&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;起始时间&quot;</span>&gt;</span>&#123;&#123;currentRow.stime&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;结束时间&quot;</span>&gt;</span>&#123;&#123;currentRow.etime&#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;请假原因&quot;</span> <span class="attr">:span</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;currentRow.reason&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-descriptions</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;auditForm&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;form.result&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;是否同意&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;同意&quot;</span> <span class="attr">value</span>=<span class="string">&quot;approved&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;驳回&quot;</span> <span class="attr">value</span>=<span class="string">&quot;refused&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.reason&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入审批意见&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;onSubmit(&#x27;auditForm&#x27;)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span>确认提交<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">formatDate</span>(<span class="params">time</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> newDate = <span class="keyword">new</span> <span class="title class_">Date</span>(time);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> newDate.<span class="title function_">getFullYear</span>() + <span class="string">&quot;-&quot;</span> +</span></span><br><span class="line"><span class="language-javascript">            (newDate.<span class="title function_">getMonth</span>() + <span class="number">1</span>) + <span class="string">&quot;-&quot;</span> + newDate.<span class="title function_">getDate</span>()</span></span><br><span class="line"><span class="language-javascript">            + <span class="string">&quot; &quot;</span> + newDate.<span class="title function_">getHours</span>() + <span class="string">&quot;时&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">dialogFormVisible</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">result</span>: <span class="string">&quot;approved&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">reason</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">formLabelWidth</span>: <span class="string">&#x27;120px&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">tableData</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">ctime</span>: <span class="string">&quot;2021-5-29 18时&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">ftype</span>: <span class="string">&quot;事假&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">stime</span>: <span class="string">&quot;2021-5-31 0时&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">etime</span>: <span class="string">&quot;2021-6-3 0时&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">department_name</span>: <span class="string">&quot;研发部&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">name</span>: <span class="string">&quot;王美美&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">reason</span>: <span class="string">&quot;测试数据&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">currentRow</span>: <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            , <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">handleCurrentChange</span>(<span class="params">val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">currentRow</span> = val;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(val);</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">dialogFormVisible</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            , <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> objApp = <span class="variable language_">this</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> $message = <span class="variable language_">this</span>.<span class="property">$message</span>;</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">get</span>(<span class="string">&quot;/api/leave/list?eid=&quot;</span> + <span class="variable language_">sessionStorage</span>.<span class="property">eid</span>)</span></span><br><span class="line"><span class="language-javascript">                    .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">const</span> json = response.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (json.<span class="property">code</span> == <span class="string">&#x27;0&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                            objApp.<span class="property">tableData</span>.<span class="title function_">splice</span>(<span class="number">0</span>, objApp.<span class="property">tableData</span>.<span class="property">length</span>);</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">const</span> formList = json.<span class="property">data</span>.<span class="property">list</span>;</span></span><br><span class="line"><span class="language-javascript">                            formList.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">switch</span> (item.<span class="property">form_type</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="language-javascript">                                        item.<span class="property">ftype</span> = <span class="string">&quot;事假&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="language-javascript">                                        item.<span class="property">ftype</span> = <span class="string">&quot;工伤假&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">case</span> <span class="number">3</span>:</span></span><br><span class="line"><span class="language-javascript">                                        item.<span class="property">ftype</span> = <span class="string">&quot;事假&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">case</span> <span class="number">4</span>:</span></span><br><span class="line"><span class="language-javascript">                                        item.<span class="property">ftype</span> = <span class="string">&quot;婚假&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">case</span> <span class="number">5</span>:</span></span><br><span class="line"><span class="language-javascript">                                        item.<span class="property">ftype</span> = <span class="string">&quot;产假&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">case</span> <span class="number">6</span>:</span></span><br><span class="line"><span class="language-javascript">                                        item.<span class="property">ftype</span> = <span class="string">&quot;丧假&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                                objApp.<span class="property">tableData</span>.<span class="title function_">push</span>(item);</span></span><br><span class="line"><span class="language-javascript">                            &#125;)</span></span><br><span class="line"><span class="language-javascript">                        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                            $message.<span class="title function_">error</span>(&#123;<span class="attr">message</span>: json.<span class="property">message</span>, <span class="attr">offset</span>: <span class="number">100</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="开发请假审批Mapper层"><a href="#开发请假审批Mapper层" class="headerlink" title="开发请假审批Mapper层"></a><strong>开发请假审批Mapper层</strong></h2><p><img src="/assets/image-20230110230955640.png" alt="image-20230110230955640" style="zoom:150%;" /></p><p>添加update语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;org.example.oa.entity.LeaveForm&quot;</span>&gt;</span></span><br><span class="line">        UPDATE adm_leave_form SET employee_id = #&#123;employeeId&#125; , form_type = #&#123;formType&#125;, start_time = #&#123;startTime&#125;, end_time = #&#123;endTime&#125;, reason = #&#123;reason&#125;, state = #&#123;state&#125; ,create_time = #&#123;createTime&#125; WHERE form_id = #&#123;formId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110231042810.png" alt="image-20230110231042810" style="zoom:150%;" /></p><p><img src="/assets/image-20230110231353025.png" alt="image-20230110231353025"  /></p><p><img src="/assets/image-20230110231417026.png" alt="image-20230110231417026"  /></p><p>添加update语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;org.example.oa.entity.ProcessFlow&quot;</span>&gt;</span></span><br><span class="line">    UPDATE adm_process_flow SET form_id = #&#123;formId&#125;, operator_id = #&#123;operatorId&#125;, action = #&#123;action&#125;, result = #&#123;result&#125;, reason = #&#123;reason&#125;, create_time = #&#123;createTime&#125;, audit_time = #&#123;auditTime&#125;, order_no = #&#123;orderNo&#125;, state = #&#123;state&#125;, is_last = #&#123;isLast&#125;</span><br><span class="line">    WHERE process_id = #&#123;processId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110231457277.png" alt="image-20230110231457277" style="zoom:150%;" /></p><p><img src="/assets/image-20230110231447737.png" alt="image-20230110231447737"  /></p><p><img src="/assets/image-20230110231639542.png" alt="image-20230110231639542" style="zoom:150%;" /></p><p>再添加查询语句：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.oa.entity.LeaveForm&quot;</span>&gt;</span></span><br><span class="line">    select * from adm_leave_form where form_id = #&#123;value&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230110231730202.png" alt="image-20230110231730202" style="zoom:150%;" /></p><p><img src="/assets/image-20230110231808503.png" alt="image-20230110231808503"  /></p><p><img src="/assets/image-20230110231834100.png" alt="image-20230110231834100"  /></p><p>添加查询语句：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByFormId&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;org.example.oa.entity.ProcessFlow&quot;</span>&gt;</span></span><br><span class="line">    select * from adm_process_flow where form_id = #&#123;value&#125; order by order_no</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定义方法：</p><p><img src="/assets/image-20230110232108530.png" alt="image-20230110232108530"  /></p><h2 id="开发请假审批Service层"><a href="#开发请假审批Service层" class="headerlink" title="开发请假审批Service层"></a><strong>开发请假审批Service层</strong></h2><p><img src="/assets/image-20230110232303405.png" alt="image-20230110232303405" style="zoom:150%;" /></p><p>添加对应审核方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.oa.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.oa.entity.Employee;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.entity.LeaveForm;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.entity.ProcessFlow;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.LeaveFormMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.mapper.ProcessFlowMapper;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.service.exception.LeaveFormException;</span><br><span class="line"><span class="keyword">import</span> org.example.oa.utils.MybatisUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeaveFormService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EmployeeService</span> <span class="variable">employeeService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmployeeService</span>();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建请假单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> form 前端输入的请假单数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 持久化的请假单对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> LeaveForm <span class="title function_">createLeaveForm</span><span class="params">(LeaveForm form)</span>&#123;</span><br><span class="line">        <span class="type">LeaveForm</span> <span class="variable">f</span> <span class="operator">=</span> (LeaveForm) MybatisUtils.executeUpdate(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="comment">//1.持久化form表单数据，8级以下员工表单状态为processing，8级(总经理)状态为approved</span></span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">employeeMapper</span> <span class="operator">=</span> sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> employeeMapper.selectById(form.getEmployeeId());</span><br><span class="line">            <span class="keyword">if</span> (employee.getLevel() == <span class="number">8</span>)&#123;</span><br><span class="line">                form.setState(<span class="string">&quot;approved&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                form.setState(<span class="string">&quot;processing&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">leaveFormMapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">            leaveFormMapper.insert(form);</span><br><span class="line">            <span class="comment">//2.增加第一条流程数据，说明表单已提交，状态为complete</span></span><br><span class="line">            <span class="type">ProcessFlowMapper</span> <span class="variable">processFlowMapper</span> <span class="operator">=</span> sqlSession.getMapper(ProcessFlowMapper.class);</span><br><span class="line">            <span class="type">ProcessFlow</span> <span class="variable">flow1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">            flow1.setFormId(form.getFormId());</span><br><span class="line">            flow1.setOperatorId(employee.getEmployeeId());</span><br><span class="line">            flow1.setAction(<span class="string">&quot;apply&quot;</span>);</span><br><span class="line">            flow1.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">            flow1.setOrderNo(<span class="number">1</span>);</span><br><span class="line">            flow1.setState(<span class="string">&quot;complete&quot;</span>);</span><br><span class="line">            flow1.setIsLast(<span class="number">0</span>);</span><br><span class="line">            processFlowMapper.insert(flow1);</span><br><span class="line">            <span class="comment">//3.分情况创建其余流程数据</span></span><br><span class="line">            <span class="comment">//3.1 7级以下员工，生成部门经理审批任务，请假时间大于等于72小时，还需生成总经理审批任务</span></span><br><span class="line">            <span class="keyword">if</span> (employee.getLevel() &lt; <span class="number">7</span>)&#123;</span><br><span class="line">                <span class="type">Employee</span> <span class="variable">dmanager</span> <span class="operator">=</span> employeeService.selectLeader(employee.getEmployeeId());</span><br><span class="line">                <span class="type">ProcessFlow</span> <span class="variable">flow2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                flow2.setFormId(form.getFormId());</span><br><span class="line">                flow2.setOperatorId(dmanager.getEmployeeId());</span><br><span class="line">                flow2.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                flow2.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setOrderNo(<span class="number">2</span>);</span><br><span class="line">                flow2.setState(<span class="string">&quot;process&quot;</span>);</span><br><span class="line">                <span class="type">long</span> <span class="variable">diff</span> <span class="operator">=</span> form.getEndTime().getTime() - form.getStartTime().getTime();</span><br><span class="line">                <span class="type">float</span> <span class="variable">hours</span> <span class="operator">=</span> diff / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>) * <span class="number">1f</span>;</span><br><span class="line">                <span class="keyword">if</span> (hours &gt;= <span class="number">72</span>) &#123;</span><br><span class="line">                    flow2.setIsLast(<span class="number">0</span>);</span><br><span class="line">                    processFlowMapper.insert(flow2);</span><br><span class="line">                    <span class="type">Employee</span> <span class="variable">manager</span> <span class="operator">=</span> employeeService.selectLeader(dmanager.getEmployeeId());</span><br><span class="line">                    <span class="type">ProcessFlow</span> <span class="variable">flow3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                    flow3.setFormId(form.getFormId());</span><br><span class="line">                    flow3.setOperatorId(manager.getEmployeeId());</span><br><span class="line">                    flow3.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                    flow3.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                    flow3.setState(<span class="string">&quot;ready&quot;</span>);</span><br><span class="line">                    flow3.setOrderNo(<span class="number">3</span>);</span><br><span class="line">                    flow3.setIsLast(<span class="number">1</span>);</span><br><span class="line">                    processFlowMapper.insert(flow3);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    flow2.setIsLast(<span class="number">1</span>);</span><br><span class="line">                    processFlowMapper.insert(flow2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">7</span>) &#123;</span><br><span class="line">                <span class="comment">//3.2 7级员工，仅生成总经理审批任务</span></span><br><span class="line">                <span class="type">Employee</span> <span class="variable">manager</span> <span class="operator">=</span> employeeService.selectLeader(employee.getEmployeeId());</span><br><span class="line">                <span class="type">ProcessFlow</span> <span class="variable">flow2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                flow2.setFormId(form.getFormId());</span><br><span class="line">                flow2.setOperatorId(manager.getEmployeeId());</span><br><span class="line">                flow2.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                flow2.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setState(<span class="string">&quot;process&quot;</span>);</span><br><span class="line">                flow2.setOrderNo(<span class="number">2</span>);</span><br><span class="line">                flow2.setIsLast(<span class="number">1</span>);</span><br><span class="line">                processFlowMapper.insert(flow2);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (employee.getLevel() == <span class="number">8</span>)&#123;</span><br><span class="line">                <span class="comment">//3.3 8级员工，生成总经理审批任务，系统自动通过</span></span><br><span class="line">                <span class="type">ProcessFlow</span> <span class="variable">flow2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessFlow</span>();</span><br><span class="line">                flow2.setFormId(form.getFormId());</span><br><span class="line">                flow2.setOperatorId(employee.getEmployeeId());</span><br><span class="line">                flow2.setAction(<span class="string">&quot;audit&quot;</span>);</span><br><span class="line">                flow2.setResult(<span class="string">&quot;approved&quot;</span>);</span><br><span class="line">                flow2.setReason(<span class="string">&quot;自动通过&quot;</span>);</span><br><span class="line">                flow2.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setAuditTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                flow2.setState(<span class="string">&quot;complete&quot;</span>);</span><br><span class="line">                flow2.setOrderNo(<span class="number">2</span>);</span><br><span class="line">                flow2.setIsLast(<span class="number">1</span>);</span><br><span class="line">                processFlowMapper.insert(flow2);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> form;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">getLeaveFormList</span><span class="params">(String pfState, Long operatorId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;Map&gt;) MybatisUtils.executeQuery(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">            List&lt;Map&gt; maps = mapper.selectByParams(pfState, operatorId);</span><br><span class="line">            <span class="keyword">return</span>  maps;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 审核请假单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> formId 表单编号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> operatorId 经办人(当前登录员工)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> result 审批结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> reason 审批意见</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">audit</span><span class="params">(Long formId, Long operatorId, String result, String reason)</span>&#123;</span><br><span class="line">        MybatisUtils.executeUpdate(sqlSession -&gt; &#123;</span><br><span class="line">            <span class="type">ProcessFlowMapper</span> <span class="variable">processFlowMapper</span> <span class="operator">=</span> sqlSession.getMapper(ProcessFlowMapper.class);</span><br><span class="line">            List&lt;ProcessFlow&gt; flowList = processFlowMapper.selectByFormId(formId);</span><br><span class="line">            <span class="keyword">if</span> (flowList.size() == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">LeaveFormException</span>(<span class="string">&quot;无效的审批流程&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取当前任务ProcessFlow对象</span></span><br><span class="line">            List&lt;ProcessFlow&gt; processList = flowList.stream().filter(p-&gt;p.getOperatorId() == operatorId &amp;&amp; p.getState().equals(<span class="string">&quot;process&quot;</span>)).collect(Collectors.toList());</span><br><span class="line">            <span class="type">ProcessFlow</span> <span class="variable">process</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (processList.size() == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">LeaveFormException</span>(<span class="string">&quot;未找到待处理任务节点&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                process = processList.get(<span class="number">0</span>);</span><br><span class="line">                process.setState(<span class="string">&quot;complete&quot;</span>);</span><br><span class="line">                process.setResult(result);</span><br><span class="line">                process.setReason(reason);</span><br><span class="line">                process.setAuditTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">                processFlowMapper.update(process);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">LeaveFormMapper</span> <span class="variable">leaveFormMapper</span> <span class="operator">=</span> sqlSession.getMapper(LeaveFormMapper.class);</span><br><span class="line">            <span class="type">LeaveForm</span> <span class="variable">form</span> <span class="operator">=</span> leaveFormMapper.selectById(formId);</span><br><span class="line">            <span class="comment">//如果当前任务是最后一个节点，代表流程结束，更新请假单状态为对应的approved/refused</span></span><br><span class="line">            <span class="keyword">if</span> (process.getIsLast() == <span class="number">1</span>)&#123;</span><br><span class="line">                form.setState(result); <span class="comment">// approved / refused</span></span><br><span class="line">                leaveFormMapper.update(form);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//readyList包含所以后续任务节点</span></span><br><span class="line">                List&lt;ProcessFlow&gt; readyList = flowList.stream().filter(p -&gt; p.getState().equals(<span class="string">&quot;ready&quot;</span>)).collect(Collectors.toList());</span><br><span class="line">                <span class="comment">//如果当前任务不是最后一个节点且审批通过，那下一个节点的状态从ready变为process</span></span><br><span class="line">                <span class="keyword">if</span> (result.equals(<span class="string">&quot;approved&quot;</span>))&#123;</span><br><span class="line">                    <span class="type">ProcessFlow</span> <span class="variable">readyProcess</span> <span class="operator">=</span> readyList.get(<span class="number">0</span>);</span><br><span class="line">                    readyProcess.setState(<span class="string">&quot;process&quot;</span>);</span><br><span class="line">                    processFlowMapper.update(readyProcess);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (result.equals(<span class="string">&quot;refused&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">//如果当前任务不是最后一个节点且审批驳回，则后续所有任务状态变为cancel，请假单状态变为refused</span></span><br><span class="line">                    <span class="keyword">for</span> (ProcessFlow p:readyList)&#123;</span><br><span class="line">                        p.setState(<span class="string">&quot;cancel&quot;</span>);</span><br><span class="line">                        processFlowMapper.update(p);</span><br><span class="line">                    &#125;</span><br><span class="line">                    form.setState(<span class="string">&quot;refused&quot;</span>);</span><br><span class="line">                    leaveFormMapper.update(form);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 处理异常方法：</p><p><img src="/assets/image-20230111002323732.png" alt="image-20230111002323732" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeaveFormException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LeaveFormException</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现请假审批功能"><a href="#实现请假审批功能" class="headerlink" title="实现请假审批功能"></a><strong>实现请假审批功能</strong></h2><p><img src="/assets/image-20230111003240603.png" alt="image-20230111003240603" style="zoom:150%;" /></p><p><img src="/assets/image-20230111003336517.png" alt="image-20230111003336517" style="zoom:150%;" /></p><p>在最下面添加audit方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">audit</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">formId</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;formId&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;result&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">reason</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;reason&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">eid</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;eid&quot;</span>);</span><br><span class="line">        <span class="type">ResponseUtils</span> <span class="variable">resp</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            leaveFormService.audit(Long.parseLong(formId),Long.parseLong(eid), result, reason);</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>((e.getClass().getSimpleName()),e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        response.getWriter().println(resp.toJsonString());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230111003735529.png" alt="image-20230111003735529" style="zoom:150%;" /></p><p><img src="/assets/image-20230111003818394.png" alt="image-20230111003818394"  /></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">,<span class="attr">methods</span>: &#123;</span><br><span class="line">            <span class="title function_">handleCurrentChange</span>(<span class="params">val</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">currentRow</span> = val;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">info</span>(val);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">dialogFormVisible</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ,<span class="title function_">onSubmit</span>(<span class="params">formName</span>)&#123;</span><br><span class="line">                <span class="keyword">const</span> objApp = <span class="variable language_">this</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">$refs</span>[formName].<span class="title function_">validate</span>(<span class="keyword">function</span>(<span class="params">valid</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(valid)&#123;</span><br><span class="line">                        <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>();</span><br><span class="line">                        params.<span class="title function_">append</span>(<span class="string">&quot;formId&quot;</span>, objApp.<span class="property">currentRow</span>.<span class="property">form_id</span>);</span><br><span class="line">                        params.<span class="title function_">append</span>(<span class="string">&quot;result&quot;</span>, objApp.<span class="property">form</span>.<span class="property">result</span>);</span><br><span class="line">                        params.<span class="title function_">append</span>(<span class="string">&quot;reason&quot;</span>, objApp.<span class="property">form</span>.<span class="property">reason</span>);</span><br><span class="line">                        params.<span class="title function_">append</span>(<span class="string">&quot;eid&quot;</span>, <span class="variable language_">sessionStorage</span>.<span class="property">eid</span>);</span><br><span class="line">                        axios.<span class="title function_">post</span>(<span class="string">&quot;/api/leave/audit&quot;</span> , params)</span><br><span class="line">                            .<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">response</span>)&#123;</span><br><span class="line">                                <span class="keyword">const</span> json = response.<span class="property">data</span>;</span><br><span class="line">                                <span class="variable language_">console</span>.<span class="title function_">info</span>(json);</span><br><span class="line">                                <span class="keyword">if</span>(json.<span class="property">code</span>==<span class="string">&quot;0&quot;</span>)&#123;</span><br><span class="line">                                    objApp.$alert(<span class="string">&quot;请假已审批完毕&quot;</span> , &#123;</span><br><span class="line">                                        <span class="attr">callback</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                                            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/notice.html&quot;</span>;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;)</span><br><span class="line">                                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                                    objApp.<span class="property">$message</span>.<span class="title function_">error</span>(&#123;<span class="attr">message</span>:json.<span class="property">message</span>,<span class="attr">offset</span>:<span class="number">100</span>&#125;)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="开发系统通知Service层"><a href="#开发系统通知Service层" class="headerlink" title="开发系统通知Service层"></a><strong>开发系统通知Service层</strong></h2><p><img src="/assets/image-20230111103830863.png" alt="image-20230111103830863" style="zoom:80%;" /></p><p>​       <img src="/assets/image-20230111103856893.png" alt="image-20230111103856893" style="zoom:150%;" /><img src="assets/image-20230111103910533.png" alt="image-20230111103910533"></p><p><img src="/assets/image-20230111104417323.png" alt="image-20230111104417323" style="zoom:150%;" /></p><p><img src="/assets/image-20230111104405926.png" alt="image-20230111104405926"  /></p><p><img src="/assets/image-20230111104555528.png" alt="image-20230111104555528"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">notice1</span> <span class="operator">=</span> String.format(<span class="string">&quot;您的请假申请[%s-%s]已提交，请等待上级审批&quot;</span>, sdf.format(form.getStartTime()), sdf.format(form.getEndTime()));</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230111104700779.png" alt="image-20230111104700779"  /></p><p><img src="/assets/image-20230111105045078.png" alt="image-20230111105045078"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">notice1</span> <span class="operator">=</span> String.format(<span class="string">&quot;您的请假申请[%s-%s]已提交，请等待上级审批&quot;</span>, sdf.format(form.getStartTime()), sdf.format(form.getEndTime()));</span><br><span class="line">noticeMapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(employee.getEmployeeId(), notice1));</span><br><span class="line"><span class="type">String</span> <span class="variable">notice2</span> <span class="operator">=</span> String.format(<span class="string">&quot;%s-%s提起申请[%s-%s]，请尽快审批&quot;</span>, employee.getTitle(), employee.getName(), sdf.format(form.getStartTime()), sdf.format(form.getEndTime()));</span><br><span class="line">noticeMapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(dmanager.getEmployeeId(),notice2));</span><br></pre></td></tr></table></figure><p>对于部门经理的也差不多</p><p><img src="/assets/image-20230111105249555.png" alt="image-20230111105249555"  /></p><p>而总经理是自动通过</p><p><img src="/assets/image-20230111105634592.png" alt="image-20230111105634592"  /></p><p>来到下面audit方法</p><p><img src="/assets/image-20230111110241203.png" alt="image-20230111110241203" style="zoom:150%;" /></p><p><img src="/assets/image-20230111110609095.png" alt="image-20230111110609095"  /></p><p><img src="/assets/image-20230111110833087.png" alt="image-20230111110833087"  /></p><p><img src="/assets/image-20230111111031956.png" alt="image-20230111111031956"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(result.equals(<span class="string">&quot;approved&quot;</span>))&#123;</span><br><span class="line">                    <span class="type">ProcessFlow</span> <span class="variable">readyProcess</span> <span class="operator">=</span> readyList.get(<span class="number">0</span>);</span><br><span class="line">                    readyProcess.setState(<span class="string">&quot;process&quot;</span>);</span><br><span class="line">                    processFlowMapper.update(readyProcess);</span><br><span class="line">                    <span class="comment">//消息1: 通知表单提交人,部门经理已经审批通过,交由上级继续审批</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">notice1</span> <span class="operator">=</span> String.format(<span class="string">&quot;您的请假申请[%s-%s]%s%s已批准,审批意见:%s ,请继续等待上级审批&quot;</span> ,</span><br><span class="line">                            sdf.format(form.getStartTime()) , sdf.format(form.getEndTime()),</span><br><span class="line">                            operator.getTitle() , operator.getName(),reason);</span><br><span class="line">                    noticeMapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(form.getEmployeeId(),notice1));</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//消息2: 通知总经理有新的审批任务</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">notice2</span> <span class="operator">=</span> String.format(<span class="string">&quot;%s-%s提起请假申请[%s-%s],请尽快审批&quot;</span> ,</span><br><span class="line">                            employee.getTitle() , employee.getName() , sdf.format( form.getStartTime()) , sdf.format(form.getEndTime()));</span><br><span class="line">                    noticeMapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(readyProcess.getOperatorId(),notice2));</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//消息3: 通知部门经理(当前经办人),员工的申请单你已批准,交由上级继续审批</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">notice3</span> <span class="operator">=</span> String.format(<span class="string">&quot;%s-%s提起请假申请[%s-%s]您已批准,审批意见:%s,申请转至上级领导继续审批&quot;</span> ,</span><br><span class="line">                            employee.getTitle() , employee.getName() , sdf.format( form.getStartTime()) , sdf.format(form.getEndTime()), reason);</span><br><span class="line">                    noticeMapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(operator.getEmployeeId(),notice3));</span><br><span class="line"></span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230111111133209.png" alt="image-20230111111133209"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (result.equals(<span class="string">&quot;refused&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">//如果当前任务不是最后一个节点且审批驳回，则后续所有任务状态变为cancel，请假单状态变为refused</span></span><br><span class="line">                    <span class="keyword">for</span> (ProcessFlow p:readyList)&#123;</span><br><span class="line">                        p.setState(<span class="string">&quot;cancel&quot;</span>);</span><br><span class="line">                        processFlowMapper.update(p);</span><br><span class="line">                    &#125;</span><br><span class="line">                    form.setState(<span class="string">&quot;refused&quot;</span>);</span><br><span class="line">                    leaveFormMapper.update(form);</span><br><span class="line">                    <span class="comment">//消息1: 通知申请人表单已被驳回</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">notice1</span> <span class="operator">=</span> String.format(<span class="string">&quot;您的请假申请[%s-%s]%s%s已驳回,审批意见:%s,审批流程已结束&quot;</span> ,</span><br><span class="line">                            sdf.format(form.getStartTime()) , sdf.format(form.getEndTime()),</span><br><span class="line">                            operator.getTitle() , operator.getName(),reason);</span><br><span class="line">                    noticeMapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(form.getEmployeeId(),notice1));</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//消息2: 通知经办人表单&quot;您已驳回&quot;</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">notice2</span> <span class="operator">=</span> String.format(<span class="string">&quot;%s-%s提起请假申请[%s-%s]您已驳回,审批意见:%s,审批流程已结束&quot;</span> ,</span><br><span class="line">                            employee.getTitle() , employee.getName() , sdf.format( form.getStartTime()) , sdf.format(form.getEndTime()), reason);</span><br><span class="line">                    noticeMapper.insert(<span class="keyword">new</span> <span class="title class_">Notice</span>(operator.getEmployeeId(),notice2));</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230111111715732.png" alt="image-20230111111715732"  /></p><p><img src="/assets/image-20230111111722013.png" alt="image-20230111111722013"  /></p><h2 id="实现系统通知功能"><a href="#实现系统通知功能" class="headerlink" title="实现系统通知功能"></a><strong>实现系统通知功能</strong></h2><p><img src="/assets/image-20230111111850372.png" alt="image-20230111111850372"  /></p><p><img src="/assets/image-20230111112039701.png" alt="image-20230111112039701"  /></p><p><img src="/assets/image-20230111112101704.png" alt="image-20230111112101704"  /></p><p><img src="/assets/image-20230111112332313.png" alt="image-20230111112332313"  /></p><p><img src="/assets/image-20230111112337214.png" alt="image-20230111112337214"  /></p><p><img src="/assets/image-20230111112414452.png" alt="image-20230111112414452"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/api/notice/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NoticeServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">NoticeService</span> <span class="variable">noticeService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NoticeService</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">employeeId</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;eid&quot;</span>);</span><br><span class="line">        ResponseUtils resp;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;Notice&gt; noticeList = noticeService.getNoticeList(Long.parseLong(employeeId));</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>().put(<span class="string">&quot;list&quot;</span>, noticeList);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            resp = <span class="keyword">new</span> <span class="title class_">ResponseUtils</span>(e.getClass().getSimpleName(),e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        response.getWriter().println(resp.toJsonString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230111113131872.png" alt="image-20230111113131872" style="zoom:150%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>系统通知<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/assets/element-plus/index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/vue/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/element-plus/index.full.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/axios/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/oa/security.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>系统通知<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span></span></span><br><span class="line"><span class="tag">            <span class="attr">ref</span>=<span class="string">&quot;singleTable&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">highlight-current-row</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;序号&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;ctime&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;通知时间&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">                <span class="attr">property</span>=<span class="string">&quot;content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">label</span>=<span class="string">&quot;通知内容&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Main</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">tableData</span>: []</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        ,<span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> objApp = <span class="variable language_">this</span>;</span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">get</span>(<span class="string">&quot;/api/notice/list?eid=&quot;</span> + <span class="variable language_">sessionStorage</span>.<span class="property">eid</span>)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    objApp.<span class="property">tableData</span>.<span class="title function_">splice</span>(<span class="number">0</span>, objApp.<span class="property">tableData</span>.<span class="property">length</span>);</span></span><br><span class="line"><span class="language-javascript">                    response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item,index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(item.<span class="property">createTime</span>);</span></span><br><span class="line"><span class="language-javascript">                        item.<span class="property">ctime</span> = date.<span class="title function_">getFullYear</span>() + <span class="string">&quot;-&quot;</span> +</span></span><br><span class="line"><span class="language-javascript">                            (date.<span class="title function_">getMonth</span>() + <span class="number">1</span>) + <span class="string">&quot;-&quot;</span> + date.<span class="title function_">getDate</span>()</span></span><br><span class="line"><span class="language-javascript">                            + <span class="string">&quot; &quot;</span> + date.<span class="title function_">getHours</span>() + <span class="string">&quot;:&quot;</span> + date.<span class="title function_">getMinutes</span>() + <span class="string">&quot;:&quot;</span> + date.<span class="title function_">getSeconds</span>();</span></span><br><span class="line"><span class="language-javascript">                        item.<span class="property">index</span> = index + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">                        objApp.<span class="property">tableData</span>.<span class="title function_">push</span>(item);</span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">Main</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>);</span></span><br><span class="line"><span class="language-javascript">    app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230111113522419.png" alt="image-20230111113522419"  /></p><p><img src="/assets/image-20230111113530597.png" alt="image-20230111113530597"  /></p><h2 id="实现系统登录拦截功能"><a href="#实现系统登录拦截功能" class="headerlink" title="实现系统登录拦截功能"></a><strong>实现系统登录拦截功能</strong></h2><p>没有登录也能直接访问到后台</p><p><img src="/assets/image-20230111205019303.png" alt="image-20230111205019303" style="zoom: 80%;" /></p><p><img src="/assets/image-20230111205230955.png" alt="image-20230111205230955"  /></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable language_">sessionStorage</span>.<span class="property">eid</span> == <span class="literal">null</span> || <span class="variable language_">sessionStorage</span>.<span class="property">uid</span> == <span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/login.html&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230111205407621.png" alt="image-20230111205407621"  /></p><p><img src="/assets/image-20230111205453840.png" alt="image-20230111205453840" style="zoom:150%;" /></p><p>都引入。</p><p>对于/api/</p><p><img src="/assets/image-20230111205640793.png" alt="image-20230111205640793"  /></p><p>可基于令牌机制对接口进行授权，涉及架构，以后再涉猎。</p><h1 id="项目面试题解析"><a href="#项目面试题解析" class="headerlink" title="项目面试题解析"></a><strong>项目面试题解析</strong></h1><h2 id="请说明你的项目及使用技术"><a href="#请说明你的项目及使用技术" class="headerlink" title="请说明你的项目及使用技术"></a>请说明你的项目及使用技术</h2><p><img src="/assets/image-20230111210026682.png" alt="image-20230111210026682"  /></p><p><strong>1.</strong>严格和明确的需求说明书；</p><p><strong>2.</strong>开发前，明确，技术栈。</p><p><img src="/assets/image-20230111210032864.png" alt="image-20230111210032864" style="zoom:80%;" /></p><p>3.准备一个数据库，逻辑空间。</p><p>4.创建一个maven工程（管理本项目的各种依赖）；设置为web工程；在IDEA中设置Tomcat</p><p>5.引入Mybatis：在maven的pom.xml中，引入mybatis依赖（相当于一个第三方jar包）；创建mybatis-config.xml文件，配置Mybatis；创建MyBatisUtils工具类，解析和应用mybatis-config.xml文件；（MyBatisUtils工具类中的executeQuery()方法和executeUpdate()方法，使用到了Lambda表达式；因为，executeQuery()方法和executeUpdate()方法只是定义了一个范本，具体的实现需要在调用这些方法的时候再编写，所以这儿使用了Lambda表达式）</p><p>6.Mybatis整合Druid连接池：通过maven，在pom.xml中引入Druid依赖；创建Druid和Mybatis兼容所需的数据源工厂类：DruidDataSourceFac </p><p>7.引入FreeMarker：因为，本项目前端的模板引擎我们使用的是FreeMarker（没有使用JSP）；引入FreeMarker的依赖；在web.xml中配置FreemarkerServlet（要想使freemarker在web项目中起作用，需要对freemarker.jar中的FreemarkerServlet的这个Servlet类进行配置啦）；</p><p>8.引入Servlet：在pom.xml中引入Servlet依赖，并且该依赖的设置为provided（为web容器（比如Tomcat）本身就是一个Servlet容器，其自带了Servlet-apr.jar。所以，我们这儿引入的Servlet依赖只需要在程序编译的时候用到，并不需要将这个Servlet依赖发布到最终的运行环境中，因为Tomcat已经自带了。） ；</p><p>9.需要设置IDEA发布中包括maven的jar包，因为工程中引入的jar包大部分也是需要被包含在工程发布中的；（然后，以后项目中每引入一个依赖，并且该jar需要随工程发布的时候，都需要设置一下）</p><p> 10.在pom.xml中引入logback日志依赖，并创建logback.xml设置一下；</p><h2 id="你的项目有哪些亮点"><a href="#你的项目有哪些亮点" class="headerlink" title="你的项目有哪些亮点"></a>你的项目有哪些亮点</h2><ul><li>项目基于MVC模式进行开发，通过MVC的设计使得各层之间有效解藕。</li><li>使用了Vue3、Element Plus前端技术。</li><li>本项目主要是请假流程的模块，针对于请假流程，设计了process flow任务流进行处理，这是底层设计的亮点</li><li></li></ul><h2 id="请说明你对MVC的理解"><a href="#请说明你对MVC的理解" class="headerlink" title="请说明你对MVC的理解"></a>请说明你对MVC的理解</h2><p><img src="/assets/image-20230111210303623.png" alt="image-20230111210303623" style="zoom:80%;" /></p><p><img src="/assets/image-20230111210316138.png" alt="image-20230111210316138"  /></p><p>每一层各司其职，从后往前依次推进(不允许出现夸层调用)：</p><ul><li><strong>最底层是数据持久层，使用MyBatis的mapper完成数据库的增删改查。</strong></li><li><strong>业务逻辑层是负责处理响应业务逻辑的地方，并且是完成业务的主体方法。</strong></li><li><strong>控制层：接收前端传来的数据、根据前端传来的数据调用相应的业务逻辑、最后将业务逻辑返回的数据进行包装，返回给前端。</strong></li><li><strong>视图层指责为：向Servlet提交数据、从Servlet接收相应数据显示出来，前端进行渲染。</strong></li></ul><h2 id="请你说明RBAC的实现原理"><a href="#请你说明RBAC的实现原理" class="headerlink" title="请你说明RBAC的实现原理"></a>请你说明RBAC的实现原理</h2><p><img src="/assets/image-20230111210621330.png" alt="image-20230111210621330"  /></p><p>RBAC的<strong>核心是角色，角色是进行数据绑定核心。</strong></p><h2 id="请阐述项目的工作流程设计"><a href="#请阐述项目的工作流程设计" class="headerlink" title="请阐述项目的工作流程设计"></a>请阐述项目的工作流程设计</h2><h3 id="请假流程-1"><a href="#请假流程-1" class="headerlink" title="请假流程"></a>请假流程</h3><ul><li><p>部门经理只允许批准本部门员工申请</p></li><li><p>部门经理请假需直接由总经理审批</p></li><li><p>总经理提起请假申请，系统自动批准通过</p></li><li><p><img src="/assets/2375600-20210829145532321-1058969377.png" alt="img" style="zoom:80%;" /></p><h3 id="设计约束-1"><a href="#设计约束-1" class="headerlink" title="设计约束"></a>设计约束</h3><ul><li>每个请假单位对应一个审批流程</li><li>请假单创建后，按业务规则生成部门经理、总经理审批任务</li><li>审批任务的经办人只能审批自己辖区内的请假申请</li><li>所有审批任务“通过”，代表请假已经批准</li><li>任意审批任务“驳回”操作，其余审批任务取消，请假申请被驳回</li><li>请假流程中任意节点产生的操作都要生成对应的系统通知</li></ul></li></ul><h2 id="项目如何对敏感数据进行加密的"><a href="#项目如何对敏感数据进行加密的" class="headerlink" title="项目如何对敏感数据进行加密的"></a>项目如何对敏感数据进行加密的</h2><p><img src="/assets/image-20230111211138243.png" alt="image-20230111211138243" style="zoom:80%;" /></p><p><img src="/assets/image-20230111211150081.png" alt="image-20230111211150081" style="zoom:80%;" /></p>]]></content>
    
    
    <summary type="html">🥧OA办公系统</summary>
    
    
    
    <category term="演示" scheme="https://815101909.github.io/categories/%E6%BC%94%E7%A4%BA/"/>
    
    
    <category term="JavaWeb" scheme="https://815101909.github.io/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb进阶</title>
    <link href="https://815101909.github.io/posts/100006d.html"/>
    <id>https://815101909.github.io/posts/100006d.html</id>
    <published>2023-12-11T10:14:56.000Z</published>
    <updated>2023-12-12T01:20:08.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ajax-amp-json"><a href="#Ajax-amp-json" class="headerlink" title="Ajax&amp;json"></a>Ajax&amp;json</h1><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><h3 id="Ajax介绍"><a href="#Ajax介绍" class="headerlink" title="Ajax介绍"></a>Ajax介绍</h3><p> <strong>A</strong>synchronous <strong>J</strong>avaScript <strong>A</strong>nd <strong>X</strong>ML(异步的 JavaScript 和 XML) </p><p> Ajax可以在不刷新页面的前提下，进行页面局部更新 </p><p> Ajax是前端开发的必备技能，也是主流的开发模式 </p><h3 id="Ajax使用流程"><a href="#Ajax使用流程" class="headerlink" title="Ajax使用流程"></a>Ajax使用流程</h3><p>创建XmlHttpRequest对象</p><p>发送Ajax请求</p><p>处理服务器响应 </p><p><img src="/assets/1672712431738.png" alt="1672712431738" style="zoom:80%;" /></p><p><img src="/assets/1672712472194.png" alt="1672712472194" style="zoom:80%;" /></p><p><img src="/assets/1672712503858.png" alt="1672712503858" style="zoom:80%;" /></p><p>因为默认端口号是80，所以可以不写。</p><h4 id="1-创建XMLHttpRequest对象"><a href="#1-创建XMLHttpRequest对象" class="headerlink" title="1-创建XMLHttpRequest对象"></a>1-创建XMLHttpRequest对象</h4><p>XMLHttpRequest是Ajax的核心，Ajax使用该对象发起请求、接收响应</p><p>XMLHttpRequest并不是W3C的标准，不同浏览器的创建方式不同 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xmlhttp;</span><br><span class="line"><span class="keyword">if</span> (window.XMLHttpRequest)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span></span><br><span class="line">xmlhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// IE6, IE5 浏览器执行代码</span></span><br><span class="line">xmlhttp = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1672713138837.png" alt="1672713138837" style="zoom:80%;" /></p><p><img src="/assets/1672713168745.png" alt="1672713168745" style="zoom:80%;" /></p><h4 id="2-发送Ajax请求"><a href="#2-发送Ajax请求" class="headerlink" title="2-发送Ajax请求"></a>2-发送Ajax请求</h4><p>xmlhttp.open()用于创建请求</p><p>xmlhttp.send()用于发送请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建请求</span></span><br><span class="line">xmlhttp.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://loaclhost/test?name=admin&quot;</span>);</span><br><span class="line"><span class="comment">//发送到服务器</span></span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><p><img src="/assets/1672713521475.png" alt="1672713521475" style="zoom:80%;" /></p><p><img src="/assets/1672713533365.png" alt="1672713533365" style="zoom:80%;" /></p><p><img src="./images.assets/1672714274344.png" alt="1672714274344"></p><p><img src="/assets/1672714253200.png" alt="1672714253200" style="zoom:80%;" /></p><h4 id="3-处理服务器响应"><a href="#3-处理服务器响应" class="headerlink" title="3-处理服务器响应"></a>3-处理服务器响应</h4><ul><li><p>Xmlhttp.onreadystatechange() 事件用于监听Ajax的执行过程 </p></li><li><p>xmlhttp.readyState属性说明XMLHttpRequest当前状态 </p></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">readyState值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">readyState = 0</td><td style="text-align:center">请求未初始化</td></tr><tr><td style="text-align:center">readyState = 1</td><td style="text-align:center">服务器连接已建立</td></tr><tr><td style="text-align:center">readyState = 2</td><td style="text-align:center">请求已被接收</td></tr><tr><td style="text-align:center">readyState = 3</td><td style="text-align:center">请求正在处理</td></tr><tr><td style="text-align:center">readyState = 4</td><td style="text-align:center">响应文本已被接收</td></tr></tbody></table></div><ul><li><p>xmlhttp.status属性服务器响应状态码， 200:成功  404:未找到… </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.onreadystatechange = function()</span><br><span class="line">&#123;</span><br><span class="line">//响应已被接收且服务器处理成功时才执行</span><br><span class="line">if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)</span><br><span class="line">&#123;</span><br><span class="line">//获取响应体的文本</span><br><span class="line">        var responseText = xmlhttp.responseText;</span><br><span class="line">//对服务器结果进行处理</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/assets/1672715588203.png" alt="1672715588203"  /></p><p><img src="/assets/1672715612766.png" alt="1672715612766"  /></p><p><img src="/assets/1672715630238.png" alt="1672715630238"  /></p><p><img src="/assets/1672715739787.png" alt="1672715739787"  /></p><p><img src="/assets/1672715748778.png" alt="1672715748778"  /></p><hr><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><h3 id="JSON介绍"><a href="#JSON介绍" class="headerlink" title="JSON介绍"></a>JSON介绍</h3><p><strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation(JavaScript对象表示法)</p><p>JSON 是轻量级的文本数据交换格式</p><p>JSNO 独立于语言，具有自我描述性，更易理解</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;site&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">     <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Github&quot;</span><span class="punctuation">,</span><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;www.github.com&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;百度&quot;</span><span class="punctuation">,</span><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;www.baidu.com&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;网易&quot;</span><span class="punctuation">,</span><span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;www.163.com&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="JSON语法规则"><a href="#JSON语法规则" class="headerlink" title="JSON语法规则"></a>JSON语法规则</h3><p>数据由键(key)/值(value)描述，由冒号分隔</p><p>大括号代表一个完整的对象，拥有多个键/值对</p><p>中括号保存数组，多个对象之间使用逗号分隔</p><h3 id="利用JSON保存员工数据"><a href="#利用JSON保存员工数据" class="headerlink" title="利用JSON保存员工数据"></a>利用JSON保存员工数据</h3><p><img src="/assets/1672751871201.png" alt="1672751871201"  /></p><p><img src="/assets/1672751884334.png" alt="1672751884334"  /></p><p><img src="/assets/1672752050126.png" alt="1672752050126"  /></p><h3 id="JavaScript操作JSON"><a href="#JavaScript操作JSON" class="headerlink" title="JavaScript操作JSON"></a>JavaScript操作JSON</h3><p><img src="/assets/1672752553297.png" alt="1672752553297" style="zoom:150%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> employeeList = [</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;empno&quot;</span>: <span class="number">7369</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;ename&quot;</span>: <span class="string">&quot;李宁&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;job&quot;</span>: <span class="string">&quot;软件工程师&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;hiredate&quot;</span>: <span class="string">&quot;2019-5-12&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;salary&quot;</span>: <span class="number">13000</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;dname&quot;</span>: <span class="string">&quot;研发部&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;empno&quot;</span>: <span class="number">7499</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;ename&quot;</span>: <span class="string">&quot;王乐&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;job&quot;</span>: <span class="string">&quot;客户经理&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;hiredate&quot;</span>: <span class="string">&quot;2017-4-22&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;salary&quot;</span>: <span class="number">10000</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;dname&quot;</span>: <span class="string">&quot;市场部&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;customers&quot;</span>: [</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="string">&quot;cname&quot;</span>: <span class="string">&quot;李东&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="string">&quot;cname&quot;</span>: <span class="string">&quot;刘楠&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                ]</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        ];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; employeeList.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> employee = employeeList[i];</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(employee);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672752458073.png" alt="1672752458073" style="zoom:80%;" /></p><p><img src="/assets/1672753000385.png" alt="1672753000385" style="zoom:80%;" /></p><p><img src="/assets/1672753029201.png" alt="1672753029201" style="zoom:80%;" /></p><p><img src="/assets/1672753343182.png" alt="1672753343182" style="zoom:80%;" /></p><p><img src="/assets/1672753388364.png" alt="1672753388364" style="zoom:80%;" /></p><hr><h2 id="Ajax应用实践"><a href="#Ajax应用实践" class="headerlink" title="Ajax应用实践"></a>Ajax应用实践</h2><h3 id="Ajax-JSON开发模式"><a href="#Ajax-JSON开发模式" class="headerlink" title="Ajax+JSON开发模式"></a>Ajax+JSON开发模式</h3><p><img src="/assets/1672753985228.png" alt="1672753985228"  /></p><h3 id="Jackson"><a href="#Jackson" class="headerlink" title="Jackson"></a>Jackson</h3><p>Jackson是国内外著名的Java开源JSON序列化组件</p><p>Jackson国内拥有大量使用者，拥有API简单，效率等优点</p><p>Jackson也是众多Java框架的底层组件，掌握Jackson很重要</p><p><img src="/assets/1672754836507.png" alt="1672754836507"  /></p><p><img src="/assets/1672755275134.png" alt="1672755275134" style="zoom:80%;" /></p><h4 id="利用Jackson实现JSON序列化输出"><a href="#利用Jackson实现JSON序列化输出" class="headerlink" title="利用Jackson实现JSON序列化输出"></a>利用Jackson实现JSON序列化输出</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/news&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NewsServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        List&lt;News&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">News</span>(<span class="string">&quot;TIOBE:2020年编程语言排行趋势&quot;</span>,<span class="string">&quot;2020-5-1&quot;</span>,<span class="string">&quot;TIOBE&quot;</span>,<span class="string">&quot;...&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">News</span>(<span class="string">&quot;TIOBE:2021年编程语言排行趋势&quot;</span>,<span class="string">&quot;2021-5-1&quot;</span>,<span class="string">&quot;TIOBE&quot;</span>,<span class="string">&quot;...&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">News</span>(<span class="string">&quot;TIOBE:2022年编程语言排行趋势&quot;</span>,<span class="string">&quot;2022-5-1&quot;</span>,<span class="string">&quot;TIOBE&quot;</span>,<span class="string">&quot;...&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">News</span>(<span class="string">&quot;TIOBE:2023年编程语言排行趋势&quot;</span>,<span class="string">&quot;2023-5-1&quot;</span>,<span class="string">&quot;TIOBE&quot;</span>,<span class="string">&quot;...&quot;</span>));</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> objectMapper.writeValueAsString(list);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/json;charset=utf-8&quot;</span>);</span><br><span class="line">        resp.getWriter().println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/1672756962899.png" alt="1672756962899"  /></p><p>记得往lib中加入下好的依赖</p><p><img src="/assets/1672760319589.png" alt="1672760319589"  /></p><hr><h3 id="Ajax处理JSON数据"><a href="#Ajax处理JSON数据" class="headerlink" title="Ajax处理JSON数据"></a>Ajax处理JSON数据</h3><p><img src="/assets/1672760833244.png" alt="1672760833244" style="zoom:150%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> xmlhttp;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/news&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(xmlhttp.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; xmlhttp.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> str = xmlhttp.<span class="property">responseText</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672760990398.png" alt="1672760990398"  /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> xmlhttp;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/news&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(xmlhttp.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; xmlhttp.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> str = xmlhttp.<span class="property">responseText</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> json = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(json);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672761190963.png" alt="1672761190963"  /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> xmlhttp;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/news&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(xmlhttp.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; xmlhttp.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> str = xmlhttp.<span class="property">responseText</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> json = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(json);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; json.<span class="property">length</span> ; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> news = json[i];</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;container&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">          container.<span class="property">innerHTML</span> = container.<span class="property">innerHTML</span> + news.<span class="property">title</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672761434657.png" alt="1672761434657" style="zoom:80%;" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> xmlhttp;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/news&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(xmlhttp.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; xmlhttp.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> str = xmlhttp.<span class="property">responseText</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> json = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(json);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; json.<span class="property">length</span> ; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> news = json[i];</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;container&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">          container.<span class="property">innerHTML</span> = container.<span class="property">innerHTML</span> + <span class="string">&quot;&lt;h2&gt;&quot;</span> + news.<span class="property">title</span> + <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672761525759.png" alt="1672761525759" style="zoom:80%;" /></p><hr><h3 id="Axios快速入门"><a href="#Axios快速入门" class="headerlink" title="Axios快速入门"></a>Axios快速入门</h3><p><a href="https://www.axios-http.cn/">https://www.axios-http.cn/</a></p><p><img src="/assets/1672761880070.png" alt="1672761880070" style="zoom:80%;" /></p><p>使用 unpkg CDN:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672762171879.png" alt="1672762171879" style="zoom:80%;" /></p><h4 id="Axios发送Get请求"><a href="#Axios发送Get请求" class="headerlink" title="Axios发送Get请求"></a>Axios发送Get请求</h4><p><img src="/assets/1672762337362.png" alt="1672762337362" style="zoom:80%;" /></p><p><img src="/assets/1672762672565.png" alt="1672762672565"  /></p><p><img src="/assets/1672762767042.png" alt="1672762767042"  /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  axios.<span class="title function_">get</span>(<span class="string">&#x27;/news&#x27;</span>,&#123;&#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> json = response.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; json.<span class="property">length</span> ; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> news = json[i];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;container&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        container.<span class="property">innerHTML</span> = container.<span class="property">innerHTML</span> + <span class="string">&quot;&lt;h2&gt;&quot;</span> + news.<span class="property">title</span> + <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672762899918.png" alt="1672762899918" style="zoom:80%;" /></p><p><img src="/assets/1672763169965.png" alt="1672763169965"  /></p><p><img src="/assets/1672763469144.png" alt="1672763469144"  /></p><p>或者写成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.get(&#x27;/news?t=pypl&#x27;).then(function (response)</span><br></pre></td></tr></table></figure><p><img src="/assets/1672763506181.png" alt="1672763506181"  /></p><p><img src="/assets/1672763534273.png" alt="1672763534273" style="zoom:150%;" /></p><hr><h4 id="Axios发送Post请求"><a href="#Axios发送Post请求" class="headerlink" title="Axios发送Post请求"></a>Axios发送Post请求</h4><p>在axios.html中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/axios.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  axios.<span class="title function_">post</span>(<span class="string">&#x27;/news&#x27;</span>, <span class="string">&quot;t=pypl&amp;l=abc&quot;</span>, &#123;<span class="attr">headers</span>:&#123;<span class="string">&quot;content-type&quot;</span>:<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>&#125;&#125;)</span></span><br><span class="line"><span class="language-javascript">      .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> json = response.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; json.<span class="property">length</span> ; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">var</span> news = json[i];</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">var</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;container&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">              container.<span class="property">innerHTML</span> = container.<span class="property">innerHTML</span> + <span class="string">&quot;&lt;h2&gt;&quot;</span> + news.<span class="property">title</span> + <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">      .<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672800673862.png" alt="1672800673862"  /></p><p>发现405错误，原因是没写doPost方法。</p><p><img src="/assets/1672800727528.png" alt="1672800727528" style="zoom:80%;" /><img src="./images.assets/1672800753131.png" alt="1672800753131"></p><p>说明传递成功。</p><p><img src="/assets/1672800838446.png" alt="1672800838446"  /></p><p>解决405，在里面追加doPost方法。</p><p><img src="/assets/1672800966289.png" alt="1672800966289" style="zoom:80%;" /></p><p>扩展：</p><p>请求参数过多的话开源采用面向对象方法</p><p><img src="/assets/1672801272252.png" alt="1672801272252"  /></p><p><img src="/assets/1672801322926.png" alt="1672801322926"  /></p><hr><h4 id="Ajax同步与异步的区别"><a href="#Ajax同步与异步的区别" class="headerlink" title="Ajax同步与异步的区别"></a>Ajax同步与异步的区别</h4><p>同步是在服务器未返回JSON前，JS程序一直处于阻塞等待的状态</p><p>异步是在服务器未返回JSON前，不阻塞程序，Ajax通过回调获取结果</p><p><img src="/assets/1672801687323.png" alt="1672801687323" style="zoom:80%;" /></p><p>创建和news基础上改动的async.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> xmlhttp;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    xmlhttp = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/news?t=pypl&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;请求数据已发送&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  xmlhttp.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(xmlhttp.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; xmlhttp.<span class="property">status</span> == <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> str = xmlhttp.<span class="property">responseText</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> json = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(str);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(json);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; json.<span class="property">length</span> ; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> news = json[i];</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;container&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">          container.<span class="property">innerHTML</span> = container.<span class="property">innerHTML</span> + <span class="string">&quot;&lt;h2&gt;&quot;</span> + news.<span class="property">title</span> + <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>newsServlet类中，睡眠5s后进行以下代码</p><p><img src="assets/1672802011659.png" alt="1672802011659"></p><p><img src="/assets/1672802052911.png" alt="1672802052911" style="zoom:80%;" /></p><p><img src="/assets/1672802146140.png" alt="1672802146140"  /></p><p>第三个参数设为false表示关闭异步，开启同步。</p><p><img src="/assets/1672802227909.png" alt="1672802227909" style="zoom:80%;" /></p><p>只能显示出日志</p><p><img src="/assets/1672802402707.png" alt="1672802402707"  /></p><p>将onchange下面的内容提到日志下面就可以同步进行</p><p><img src="/assets/1672802460936.png" alt="1672802460936"  /></p><p>开发时基本上用的是异步。</p><hr><h4 id="实现二级联动菜单"><a href="#实现二级联动菜单" class="headerlink" title="实现二级联动菜单"></a>实现二级联动菜单</h4><p><img src="/assets/1672803956074.png" alt="1672803956074" style="zoom:150%;" /></p><p><img src="/assets/1672803969982.png" alt="1672803969982" style="zoom:80%;" /></p><p><img src="/assets/1672803982793.png" alt="1672803982793" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/channel&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChannelServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">level</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;level&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">parent</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;parent&quot;</span>);</span><br><span class="line">        List&lt;Channel&gt; chlist = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (level.equals(<span class="string">&quot;1&quot;</span>))&#123;</span><br><span class="line">            chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;ai&quot;</span>,<span class="string">&quot;人工智能&quot;</span>));</span><br><span class="line">            chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;web&quot;</span>,<span class="string">&quot;前端开发&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (level.equals(<span class="string">&quot;2&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (parent.equals(<span class="string">&quot;ai&quot;</span>))&#123;</span><br><span class="line">                chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;深度学习&quot;</span>));</span><br><span class="line">                chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;cv&quot;</span>,<span class="string">&quot;计算机视觉&quot;</span>));</span><br><span class="line">                chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;nlp&quot;</span>,<span class="string">&quot;自然语言处理&quot;</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (parent.equals(<span class="string">&quot;web&quot;</span>)) &#123;</span><br><span class="line">                chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;html&quot;</span>,<span class="string">&quot;HTML超文本标记语言&quot;</span>));</span><br><span class="line">                chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;css&quot;</span>,<span class="string">&quot;CSS极联样式表&quot;</span>));</span><br><span class="line">                chlist.add(<span class="keyword">new</span> <span class="title class_">Channel</span>(<span class="string">&quot;js&quot;</span>,<span class="string">&quot;JavaScript脚本&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> objectMapper.writeValueAsString(chlist);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        resp.getWriter().println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1672804044727.png" alt="1672804044727"  /></p><p><img src="/assets/1672804083078.png" alt="1672804083078"  /></p><p><img src="/assets/1672804258532.png" alt="1672804258532"  /></p><p><img src="/assets/1672804297071.png" alt="1672804297071"  /></p><p><img src="/assets/1672833678061.png" alt="1672833678061"  /></p><p><img src="/assets/1672833683961.png" alt="1672833683961"  /></p><p><img src="/assets/1672833701775.png" alt="1672833701775" style="zoom:150%;" /></p><p><img src="/assets/1672833855925.png" alt="1672833855925"  /></p><p><img src="/assets/1672833841751.png" alt="1672833841751" style="zoom:80%;" /></p><p><img src="/assets/1672834209435.png" alt="1672834209435"  /></p><p>onchange为复选框选择事件</p><p><img src="/assets/1672834198382.png" alt="1672834198382" style="zoom:80%;" /></p><p>再把数据填充到二级下拉框中。</p><p><img src="/assets/1672834573306.png" alt="1672834573306"  /></p><p><img src="/assets/1672834780200.png" alt="1672834780200"  /></p><p><img src="/assets/1672834808518.png" alt="1672834808518"  /></p><p>但选择前端开发时出现bug</p><p><img src="./images.assets/1672834839316.png" alt="1672834839316" style="zoom:80%;" /></p><p>再选择回来，发生叠加。</p><p><img src="./images.assets/1672834872709.png" alt="1672834872709" style="zoom:80%;" /></p><p>所以每次加载都要清除原来的数据</p><p><img src="/assets/1672834982693.png" alt="1672834982693"  /></p><hr><h1 id="Java正则表达式"><a href="#Java正则表达式" class="headerlink" title="Java正则表达式"></a>Java正则表达式</h1><h2 id="正则表达式基础语法"><a href="#正则表达式基础语法" class="headerlink" title="正则表达式基础语法"></a>正则表达式基础语法</h2><h3 id="正则表达式介绍"><a href="#正则表达式介绍" class="headerlink" title="正则表达式介绍"></a>正则表达式介绍</h3><h4 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h4><p>正则表达式是检查、匹配字符串的表达式</p><p>正则表达式是描述规则，主流语言都有良好支持</p><p>字符串校验、查找与替换是正则表达式主要使用场景</p><h4 id="正则表达式案例"><a href="#正则表达式案例" class="headerlink" title="正则表达式案例"></a>正则表达式案例</h4><p>检查输入的身份证号是否合法(15位、18位)</p><p>示例：13010220200328091X</p><p>正则表达式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(^\d&#123;<span class="number">15</span>&#125;$)|(^\d&#123;<span class="number">18</span>&#125;&amp;)|(^\d&#123;<span class="number">17</span>&#125;(\d|X|x)$)</span><br></pre></td></tr></table></figure><h3 id="字符范围匹配"><a href="#字符范围匹配" class="headerlink" title="字符范围匹配"></a>字符范围匹配</h3><p><img src="/assets/1672836411879.png" alt="1672836411879"  /></p><p><strong>在线表达式测试工具</strong>：<a href="https://tool.oschina.net/regex">https://tool.oschina.net/regex</a></p><p>eg：精准匹配hello或hallo</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h<span class="selector-attr">[ea]</span>llo</span><br></pre></td></tr></table></figure><p>匹配数字范围(0570-0579)</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">057</span>[<span class="number">0</span>-<span class="number">9</span>]</span><br></pre></td></tr></table></figure><p>单选题只允许输入ABCD其中一项</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[ABCD]</span>或者<span class="selector-attr">[A-D]</span></span><br></pre></td></tr></table></figure><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><p><img src="/assets/1672837103320.png" alt="1672837103320"  /></p><p>eg：</p><p>请匹配数字(3213.383219)</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\d\d\d\d\.\d\d\d\d\d\d</span><br></pre></td></tr></table></figure><p>匹配杭州与宁波座机号码(0571|0574-XXXXXXXX)</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">057</span>[<span class="number">14</span>]-\d\d\d\d\d\d\d\d</span><br></pre></td></tr></table></figure><p>请匹配18位身份证号</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1234568</span>]\d\d\d\d\d\d\d\d\d\d\d\d\d\d\d\d[<span class="number">0</span><span class="number">-9</span>xX]</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[1234568]</span>\d&#123;<span class="number">16</span>&#125;<span class="selector-attr">[0-9xX]</span></span><br></pre></td></tr></table></figure><h3 id="多次重复匹配"><a href="#多次重复匹配" class="headerlink" title="多次重复匹配"></a>多次重复匹配</h3><p><img src="/assets/1672839364308.png" alt="1672839364308"  /></p><p>eg:</p><p>验证短信验证码 （321456）</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">\d</span><span class="template-variable">&#123;6&#125;</span></span><br></pre></td></tr></table></figure><p>请匹配全国座机号(区号3或者4位-电话号码7或8位)</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">\d</span><span class="template-variable">&#123;3,4&#125;</span><span class="language-xml">-\d</span><span class="template-variable">&#123;7,8&#125;</span></span><br></pre></td></tr></table></figure><p>请匹配英文姓名(例如：James Watson)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[A-Z]</span><span class="selector-attr">[a-z]</span>&#123;<span class="number">1</span>,&#125;\s<span class="selector-attr">[A-Z]</span><span class="selector-attr">[a-z]</span>&#123;<span class="number">0</span>,&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[A-Z]</span><span class="selector-attr">[a-z]</span>+\s<span class="selector-attr">[A-Z]</span><span class="selector-attr">[a-z]</span>*</span><br></pre></td></tr></table></figure><h3 id="定位匹配"><a href="#定位匹配" class="headerlink" title="定位匹配"></a>定位匹配</h3><p><img src="/assets/1672839885513.png" alt="1672839885513"  /></p><p>.*是指任意长度的字符</p><p>eg:匹配ab开头ab结尾的字符串</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^<span class="keyword">ab</span>.*<span class="keyword">ab</span>$</span><br></pre></td></tr></table></figure><h3 id="贪婪模式"><a href="#贪婪模式" class="headerlink" title="贪婪模式"></a>贪婪模式</h3><p>在满足条件的情况下尽可能多匹配到字符串</p><p>示例：111222333        正则：\d{6,8}</p><p>匹配结果：11122233</p><h3 id="非贪婪模式"><a href="#非贪婪模式" class="headerlink" title="非贪婪模式"></a>非贪婪模式</h3><p>在满足条件的情况下尽可能少匹配字符串</p><p>示例：111222333        正则：\d{6,8}?</p><p>匹配结果：111222</p><p>eg：提取超链接里的网址</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.sina.com&quot;</span>&gt;</span>新浪<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>贪婪正则：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;.*&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672840488037.png" alt="1672840488037" style="zoom:150%;" /></p><p>非贪婪正则：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;.*?&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672840531552.png" alt="1672840531552" style="zoom:150%;" /></p><h3 id="表达式分组"><a href="#表达式分组" class="headerlink" title="表达式分组"></a>表达式分组</h3><p>分组将”正则”分组为多个子表达式</p><p>示例：abababcdcdcd</p><p>正则表达式：(ab){3}(cd){3}</p><p>eg:</p><p>匹配验证码(4位或6位) </p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(^\d&#123;<span class="number">4</span>&#125;<span class="variable">$)</span>|(^\d&#123;<span class="number">6</span>&#125;<span class="variable">$)</span></span><br></pre></td></tr></table></figure><p>匹配车牌号(粤D-U888G)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(<span class="selector-attr">[冀黑粤晋]</span><span class="selector-attr">[A-Z]</span>)<span class="built_in">-</span>(<span class="selector-attr">[A-Z0-9]</span>&#123;<span class="number">5</span>&#125;)$</span><br></pre></td></tr></table></figure><p>匹配中文或英文姓名</p><p>James Watson</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^<span class="comment">[A-Z]</span><span class="comment">[a-Z]</span>+\s<span class="comment">[A-Z]</span><span class="comment">[a-z]</span>*$</span><br></pre></td></tr></table></figure><p>张三</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[<span class="symbol">\u4e00</span>-<span class="symbol">\u9fa5</span>]&#123;2,8&#125;$</span><br></pre></td></tr></table></figure><p>再混合</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(^<span class="comment">[A-Z]</span><span class="comment">[a-Z]</span>+\s<span class="comment">[A-Z]</span><span class="comment">[a-z]</span>*$)|(^<span class="comment">[\u4e00-\u9fa5]</span>&#123;2,8&#125;$)</span><br></pre></td></tr></table></figure><hr><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><h3 id="JavaScript表单验证"><a href="#JavaScript表单验证" class="headerlink" title="JavaScript表单验证"></a>JavaScript表单验证</h3><p><img src="/assets/1672886314775.png" alt="1672886314775"  /></p><p><img src="/assets/1672886381094.png" alt="1672886381094"  /></p><p><img src="/assets/1672886959003.png" alt="1672886959003" style="zoom:80%;" /></p><p><img src="/assets/1672887010045.png" alt="1672887010045" style="zoom:80%;" /></p><hr><h1 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h1><h2 id="Filter过滤器基础"><a href="#Filter过滤器基础" class="headerlink" title="Filter过滤器基础"></a>Filter过滤器基础</h2><h3 id="初识过滤器-Filter"><a href="#初识过滤器-Filter" class="headerlink" title="初识过滤器-Filter"></a>初识过滤器-Filter</h3><p><img src="/assets/1672888159673.png" alt="1672888159673" style="zoom:80%;" /></p><h4 id="过滤器-Filter"><a href="#过滤器-Filter" class="headerlink" title="过滤器-Filter"></a>过滤器-Filter</h4><p>过滤器（Filter）是J2EE Servlet模块下的组件</p><p>Filter的作用是对URI进行统一的拦截处理</p><p>Filter通常用于应用程序层面进行请求的前置处理</p><h4 id="过滤链"><a href="#过滤链" class="headerlink" title="过滤链"></a>过滤链</h4><p><img src="/assets/1672888450032.png" alt="1672888450032"  /></p><h3 id="开发第一个过滤器"><a href="#开发第一个过滤器" class="headerlink" title="开发第一个过滤器"></a>开发第一个过滤器</h3><h4 id="开发过滤器三要素"><a href="#开发过滤器三要素" class="headerlink" title="开发过滤器三要素"></a>开发过滤器三要素</h4><p>任何过滤器都要实现javax.servlet.Filter接口</p><p>在Filter接口的doFilter()方法中编写过滤器的功能代码</p><p>在web.xml中对过滤器进行配置，定义拦截URI的范围</p><p><img src="/assets/1672889013734.png" alt="1672889013734" style="zoom:80%;" /></p><p><img src="/assets/1672889000709.png" alt="1672889000709" style="zoom:80%;" /></p><p><img src="/assets/1672889041751.png" alt="1672889041751"  /></p><p><img src="/assets/1672889047875.png" alt="1672889047875"  /></p><p><img src="/assets/1672889234395.png" alt="1672889234395" style="zoom:80%;" /></p><p><img src="/assets/1672889366284.png" alt="1672889366284" style="zoom:80%;" /></p><p><img src="/assets/1672889515502.png" alt="1672889515502" style="zoom:80%;" /></p><p><img src="/assets/1672889872405.png" alt="1672889872405"  /></p><p><img src="/assets/1672891084287.png" alt="1672889881980"  /></p><p><img src="/assets/1672891062598.png" alt="1672891062598"  /></p><p><img src="/assets/1672891068269.png" alt="1672891068269" style="zoom:150%;" /></p><p>如果将filterChain.doFilter()注释掉，可以看到，控制台有输出，但页面没有输出</p><p><img src="/assets/1672891195929.png" alt="1672891195929"  /></p><p><img src="./images.assets/1672891178266.png" alt="1672891178266"></p><p><img src="/assets/1672891182927.png" alt="1672891182927"  /></p><p>访问/hello也是同样效果</p><hr><h3 id="过滤器生命周期"><a href="#过滤器生命周期" class="headerlink" title="过滤器生命周期"></a>过滤器生命周期</h3><p><img src="/assets/1672919973932.png" alt="1672919973932"  /></p><p><img src="/assets/1672920077935.png" alt="1672920077935" style="zoom:80%;" /></p><p>开启tomcat时就进行。</p><p><img src="/assets/1672920232709.png" alt="1672920232709" style="zoom:80%;" /></p><p>重启Tomcat时销毁。</p><h3 id="过滤器的特性"><a href="#过滤器的特性" class="headerlink" title="过滤器的特性"></a>过滤器的特性</h3><p>过滤器对象在Web应用启动时被创建且全局唯一</p><p>唯一的过滤器针对性在并发环境中采用”多线程”提供服务</p><hr><h2 id="过滤器应用实践"><a href="#过滤器应用实践" class="headerlink" title="过滤器应用实践"></a>过滤器应用实践</h2><h3 id="WebFilter注解的使用"><a href="#WebFilter注解的使用" class="headerlink" title="WebFilter注解的使用"></a>WebFilter注解的使用</h3><h4 id="过滤器配置形式"><a href="#过滤器配置形式" class="headerlink" title="过滤器配置形式"></a>过滤器配置形式</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>firstFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.example.filter.FistFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>firstFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="过滤器注解形式"><a href="#过滤器注解形式" class="headerlink" title="过滤器注解形式"></a>过滤器注解形式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter(filterName=&quot;annotationFilter&quot;, urlPatterns=&quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnnotationFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1672921662667.png" alt="1672921662667" style="zoom:80%;" /></p><p><img src="/assets/1672923361858.png" alt="1672923361858" style="zoom:150%;" /></p><h4 id="配置与注解如何选择"><a href="#配置与注解如何选择" class="headerlink" title="配置与注解如何选择"></a>配置与注解如何选择</h4><p>配置形式维护性更好，适合应用全局过滤</p><p>注释形式开发体验更好，适用于小型项目敏捷开发</p><hr><h3 id="开发字符集过滤器"><a href="#开发字符集过滤器" class="headerlink" title="开发字符集过滤器"></a>开发字符集过滤器</h3><h4 id="Web中文乱码的解决"><a href="#Web中文乱码的解决" class="headerlink" title="Web中文乱码的解决"></a>Web中文乱码的解决</h4><p>GET请求-server.xml增加URIEncoding=”UTF-8”</p><p>POST请求-使用request.setCharacterEncoding(“UTF-8”)</p><p>响应-response.setContentType(“text/html;charset=utf-8”)</p><p>由于每次可能都要设置以上内容，所以有了字符集过滤器来便利。</p><h4 id="ServletRequest接口"><a href="#ServletRequest接口" class="headerlink" title="ServletRequest接口"></a>ServletRequest接口</h4><p><img src="/assets/1672923995580.png" alt="1672923995580"  /></p><p><img src="/assets/1672924125109.png" alt="1672924125109"  /></p><p><img src="/assets/1672924177632.png" alt="1672924177632"  /></p><p><img src="/assets/1672924391551.png" alt="1672924391551"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">resp</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/1672924506212.png" alt="1672924506212"  /></p><p><img src="/assets/1672924539746.png" alt="1672924539746"  /></p><p><img src="/assets/1672924605471.png" alt="1672924605471" style="zoom:80%;" /></p><p>这样，我们在开发时就不用再注意去加上编码。</p><hr><h3 id="参数化过滤器"><a href="#参数化过滤器" class="headerlink" title="参数化过滤器"></a>参数化过滤器</h3><h4 id="过滤器参数化"><a href="#过滤器参数化" class="headerlink" title="过滤器参数化"></a>过滤器参数化</h4><p>过滤器为了增强灵活性，允许配置信息放在web.xml</p><p>在web.xml中配置<init-param\>设置过滤器参数</p><h4 id="优化字符集过滤器"><a href="#优化字符集过滤器" class="headerlink" title="优化字符集过滤器"></a>优化字符集过滤器</h4><p><img src="/assets/1672927730493.png" alt="1672927730493"  /></p><p><img src="/assets/1672928403838.png" alt="1672928403838"  /></p><p><img src="/assets/1672927965655.png" alt="1672927965655"  /></p><p><img src="/assets/1672928010358.png" alt="1672928010358"  /></p><p><img src="/assets/1672928023190.png" alt="1672928023190"  /></p><p><img src="/assets/1672928111720.png" alt="1672928111720"  /></p><p>用注释形式的话(了解)：</p><p><img src="/assets/1672928510553.png" alt="1672928510553"  /></p><hr><h3 id="url-pattern常用写法"><a href="#url-pattern常用写法" class="headerlink" title="url-pattern常用写法"></a>url-pattern常用写法</h3><p>/index.html - 执行资源精准匹配</p><p>/servlet/* - 以前缀进行模糊匹配</p><p>*.html - 以后缀进行模糊匹配</p><p>但不支持前缀加后缀</p><p><img src="/assets/1672928869054.png" alt="1672928869054"  /></p><p><img src="/assets/1672928959915.png" alt="1672928959915"  /></p><p><img src="/assets/1672929034409.png" alt="1672929034409" style="zoom:80%;" /><img src="assets/1672929044609.png" alt="1672929044609"></p><p>后缀匹配：</p><p><img src="/assets/1672929185218.png" alt="1672929185218"  /></p><p>前缀匹配：</p><p><img src="/assets/1672929213681.png" alt="1672929213681"  /></p><p><img src="/assets/1672929292397.png" alt="1672929292397"  /></p><p><img src="/assets/1672929299564.png" alt="1672929299564" style="zoom:150%;" /></p><h4 id="与-的区别"><a href="#与-的区别" class="headerlink" title="/与/*的区别"></a>/与/*的区别</h4><p>/ 应用在Servlet配置，使该Servlet替代主页</p><p>/* 应用在过滤器，代表对所有请求拦截</p><p><img src="/assets/1672929633066.png" alt="1672929633066"  /></p><p><img src="/assets/1672929641578.png" alt="1672929641578"  /></p><p><img src="/assets/1672929688237.png" alt="1672929688237" style="zoom:80%;" /></p><p>原本的index.html失效了。</p><p><img src="/assets/1672929745979.png" alt="1672929745979" style="zoom:150%;" /></p><hr><h3 id="过滤链的开发技巧"><a href="#过滤链的开发技巧" class="headerlink" title="过滤链的开发技巧"></a>过滤链的开发技巧</h3><h4 id="过滤链-1"><a href="#过滤链-1" class="headerlink" title="过滤链"></a>过滤链</h4><p><img src="/assets/1672929854073.png" alt="1672929854073" style="zoom:80%;" /></p><h4 id="过滤链开发注意事项"><a href="#过滤链开发注意事项" class="headerlink" title="过滤链开发注意事项"></a>过滤链开发注意事项</h4><p>每一个过滤器应具有单独职能</p><p>过滤器的执行顺序以<filter-mapping\>为准</p><p>调用chain.doFilter()将请求向后传递</p><p><img src="/assets/1672930240180.png" alt="1672930240180"  /></p><p><img src="/assets/1672930213943.png" alt="1672930213943"  /></p><p><img src="/assets/1672930230865.png" alt="1672930230865"  /></p><p><img src="/assets/1672930288552.png" alt="1672930288552"  /></p><p><img src="/assets/1672930339584.png" alt="1672930339584"  /></p><p>如果在Filter中忘了写</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterChain.<span class="keyword">do</span><span class="built_in">Filter</span>(servletRequest, servletResponse);</span><br></pre></td></tr></table></figure><p>的话：</p><p><img src="/assets/1672930524299.png" alt="1672930524299"  /></p><p><img src="/assets/1672930551984.png" alt="1672930551984" style="zoom:80%;" /></p><p><img src="/assets/1672930544618.png" alt="1672930544618" style="zoom:150%;" /></p><p>杜绝了后面过滤器的执行。</p><p><img src="/assets/1672930700130.png" alt="1672930700130" style="zoom:150%;" /></p><p>注解形式是按filterName中字母顺序执行的，这样会降低对程序的维护性。</p><hr><h3 id="利用过滤器实现多端匹配"><a href="#利用过滤器实现多端匹配" class="headerlink" title="利用过滤器实现多端匹配"></a>利用过滤器实现多端匹配</h3><h4 id="多端设备自动匹配"><a href="#多端设备自动匹配" class="headerlink" title="多端设备自动匹配"></a>多端设备自动匹配</h4><p><img src="/assets/1672932400962.png" alt="1672932400962" style="zoom:80%;" /></p><p><img src="/assets/1672932648378.png" alt="1672932648378"  /></p><p><img src="/assets/1672933553364.png" alt="1672933553364" style="zoom:80%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeviceAdapterFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">resp</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="type">String</span> <span class="variable">uri</span> <span class="operator">=</span> req.getRequestURI(); </span><br><span class="line">        /  <span class="comment">//index.html -&gt; /mobile/index.html /  /desktop/index.html</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userAgent</span> <span class="operator">=</span> req.getHeader(<span class="string">&quot;user-agent&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">targetUri</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (userAgent.toLowerCase().indexOf(<span class="string">&quot;android&quot;</span>) != -<span class="number">1</span> || userAgent.toLowerCase().indexOf(<span class="string">&quot;iphone&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            targetUri = <span class="string">&quot;/mobile&quot;</span> + uri; <span class="comment">//  /mobile/index.html</span></span><br><span class="line">            System.out.println(<span class="string">&quot;移动端正在访问，重新跳转URI：&quot;</span> + targetUri);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            targetUri = <span class="string">&quot;/desktop&quot;</span> + uri;</span><br><span class="line">            System.out.println(<span class="string">&quot;PC端正在访问，重新跳转URI：&quot;</span> + targetUri);</span><br><span class="line">        &#125;</span><br><span class="line">        resp.sendRedirect(targetUri);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>deviceAdaptFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.example.filter.DeviceAdapterFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>deviceAdaptFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时运行，访问index.html</p><p>会出现错误，多次重定向。</p><p><img src="/assets/1672934066310.png" alt="1672934066310"  /></p><p>要再加上一个前置判断</p><p><img src="/assets/1672934358418.png" alt="1672934358418"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeviceAdapterFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">resp</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="type">String</span> <span class="variable">uri</span> <span class="operator">=</span> req.getRequestURI(); <span class="comment">///index.html -&gt; /mobile/index.html /  /desktop/index.html</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userAgent</span> <span class="operator">=</span> req.getHeader(<span class="string">&quot;user-agent&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">targetUri</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (uri.startsWith(<span class="string">&quot;/desktop&quot;</span>) || uri.startsWith(<span class="string">&quot;/mobile&quot;</span>)) &#123;</span><br><span class="line">            filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (userAgent.toLowerCase().indexOf(<span class="string">&quot;android&quot;</span>) != -<span class="number">1</span> || userAgent.toLowerCase().indexOf(<span class="string">&quot;iphone&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                targetUri = <span class="string">&quot;/mobile&quot;</span> + uri; <span class="comment">//  /mobile/index.html</span></span><br><span class="line">                System.out.println(<span class="string">&quot;移动端正在访问，重新跳转URI：&quot;</span> + targetUri);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                targetUri = <span class="string">&quot;/desktop&quot;</span> + uri;</span><br><span class="line">                System.out.println(<span class="string">&quot;PC端正在访问，重新跳转URI：&quot;</span> + targetUri);</span><br><span class="line">            &#125;</span><br><span class="line">            resp.sendRedirect(targetUri);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时输入<a href="http://localhost:8080/index.html">http://localhost:8080/index.html</a></p><p><img src="/assets/1672934651039.png" alt="1672934651039"  /></p><p>按F12进入手机模式，再输入<a href="http://localhost:8080/index.html">http://localhost:8080/index.html</a></p><p><img src="/assets/1672934743528.png" alt="1672934743528" style="zoom:80%;" /></p><p><img src="/assets/1672934855855.png" alt="1672934855855"  /></p><hr><h2 id="监听器（了解）"><a href="#监听器（了解）" class="headerlink" title="监听器（了解）"></a>监听器（了解）</h2><h3 id="监听器-Listener"><a href="#监听器-Listener" class="headerlink" title="监听器-Listener"></a>监听器-Listener</h3><p>监听器（Listener）是J2EE Servlet模块下的组件</p><p>Listener的作用对Web应用对象的行为进行监控</p><p>通过Listener监听自动触发指定的功能代码</p><h3 id="过滤器与监听器的区别"><a href="#过滤器与监听器的区别" class="headerlink" title="过滤器与监听器的区别"></a>过滤器与监听器的区别</h3><p>过滤器（Filter）的职责是对URL进行过滤拦截，是主动的执行</p><p>监听器（Listener）的职责是对Web对象进行监听，是被动触发</p><h3 id="三种监听对象"><a href="#三种监听对象" class="headerlink" title="三种监听对象"></a>三种监听对象</h3><p>ServletContext - 对全局ServletContext及其属性进行监听</p><p>HttpSession - 对用户会话及其属性操作进行监听</p><p>ServletRequest - 对请求及属性操作进行监听</p><p><img src="/assets/1672936668427.png" alt="1672936668427"  /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebListener</span> <span class="keyword">implements</span> <span class="title class_">ServletContextListener</span>, HttpSessionListener, ServletRequestListener &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ServletContext object has been created&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ServletContext object has been destroyed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Request destroyed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent servletRequestEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Request created&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Session created&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Session destroyed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.example.WebListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672937054498.png" alt="1672937054498"  /></p><p>重启时</p><p><img src="/assets/1672937104902.png" alt="1672937104902" style="zoom:120%;" /></p><p><img src="/assets/1672937174422.png" alt="1672937174422"  /></p><p><img src="./images.assets/1672937168419.png" alt="1672937168419"></p><p>而Session会话监听会在getSession()时触发，但销毁会在服务器关闭的30分钟后才进行。</p><p>监听器在现在已经用得很少了，了解一下即可。</p>]]></content>
    
    
    <summary type="html">🥧Ajax&amp;正则表达式&amp;过滤器</summary>
    
    
    
    
    <category term="Java" scheme="https://815101909.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb入门</title>
    <link href="https://815101909.github.io/posts/100005d.html"/>
    <id>https://815101909.github.io/posts/100005d.html</id>
    <published>2023-12-08T12:41:56.000Z</published>
    <updated>2023-12-09T04:34:28.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件结构发展史"><a href="#软件结构发展史" class="headerlink" title="软件结构发展史"></a>软件结构发展史</h2><p>单机时代-桌面应用</p><p>联机时代(Client-Server模式)</p><p>互联网时代(Browser-Server模式)</p><h3 id="单机时代-桌面应用"><a href="#单机时代-桌面应用" class="headerlink" title="单机时代-桌面应用"></a>单机时代-桌面应用</h3><p>桌面应用俗称单机应用，软件所有数据都保存在电脑本地硬盘中</p><p>优点：易于保存，结构简单</p><p>缺点：数据难以共享、安全性差、更新不及时</p><p><img src="/assets/1671694749393.png" alt="1671694749393" style="zoom:80%;" /></p><h3 id="联机时代-Client-Server模式"><a href="#联机时代-Client-Server模式" class="headerlink" title="联机时代(Client-Server模式)"></a>联机时代(Client-Server模式)</h3><p>Client/Server结构(C/S结构)是指客户端和服务器结构</p><p>优点：数据方便共享，安全性高</p><p>缺点：必须安装客户端，升级与维护困难</p><p><img src="/assets/1671695096282.png" alt="1671695096282" style="zoom:80%;" /></p><h3 id="互联网时代-Browser-Server模式"><a href="#互联网时代-Browser-Server模式" class="headerlink" title="互联网时代(Browser-Server模式)"></a>互联网时代(Browser-Server模式)</h3><p>Broswer-Server(B/S)模式即浏览器和服务器模式</p><p>优点：开发简单，无需安装客户端，数据易于共享</p><p>缺点：相较于C/S模式，执行速度与用户体验相对较弱</p><h2 id="B-S模式执行流程"><a href="#B-S模式执行流程" class="headerlink" title="B/S模式执行流程"></a>B/S模式执行流程</h2><p><img src="/assets/1671717731812.png" alt="1671717731812" style="zoom:80%;" /></p><p><img src="/assets/1671717307092.png" alt="1671717307092" style="zoom:80%;" /></p><h2 id="请求与响应"><a href="#请求与响应" class="headerlink" title="请求与响应"></a>请求与响应</h2><p><img src="/assets/1671717414739.png" alt="1671717414739" style="zoom:80%;" /></p><h2 id="J2EE是什么"><a href="#J2EE是什么" class="headerlink" title="J2EE是什么"></a>J2EE是什么</h2><p> J2EE (Java 2 Platform Enterprise Edition) 是指”Java 2企业版”</p><p> B/S模式开发Web应用就是J2EE最核心的功能 </p><p> J2EP由13个功能模块组成 </p><h4 id="J2EP中13个功能模块"><a href="#J2EP中13个功能模块" class="headerlink" title="J2EP中13个功能模块"></a>J2EP中13个功能模块</h4><p><img src="/assets/1671717526615.png" alt="1671717526615" style="zoom:80%;" /></p><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><p><img src="/assets/1671717654465.png" alt="1671717654465" style="zoom:80%;" /></p><h2 id="Apache-Tomcat"><a href="#Apache-Tomcat" class="headerlink" title="Apache Tomcat"></a>Apache Tomcat</h2><p><img src="/assets/1671717758061.png" alt="1671717758061" style="zoom:80%;" /></p><h4 id="Tomcat与Servlet的关系"><a href="#Tomcat与Servlet的关系" class="headerlink" title="Tomcat与Servlet的关系"></a>Tomcat与Servlet的关系</h4><p><img src="/assets/1671717901953.png" alt="1671717901953" style="zoom:80%;" /></p><p><img src="/assets/1671717731812-1702027710913-10.png" alt="1671717731812" style="zoom:80%;" /></p><h2 id="Tomcat安装与运行"><a href="#Tomcat安装与运行" class="headerlink" title="Tomcat安装与运行"></a><strong>Tomcat安装与运行</strong></h2><p>官网：<a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></p><p><img src="/assets/1671717999045.png" alt="1671717999045" style="zoom:80%;" /></p><p><img src="/assets/1671720623705.png" alt="1671720623705" style="zoom:80%;" /></p><p><img src="/assets/1671720602911.png" alt="1671720602911" style="zoom:80%;" /></p><p>查询本机IP，在cmd中输入 ipconfig /all </p><p><img src="/assets/1671722021249.png" alt="1671722021249" style="zoom:80%;" /></p><p>浏览器上输入<a href="http://本机IP:8080/">http://本机IP:8080/</a></p><p><img src="/assets/1671722118055.png" alt="1671722118055" style="zoom:80%;" /></p><p>或者直接输入 localhost:8080，就不用每次都去查IP。</p><p><img src="/assets/1671722328025.png" alt="1671722328025" style="zoom:80%;" /></p><p>调整端口号，8080也可以改成8000，访问时也随之变化为localhost:8000</p><p>端口号被占用时，开启startup会发生闪退，错误发送到logs日志中。</p><p><img src="/assets/1671722488817.png" alt="1671722488817" style="zoom:80%;" /></p><p>点击shutdown关闭端口再启动就不会发生端口号占用情况。</p><h1 id="Servlet入门"><a href="#Servlet入门" class="headerlink" title="Servlet入门"></a>Servlet入门</h1><h2 id="IDEA创建Java-Web工程"><a href="#IDEA创建Java-Web工程" class="headerlink" title="IDEA创建Java Web工程"></a>IDEA创建Java Web工程</h2><p><img src="/assets/1672470280810.png" alt="1672470280810" style="zoom:80%;" /></p><p><a href="https://tomcat.apache.org/whichversion.html">https://tomcat.apache.org/whichversion.html</a></p><p><img src="/assets/1672470482387.png" alt="1672470482387" style="zoom:80%;" /></p><p>这里选3.1</p><p><img src="/assets/1672470584966.png" alt="1672470584966" style="zoom:80%;" /></p><p><img src="/assets/1672470718496.png" alt="1672470718496" style="zoom:80%;" /></p><p><img src="/assets/1672470778493.png" alt="1672470778493" style="zoom:80%;" /></p><p><img src="/assets/1672470807428.png" alt="1672470807428" style="zoom:80%;" /></p><p><img src="/assets/1672470849531.png" alt="1672470849531" style="zoom:80%;" /></p><p><img src="/assets/1672470939559.png" alt="1672470939559" style="zoom:80%;" /></p><p><img src="/assets/1672470957008.png" alt="1672470957008" style="zoom:80%;" /></p><p><img src="/assets/1672471123838.png" alt="1672471123838" style="zoom:80%;" /></p><p><img src="/assets/1672471161022.png" alt="1672471161022" style="zoom:80%;" /></p><p><img src="/assets/1672471201321.png" alt="1672471201321" style="zoom:80%;" /></p><p><img src="/assets/1672471279197.png" alt="1672471279197" style="zoom:80%;" /></p><p><img src="/assets/1672471648457.png" alt="1672471648457" style="zoom:80%;" /></p><p><img src="/assets/1672471635525.png" alt="1672471635525" style="zoom:80%;" /></p><p><img src="/assets/1672471761600.png" alt="1672471761600" style="zoom:80%;" /></p><p><img src="/assets/1672471853143.png" alt="1672471853143"  /></p><hr><h2 id="第一个Servlet"><a href="#第一个Servlet" class="headerlink" title="第一个Servlet"></a>第一个Servlet</h2><p><img src="/assets/1672489324898.png" alt="1672489324898" style="zoom:80%;" /></p><p><img src="/assets/1672489367340.png" alt="1672489367340" style="zoom:80%;" /></p><p><img src="/assets/1672489438066.png" alt="1672489438066" style="zoom:80%;" /></p><p><img src="/assets/1672489925326.png" alt="1672489925326" style="zoom:80%;" /></p><p><img src="/assets/1672490379475.png" alt="1672490379475" style="zoom:80%;" /></p><p><img src="/assets/1672490251090.png" alt="1672490251090" style="zoom:80%;" /></p><p><img src="/assets/1672490351087.png" alt="1672490351087" style="zoom:80%;" /></p><h4 id="图解执行流程"><a href="#图解执行流程" class="headerlink" title="图解执行流程"></a>图解执行流程</h4><p><img src="/assets/1672490490232.png" alt="1672490490232" style="zoom:80%;" /></p><hr><h2 id="JavaWeb工程标准结构"><a href="#JavaWeb工程标准结构" class="headerlink" title="JavaWeb工程标准结构"></a>JavaWeb工程标准结构</h2><p><img src="/assets/1672495212850.png" alt="1672495212850" style="zoom:80%;" /></p><p><img src="/assets/1672495219454.png" alt="1672495219454" style="zoom:80%;" /></p><p><img src="/assets/1672495904576.png" alt="1672495904576" style="zoom:80%;" /></p><p><img src="/assets/1672495917778.png" alt="1672495917778" style="zoom:80%;" /></p><hr><h2 id="Servlet的开发和基本配置"><a href="#Servlet的开发和基本配置" class="headerlink" title="Servlet的开发和基本配置"></a>Servlet的开发和基本配置</h2><h3 id="Servlet开发步骤"><a href="#Servlet开发步骤" class="headerlink" title="Servlet开发步骤"></a>Servlet开发步骤</h3><p>创建Java类，继承HttpServlet</p><p>重写service方法，处理请求，生成响应</p><p>配置web.xml，绑定访问地址</p><p><img src="/assets/1672497683963.png" alt="1672497683963" style="zoom:80%;" /></p><p><img src="/assets/1672497699760.png" alt="1672497699760" style="zoom:80%;" /></p><p><img src="/assets/1672497763167.png" alt="1672497763167" style="zoom:80%;" /></p><hr><h2 id="请求参数的发送与接收"><a href="#请求参数的发送与接收" class="headerlink" title="请求参数的发送与接收"></a>请求参数的发送与接收</h2><h3 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h3><p>请求参数是指浏览器通过请求向Tomcat提交的数据</p><p>请求参数通常是用户输入的数据，待Servlet进行处理</p><p>参数名1=值1&amp;参数名2=值2&amp;参数名n=…</p><h3 id="Servlet接收请求参数"><a href="#Servlet接收请求参数" class="headerlink" title="Servlet接收请求参数"></a>Servlet接收请求参数</h3><p>request.getParameter() -接收单个参数</p><p>request.getParameterValues() -接收多个同名参数</p><p>student.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>学员信息登记表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学员信息登记表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/student&quot;</span>&gt;</span></span><br><span class="line">  姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  手机:<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  性别:</span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;padding: 5px;margin: 5px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  特长:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;spec&quot;</span> <span class="attr">value</span>=<span class="string">&quot;English&quot;</span>/&gt;</span>英语</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;spec&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Program&quot;</span>/&gt;</span>编程</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;spec&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Speech&quot;</span>/&gt;</span>演讲</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;spec&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Swimming&quot;</span>/&gt;</span>游泳</span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672499878243.png" alt="1672499878243" style="zoom:80%;" /></p><p><img src="/assets/1672499903022.png" alt="1672499903022" style="zoom:80%;" /></p><p><img src="/assets/1672500446672.png" alt="1672500446672" style="zoom:80%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">mobile</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;mobile&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sex</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">        String[] specs = request.getParameterValues(<span class="string">&quot;spec&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;name:&quot;</span> + name + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;mobile:&quot;</span> + mobile + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;sex:&quot;</span> + sex + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String spec : specs)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h2&gt;spec:&quot;</span> + spec + <span class="string">&quot;&lt;/h2&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/1672500471239.png" alt="1672500471239" style="zoom:80%;" /></p><p><img src="./images.assets/1672500478815.png" alt="1672500478815" style="zoom:80%;" /><img src="/assets/1672500489079.png" alt="1672500489079" style="zoom:80%;" /></p><hr><h2 id="Get与Post请求方式"><a href="#Get与Post请求方式" class="headerlink" title="Get与Post请求方式"></a>Get与Post请求方式</h2><p>Get方式将请求参数附加在访问地址后显性向服务器发送的方式。</p><p> <a href="http://localhost:8080/sample?name=zhangsan">http://localhost:8080/sample?name=zhangsan</a></p><p>Post方式会将数据放在“请求体”中隐性向服务器发送的方式</p><p> <a href="http://localhost:8080/sample">http://localhost:8080/sample</a></p><p> 请求体：name=zhangsan</p><hr><p>Get常用于不包括敏感信息的查询功能</p><p>  例如：<a href="http://www.baidu.com/s?wd=imooc&amp;rsv_spt=1">http://www.baidu.com/s?wd=imooc&amp;rsv_spt=1</a></p><p>Post用于安全性要求较高的功能或者服务器的“写”操作</p><ul><li><p>​    用户登录</p></li><li><p>​    用户注册</p></li><li><p>​    更新公司账目</p></li></ul><p><img src="/assets/1672502490146.png" alt="1672502490146" style="zoom:80%;" /></p><p><img src="/assets/1672502502436.png" alt="1672502502436" style="zoom:80%;" /></p><hr><p><img src="/assets/1672502554392.png" alt="1672502554392" style="zoom:80%;" /></p><p><img src="/assets/1672502562745.png" alt="1672502562745" style="zoom:80%;" /></p><p><img src="/assets/1672502894469.png" alt="1672502894469"  /></p><hr><h3 id="Get与Post处理方式"><a href="#Get与Post处理方式" class="headerlink" title="Get与Post处理方式"></a>Get与Post处理方式</h3><p>所有请求  -service()方法</p><p>Get请求   -doGet()方法</p><p>Post请求  -doPost()方法</p><p><img src="/assets/1672503089623.png" alt="1672503089623" style="zoom:80%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RequestMethodServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;GET:name:&quot;</span> + name + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h1&gt;POST:name:&quot;</span> + name + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1672503359058.png" alt="1672503359058"  /></p><hr><p><img src="/assets/1672503479340.png" alt="1672503479340"  /></p><p><img src="/assets/1672503470287.png" alt="1672503470287" style="zoom:80%;" /></p><hr><p><img src="/assets/1672503513169.png" alt="1672503513169" style="zoom:80%;" /></p><p><img src="/assets/1672503518562.png" alt="1672503518562" style="zoom:80%;" /></p><hr><h2 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h2><ul><li><p>装载 - web.xml</p></li><li><p>创建 - 构造方法</p></li><li><p>初始化 - init()</p></li><li><p>提供服务 - service()</p></li><li><p>销毁 - destory()</p></li></ul><p>  <img src="/assets/1672504545254.png" alt="1672504545254"  /></p><p>Alt+insert 选择第一个</p><p><img src="/assets/1672504634561.png" alt="1672504634561" style="zoom:80%;" /></p><p><img src="/assets/1672504777792.png" alt="1672504777792" style="zoom:80%;" /></p><p><img src="/assets/1672505332772.png" alt="1672505332772" style="zoom:80%;" /></p><p><img src="/assets/1672505336749.png" alt="1672505336749" style="zoom:80%;" /></p><p>关闭销毁</p><p><img src="/assets/1672505402569.png" alt="1672505402569" style="zoom:80%;" /></p><p>这是利用多线程方式运行。</p><hr><h2 id="使用注解配置Servlet"><a href="#使用注解配置Servlet" class="headerlink" title="使用注解配置Servlet"></a>使用注解配置Servlet</h2><p>Servlet 3.x 之后引入了“注释Annotation” 特性</p><p>注解用于简化Web应用程序的配置过程</p><p>Servlet核心注解：@WebServlet</p><p><img src="/assets/1672539871743.png" alt="1672539871743" style="zoom:80%;" /></p><p><img src="/assets/1672539896717.png" alt="1672539896717"  /></p><hr><h1 id="Servlet进阶"><a href="#Servlet进阶" class="headerlink" title="Servlet进阶"></a>Servlet进阶</h1><p><img src="/assets/1672540534588.png" alt="1672540534588" style="zoom:80%;" /></p><h2 id="WEB请求与响应解析"><a href="#WEB请求与响应解析" class="headerlink" title="WEB请求与响应解析"></a>WEB请求与响应解析</h2><h3 id="请求的结构"><a href="#请求的结构" class="headerlink" title="请求的结构"></a>请求的结构</h3><h4 id="URL与URI"><a href="#URL与URI" class="headerlink" title="URL与URI"></a>URL与URI</h4><p>URL统一资源定位符，表示Web应用对外暴露的访问地址</p><p>​    示例: <a href="http://www.baidu.com/index.html">http://www.baidu.com/index.html</a></p><p>URI统一资源标示符，表示Web应用资源的访问路径</p><p>​    示例: /index.html </p><hr><h4 id="HTTP请求的结构"><a href="#HTTP请求的结构" class="headerlink" title="HTTP请求的结构"></a>HTTP请求的结构</h4><ul><li>HTTP请求包含三部分:请求行、请求头、请求体 </li></ul><p><img src="/assets/1672540920818.png" alt="1672540920818" style="zoom:80%;" /></p><p><img src="/assets/1672542122259.png" alt="1672542122259" style="zoom:80%;" /></p><p><img src="/assets/1672542109666.png" alt="1672542109666" style="zoom:80%;" /></p><p><img src="/assets/1672542098081.png" alt="1672542098081" style="zoom:80%;" /></p><p><img src="/assets/1672542130555.png" alt="1672542130555"  /></p><p><img src="/assets/1672542137390.png" alt="1672542137390"  /></p><hr><p><img src="/assets/1672542748225.png" alt="1672542748225"  /></p><p><img src="/assets/1672542738934.png" alt="1672542738934" style="zoom:80%;" /></p><p><img src="/assets/1672542774367.png" alt="1672542774367"  /></p><hr><h3 id="利用请求开发多端应用"><a href="#利用请求开发多端应用" class="headerlink" title="利用请求开发多端应用"></a>利用请求开发多端应用</h3><h4 id="巧用请求头开发多端应用"><a href="#巧用请求头开发多端应用" class="headerlink" title="巧用请求头开发多端应用"></a>巧用请求头开发多端应用</h4><p><img src="/assets/1672542894567.png" alt="1672542894567" style="zoom:80%;" /></p><p><img src="/assets/1672543025465.png" alt="1672543025465" style="zoom:80%;" /></p><p><img src="/assets/1672543159853.png" alt="1672543159853" style="zoom:80%;" /></p><p><img src="/assets/1672543850864.png" alt="1672543850864" style="zoom:80%;" /></p><p><img src="/assets/1672543531932.png" alt="1672543531932" style="zoom:80%;" /></p><p><img src="/assets/1672543606055.png" alt="1672543606055" style="zoom:80%;" /></p><p><img src="/assets/1672543820574.png" alt="1672543820574" style="zoom:80%;" /></p><p><img src="/assets/1672543680336.png" alt="1672543680336" style="zoom:80%;" /></p><p><img src="/assets/1672543692607.png" alt="1672543692607" style="zoom:80%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/ua&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserAgentServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ua</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;User-Agent&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(ua.toLowerCase().indexOf(<span class="string">&quot;windows nt&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            output = <span class="string">&quot;&lt;h1&gt;这是PC端页面&lt;/h1&gt;&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ua.toLowerCase().indexOf(<span class="string">&quot;iphone&quot;</span>) != -<span class="number">1</span> || ua.toLowerCase().indexOf(<span class="string">&quot;android&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            output = <span class="string">&quot;&lt;h1&gt;这是移动端页面&lt;/h1&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);<span class="comment">//字符集编码</span></span><br><span class="line">        response.getWriter().println(output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="响应的结构"><a href="#响应的结构" class="headerlink" title="响应的结构"></a>响应的结构</h3><p>HTTP响应应包含三部分：响应行、响应头、响应体</p><p><img src="/assets/1672551894480.png" alt="1672551894480" style="zoom:80%;" /></p><h5 id="HTTP常见状态码"><a href="#HTTP常见状态码" class="headerlink" title="HTTP常见状态码"></a>HTTP常见状态码</h5><p><img src="/assets/1672551933891.png" alt="1672551933891" style="zoom:80%;" /></p><p><img src="/assets/1672554221043.png" alt="1672554221043" style="zoom:80%;" /></p><p><img src="/assets/1672554233993.png" alt="1672554233993" style="zoom:80%;" /></p><p><img src="/assets/1672554291936.png" alt="1672554291936" style="zoom:80%;" /></p><p><img src="/assets/1672554473213.png" alt="1672554473213" style="zoom:80%;" /></p><p><img src="/assets/1672554480241.png" alt="1672554480241" style="zoom:80%;" /></p><hr><h3 id="ContentType的作用"><a href="#ContentType的作用" class="headerlink" title="ContentType的作用"></a>ContentType的作用</h3><p><img src="/assets/1672554701555.png" alt="1672554701555"  /></p><p>ContentType绝对浏览器采用何种方式对响应体进行处理</p><p><img src="/assets/1672554629705.png" alt="1672554629705" style="zoom:80%;" /></p><p><img src="/assets/1672554952300.png" alt="1672554952300" style="zoom:80%;" /></p><p><img src="/assets/1672554965848.png" alt="1672554965848" style="zoom:80%;" /></p><p><img src="/assets/1672554994050.png" alt="1672554994050" style="zoom:80%;" /></p><hr><p><img src="/assets/1672555089166.png" alt="1672555089166" style="zoom:80%;" /></p><p><img src="/assets/1672555105963.png" alt="1672555105963" style="zoom:80%;" /></p><hr><p><img src="/assets/1672555140016.png" alt="1672555140016" style="zoom:80%;" /></p><p><img src="/assets/1672555152508.png" alt="1672555152508" style="zoom:80%;" /></p><hr><p><img src="/assets/1672555234242.png" alt="1672555234242" style="zoom:80%;" /></p><p><img src="/assets/1672555249592.png" alt="1672555249592"  /></p><p><img src="/assets/1672555265583.png" alt="1672555265583" style="zoom:80%;" /></p><hr><h3 id="请求转发与响应重定向"><a href="#请求转发与响应重定向" class="headerlink" title="请求转发与响应重定向"></a>请求转发与响应重定向</h3><p>多个Servlet之间跳转有两种方式：</p><p>request.getRequestDispatcher().forward - 请求转发</p><p>response.sendRedirect - 响应重定向</p><p><img src="/assets/1672556935303.png" alt="1672556935303" style="zoom:80%;" /></p><p><img src="/assets/1672556948363.png" alt="1672556948363" style="zoom:80%;" /></p><p><img src="/assets/1672556981113.png" alt="1672556981113" style="zoom:80%;" /></p><p><img src="/assets/1672556972072.png" alt="1672556972072" style="zoom:80%;" /></p><hr><h4 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a><strong>请求转发</strong></h4><p><img src="/assets/1672569227228.png" alt="1672569227228" style="zoom:80%;" /></p><p><img src="/assets/1672569053423.png" alt="1672569053423" style="zoom:80%;" /></p><p><img src="/assets/1672569064826.png" alt="1672569064826" style="zoom:80%;" /></p><p><img src="/assets/1672569081359.png" alt="1672569081359" style="zoom:80%;" /></p><p><img src="/assets/1672569088466.png" alt="1672569088466" style="zoom:80%;" /></p><h4 id="响应重定向"><a href="#响应重定向" class="headerlink" title="响应重定向"></a><strong>响应重定向</strong></h4><p><img src="/assets/1672569490439.png" alt="1672569490439" style="zoom:80%;" /></p><p><img src="/assets/1672569503863.png" alt="1672569503863" style="zoom:80%;" /></p><p>解决405要在/index中在添加doGet方法</p><p><img src="/assets/1672569623584.png" alt="1672569623584" style="zoom:80%;" /></p><p>但，这是蠢方法，可以改成以下方法</p><p><img src="/assets/1672569713100.png" alt="1672569713100" style="zoom:80%;" /></p><p><img src="/assets/1672569736009.png" alt="1672569736009" style="zoom:80%;" /></p><hr><h3 id="请求转发与重定向的原理"><a href="#请求转发与重定向的原理" class="headerlink" title="请求转发与重定向的原理"></a>请求转发与重定向的原理</h3><h4 id="请求转发-1"><a href="#请求转发-1" class="headerlink" title="请求转发"></a>请求转发</h4><p>请求转发是服务器跳转，只会产生一次请求</p><p>请求转发的语句是：request.getRequestDispatcher().forward()</p><p><img src="/assets/1672575113451.png" alt="1672575113451" style="zoom:80%;" /></p><h4 id="响应重定向-1"><a href="#响应重定向-1" class="headerlink" title="响应重定向"></a>响应重定向</h4><p>重定向则是浏览器端跳转，会产生两次请求</p><p>响应重定向语句是：response.sendRedirect()</p><p><img src="/assets/1672575265559.png" alt="1672575265559" style="zoom:80%;" /></p><h4 id="设置请求自定义属性"><a href="#设置请求自定义属性" class="headerlink" title="设置请求自定义属性"></a>设置请求自定义属性</h4><p>请求允许创建自定义属性</p><p>设置请求属性：request.setAttribute(属性名, 属性值)</p><p>获取请求属性：Object attr = request.getAttribute(属性名)</p><p><img src="/assets/1672575789943.png" alt="1672575789943" style="zoom:80%;" /></p><p><img src="/assets/1672575809890.png" alt="1672575809890" style="zoom:80%;" /></p><p><img src="/assets/1672575823816.png" alt="1672575823816" style="zoom:80%;" /></p><hr><p><img src="/assets/1672575908170.png" alt="1672575908170" style="zoom:80%;" /></p><p><img src="/assets/1672575923293.png" alt="1672575923293" style="zoom:90%;" /></p><p>请求自定义属性不能用响应重定向。</p><hr><h2 id="Session与ServletContext原理"><a href="#Session与ServletContext原理" class="headerlink" title="Session与ServletContext原理"></a>Session与ServletContext原理</h2><h3 id="浏览器Cookie"><a href="#浏览器Cookie" class="headerlink" title="浏览器Cookie"></a>浏览器Cookie</h3><p>默认是本次浏览器窗口关闭就失效, </p><p><img src="/assets/1672578256837.png" alt="1672578256837" style="zoom:90%;" /></p><p><img src="/assets/1672578264513.png" alt="1672578264513" style="zoom:90%;" /></p><hr><p><img src="/assets/1672578626874.png" alt="1672578626874" style="zoom:90%;" /></p><p><img src="/assets/1672578349455.png" alt="1672578349455" style="zoom:80%;" /></p><p><img src="./images.assets/1672578444762.png" alt="1672578444762" style="zoom:80%;" /></p><p>默认cookie的生成时间是和当前浏览器的进程保持一致。</p><p><img src="/assets/1672578774399.png" alt="1672578774399" style="zoom:80%;" /></p><hr><h3 id="Session-用户会话"><a href="#Session-用户会话" class="headerlink" title="Session-用户会话"></a>Session-用户会话</h3><p>Session（用户会话）用于保存与“浏览器窗口”对应的数据</p><p>Session的数据存储在Tomcat服务器的内存中，具有时效性</p><p>Session通过浏览器Cookie的SessionId值提取用户数据</p><h4 id="Session常用方法"><a href="#Session常用方法" class="headerlink" title="Session常用方法"></a>Session常用方法</h4><p>request.getSession() - 获取Session对象</p><p>get|set|removeAttribute() -获取|设置|删除Session属性</p><p>setMaxInactiveInterval() - 设置Session超时时间 (默认存在30分钟) </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/session/random&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RandomServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">10000</span>);</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;random&quot;</span>, random);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        resp.getWriter().println(<span class="string">&quot;&lt;h2&gt;随机数&quot;</span> + random + <span class="string">&quot;已生成&lt;/h2&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/1672583045622.png" alt="1672583045622" style="zoom:80%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/session/show&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">random</span> <span class="operator">=</span> (Integer) session.getAttribute(<span class="string">&quot;random&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        resp.getWriter().println(<span class="string">&quot;name=random的session值为：&quot;</span> + random);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/1672583331683.png" alt="1672583331683" style="zoom:80%;" /></p><hr><h3 id="Session的执行原理"><a href="#Session的执行原理" class="headerlink" title="Session的执行原理"></a>Session的执行原理</h3><h4 id="Session的原理"><a href="#Session的原理" class="headerlink" title="Session的原理"></a>Session的原理</h4><p><img src="/assets/1672583835661.png" alt="1672583835661" style="zoom:80%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet.forward;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckLoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (username.equals(<span class="string">&quot;admin&quot;</span>) &amp;&amp; password.equals(<span class="string">&quot;123456&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户登录成功&quot;</span>);</span><br><span class="line">            <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">            session.setAttribute(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">            <span class="comment">//响应重定向</span></span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/index&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户登录失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet.forward;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">indexServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//        String username = (String) request.getAttribute(&quot;username&quot;);</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) session.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        response.getWriter().println(<span class="string">&quot;I&#x27;m person, 当前用户：&quot;</span> + username);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/1672584588669.png" alt="1672584588669" style="zoom:90%;" /></p><p><img src="/assets/1672584661279.png" alt="1672584661279" style="zoom:90%;" /></p><p><img src="/assets/1672584687565.png" alt="1672584687565" style="zoom:90%;" /></p><hr><h3 id="ServletContext与三大作用域对象"><a href="#ServletContext与三大作用域对象" class="headerlink" title="ServletContext与三大作用域对象"></a>ServletContext与三大作用域对象</h3><h4 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h4><p>ServletContext(Servlet上下文对象)，是Web应用全局对象</p><p>一个Web应用只会创建一个ServletContext对象</p><p>ServletContext随着Web应用启动而自动创建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet.servletcontext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/servletContext/init&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletInitServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> req.getServletContext();</span><br><span class="line">        servletContext.setAttribute(<span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;Copyright 2021 exp.com 京ICP备 12003892号-11 公网安备11010802030151号&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        resp.getWriter().println(<span class="string">&quot;ServletContext已初始化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/assets/1672587757581.png" alt="1672587757581" style="zoom:100%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.servlet.servletcontext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/servletContext/index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> req.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">copyright</span> <span class="operator">=</span> (String) context.getAttribute(<span class="string">&quot;copyright&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;导航栏&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;hr/&gt;&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;首页正文&quot;</span>);</span><br><span class="line">        out.println(<span class="string">&quot;&lt;hr/&gt;&quot;</span>);</span><br><span class="line">        out.println(copyright);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1672588234258.png" alt="1672588234258" style="zoom:80%;" /></p><hr><h3 id="Java-Web三大作用域对象"><a href="#Java-Web三大作用域对象" class="headerlink" title="Java Web三大作用域对象"></a>Java Web三大作用域对象</h3><p>HttpServletRequest - 请求对象</p><p>HttpSession - 用户会话对象</p><p>ServletContetx - Web应用全局对象</p><p>以上作用范围按从小到大排序。</p><hr><h2 id="Servlet开发应用实践"><a href="#Servlet开发应用实践" class="headerlink" title="Servlet开发应用实践"></a>Servlet开发应用实践</h2><h3 id="Web应用的中文乱码由来"><a href="#Web应用的中文乱码由来" class="headerlink" title="Web应用的中文乱码由来"></a>Web应用的中文乱码由来</h3><p>发送方与接收方对数据使用不同的字符集解析就会产生乱码</p><p>解决乱码的思路是保证浏览器与服务器统一为UTF-8编码即可</p><p>在Servlet中请求与响应都需要设置UTF-8字符集</p><p><img src="/assets/1672588982255.png" alt="1672588982255" style="zoom:80%;" /></p><p><img src="/assets/1672590069610.png" alt="1672590069610" style="zoom:80%;" /></p><p><img src="/assets/1672589996444.png" alt="1672589996444" style="zoom:80%;" /></p><p><img src="/assets/1672590339490.png" alt="1672590339490"  /></p><p><img src="/assets/1672590344956.png" alt="1672590344956"  /></p><p><img src="/assets/1672590358528.png" alt="1672590358528" style="zoom: 150%;" /></p><p><img src="/assets/1672590393875.png" alt="1672590393875"  /></p><hr><h3 id="web-xml配置默认首页与通配符映射"><a href="#web-xml配置默认首页与通配符映射" class="headerlink" title="web.xml配置默认首页与通配符映射"></a>web.xml配置默认首页与通配符映射</h3><h4 id="web-xml常用配置"><a href="#web-xml常用配置" class="headerlink" title="web.xml常用配置"></a>web.xml常用配置</h4><p>修改web应用默认首页</p><p>Servlet 通配符映射及初始化参数</p><p>设置404、500等状态码默认页面</p><p><img src="/assets/1672626874561.png" alt="1672626874561"  /></p><p><img src="/assets/1672626885604.png" alt="1672626885604"  /></p><p><img src="/assets/1672626889088.png" alt="1672626889088" style="zoom:80%;" /></p><hr><h4 id="常见的URL用法"><a href="#常见的URL用法" class="headerlink" title="常见的URL用法"></a>常见的URL用法</h4><p><img src="/assets/1672626932541.png" alt="1672626932541" style="zoom:80%;" /></p><p><img src="/assets/1672627881304.png" alt="1672627881304"  /></p><p><img src="/assets/1672627752940.png" alt="1672627752940"  /></p><p><img src="/assets/1672627758294.png" alt="1672627758294" style="zoom:80%;" /></p><p><img src="/assets/1672628331859.png" alt="1672628331859"  /></p><p>但前缀加后缀是错误的。</p><p><img src="/assets/1672628371398.png" alt="1672628371398"  /></p><p>对所有请求进行映射，后面不用加*</p><p><img src="/assets/1672628452169.png" alt="1672628452169"  /></p><hr><h3 id="Servlet启动时加载与错误页面设置"><a href="#Servlet启动时加载与错误页面设置" class="headerlink" title="Servlet启动时加载与错误页面设置"></a>Servlet启动时加载与错误页面设置</h3><h4 id="启动时加载Servlet"><a href="#启动时加载Servlet" class="headerlink" title="启动时加载Servlet"></a>启动时加载Servlet</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">web.xml使用<span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>设置启动加载</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>0~9999<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">启动时加载在工作中常用于系统的预处理</span><br></pre></td></tr></table></figure><p><img src="/assets/1672628725143.png" alt="1672628725143"  /></p><p>InitTableServlet用于建表</p><p>ImportServlet用于导入数据</p><p><img src="/assets/1672628822381.png" alt="1672628822381" style="zoom:80%;" /></p><p>InitTableServlet也同样</p><p><img src="/assets/1672629098893.png" alt="1672629098893" style="zoom:80%;" /></p><p>配置web.xml，这里提示要mapping，但只要到他的启动时加载功能。</p><p>而load-on-startup数值大小决定着运行顺序。</p><p><img src="/assets/1672662330846.png" alt="1672662330846" style="zoom:80%;" /></p><p><img src="/assets/1672662339582.png" alt="1672662339582" style="zoom:80%;" /></p><p><img src="/assets/1672662993288.png" alt="1672662993288"  /></p><hr><p><img src="/assets/1672663303340.png" alt="1672663303340"  /></p><p><img src="/assets/1672663313910.png" alt="1672663313910"  /></p><p><img src="/assets/1672663323291.png" alt="1672663323291"  /></p><p><img src="/assets/1672663328891.png" alt="1672663328891"  /></p><hr><h4 id="自定义错误页面"><a href="#自定义错误页面" class="headerlink" title="自定义错误页面"></a>自定义错误页面</h4><p><img src="/assets/1672663706797.png" alt="1672663706797" style="zoom:80%;" /><img src="/assets/1672663740337.png" alt="1672663740337" style="zoom:80%;" /></p><p><img src="/assets/1672663750752.png" alt="1672663750752"  /></p><p><img src="/assets/1672663758068.png" alt="1672663758068"  /></p><p><img src="/assets/1672666542304.png" alt="1672666542304" style="zoom:80%;" /></p><p><img src="/assets/1672666577499.png" alt="1672666577499" style="zoom:80%;" /></p><p><img src="/assets/1672666580815.png" alt="1672666580815" style="zoom:80%;" /></p><p>而错误在后台log中显示</p><p><img src="/assets/1672666660201.png" alt="1672666660201" style="zoom:80%;" /></p><hr><h3 id="JavaWeb应用打包与发布"><a href="#JavaWeb应用打包与发布" class="headerlink" title="JavaWeb应用打包与发布"></a>JavaWeb应用打包与发布</h3><p> Java Web应用采用war包进行发布 </p><p> 发布路径为:{TOMCAT_HOME}/webapps</p><p> 利用Maven实现war包导出 </p><p><img src="/assets/1672666875926.png" alt="1672666875926"  /></p><p>直接点这生成的是jar包，但我们要的是war包</p><p>于是要加入一行代码</p><p><img src="/assets/1672666977780.png" alt="1672666977780" style="zoom:80%;" /></p><p>在点击生成war包到target目录下</p><p>报Cannot access defaults field of Properties错误的话</p><p>在pom.xml中在加入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>               <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1672667409320.png" alt="1672667409320"  /></p><p><img src="/assets/1672667509126.png" alt="1672667509126" style="zoom:80%;" /></p><p><img src="/assets/1672667765040.png" alt="1672667765040"  /></p><p><img src="/assets/1672667845263.png" alt="1672667845263"  /></p><p>可发现之前里面包含jar包的lib目录消失了。</p><h4 id="Maven的Scope属性"><a href="#Maven的Scope属性" class="headerlink" title="Maven的Scope属性"></a>Maven的Scope属性</h4><p><img src="/assets/1672667964395.png" alt="1672667964395"  /></p><p>改最终导出名</p><p><img src="/assets/1672668414558.png" alt="1672668414558"  /></p><p><img src="/assets/1672668425051.png" alt="1672668425051"  /></p><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><p><img src="/assets/1672668527424.png" alt="1672668527424"  /></p><p>最后将该war包转移到tomcat目录下webapps中即外部应用的发布就完成了。</p><p>打开startup.bat</p><p><img src="/assets/1672669506644.png" alt="1672669506644"  /></p><p>自动解压出来。</p><p>在地址栏输入<a href="http://localhost:8000/index.html">http://localhost:8000/index.html</a></p><p><img src="/assets/1672673649665.png" alt="1672673649665" style="zoom:80%;" /></p><p>这里解压缩后添加了上下文，所以还得添加/web-servlet</p><p><a href="http://localhost:8000/web-servlet/index.html">http://localhost:8000/web-servlet/index.html</a></p><p><img src="/assets/1672673733188.png" alt="1672673733188" style="zoom:80%;" /></p><p>如果没响应，打开shutdown.bat再启动</p><p><img src="/assets/1672673914589.png" alt="1672673914589" style="zoom:80%;" /></p><p>在tomcat的conf中server.xml最下面那加入这条可删除上下文。</p><p><img src="/assets/1672673994516.png" alt="1672673994516" style="zoom:80%;" /></p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="/assets/1672674517714.png" alt="1672674517714" style="zoom:80%;" /></p><p><img src="/assets/1672674608594.png" alt="1672674608594" style="zoom:80%;" /></p><p><img src="/assets/1672674622097.png" alt="1672674622097" style="zoom:80%;" /></p><p><img src="/assets/1672674699530.png" alt="1672674699530" style="zoom:80%;" /></p><p><img src="/assets/1672674728229.png" alt="1672674728229" style="zoom:80%;" /></p><p><img src="/assets/1672674755868.png" alt="1672674755868" style="zoom:80%;" /></p><p><img src="/assets/1672674794800.png" alt="1672674794800" style="zoom:80%;" /></p><p><img src="/assets/1672674811631.png" alt="1672674811631" style="zoom:80%;" /></p><p><img src="/assets/1672674856364.png" alt="1672674856364" style="zoom:80%;" /></p><p><img src="/assets/1672674874143.png" alt="1672674874143" style="zoom:80%;" /></p><p><img src="/assets/1672674913325.png" alt="1672674913325" style="zoom:80%;" /></p><p><img src="/assets/1672674995295.png" alt="1672674995295" style="zoom:80%;" /></p><p><img src="/assets/1672675031473.png" alt="1672675031473" style="zoom:80%;" /></p><p><img src="/assets/1672675068790.png" alt="1672675068790" style="zoom:80%;" /></p><p><img src="/assets/1672675142417.png" alt="1672675142417" style="zoom:80%;" /></p><p><img src="/assets/1672675172376.png" alt="1672675172376" style="zoom:80%;" /></p>]]></content>
    
    
    <summary type="html">🥧Java Web指的是使用Java编程语言开发的Web应用程序。通常，这类应用程序运行在Java Web服务器。</summary>
    
    
    
    
    <category term="Java" scheme="https://815101909.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Redis入门</title>
    <link href="https://815101909.github.io/posts/100004d.html"/>
    <id>https://815101909.github.io/posts/100004d.html</id>
    <published>2023-12-07T08:42:59.000Z</published>
    <updated>2023-12-09T06:49:23.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redis简介"><a href="#Redis简介" class="headerlink" title="Redis简介"></a>Redis简介</h1><h2 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h2><p>Redis介绍与安装</p><p>掌握Redis的常用命令与数据类型</p><p>掌握在Java中的操作</p><h2 id="Redis的由来"><a href="#Redis的由来" class="headerlink" title="Redis的由来"></a>Redis的由来</h2><p><img src="/assets/image-20230115155321993.png" alt="image-20230115155321993"  /></p><p><img src="/assets/image-20230115155616941.png" alt="image-20230115155616941" style="zoom:80%;" /></p><h2 id="Redis介绍"><a href="#Redis介绍" class="headerlink" title="Redis介绍"></a>Redis介绍</h2><p>Redis是Key-Value型NoSQL数据库</p><p>Redis将数据存储在内存中，同时也能持久化到磁盘</p><p>Redis常用于缓存，利用内存的高效提高程序的处理速度</p><h2 id="Redis特点"><a href="#Redis特点" class="headerlink" title="Redis特点"></a>Redis特点</h2><p>速度快</p><p>广泛的语言支持</p><p>持久化</p><p>多种数据结构</p><p>主从复制</p><p>分布式与高可用</p><h1 id="Redis安装与常用配置"><a href="#Redis安装与常用配置" class="headerlink" title="Redis安装与常用配置"></a>Redis安装与常用配置</h1><p>在Linux系统中安装Redis</p><p>在Windows系统中安装Redis</p><h2 id="在Linux系统中安装Redis"><a href="#在Linux系统中安装Redis" class="headerlink" title="在Linux系统中安装Redis"></a>在Linux系统中安装Redis</h2><p><a href="https://redis.io/">https://redis.io/</a></p><p><a href="https://redis.io/download/">https://redis.io/download/</a></p><p><img src="/assets/image-20230115235435877.png" alt="image-20230115235435877" style="zoom:80%;" /></p><p>这里下载5.0.2的</p><p><img src="/assets/image-20230115235633247.png" alt="image-20230115235633247" style="zoom:80%;" /></p><p><img src="/assets/image-20230116002414358.png" alt="image-20230116002414358" style="zoom:80%;" /></p><p><img src="/assets/image-20230116003351213.png" alt="image-20230116003351213"  /></p><p><img src="/assets/image-20230116003517679.png" alt="image-20230116003517679" style="zoom:80%;" /></p><p><img src="/assets/image-20230116003740967.png" alt="image-20230116003740967" style="zoom:80%;" /></p><p><img src="/assets/image-20230116003806621.png" alt="image-20230116003806621"  /></p><p><img src="/assets/image-20230116003846829.png" alt="image-20230116003846829"  /></p><p><img src="/assets/image-20230116004300261.png" alt="image-20230116004300261" style="zoom:80%;" /></p><p>这就是redis的源代码，再用make进行编译安装；</p><p><img src="/assets/image-20230116005141076.png" alt="image-20230116005141076" style="zoom:80%;" /></p><p><img src="/assets/image-20230116005228179.png" alt="image-20230116005228179" style="zoom:80%;" /></p><p><img src="/assets/image-20230116005307032.png" alt="image-20230116005307032" style="zoom:150%;" /></p><p><img src="/assets/image-20230116005420898.png" alt="image-20230116005420898" style="zoom:80%;" /></p><p><img src="/assets/image-20230116005527203.png" alt="image-20230116005527203" style="zoom:80%;" /></p><p><img src="/assets/image-20230116005541489.png" alt="image-20230116005541489" style="zoom:80%;" /></p><p>redis启动成功；</p><h2 id="Windows系统安装Redis"><a href="#Windows系统安装Redis" class="headerlink" title="Windows系统安装Redis"></a><strong>Windows系统安装Redis</strong></h2><p><a href="https://github.com/MicrosoftArchive/redis">https://github.com/MicrosoftArchive/redis</a></p><p><img src="/assets/image-20230116010726341.png" style="zoom:80%;" /></p><p><img src="/assets/image-20230116010841161.png" alt="image-20230116010841161" style="zoom:80%;" /></p><p><img src="/assets/image-20230116011028365.png" alt="image-20230116011028365" style="zoom:80%;" /></p><p>启动命令；conf的核心文件</p><p><img src="/assets/image-20230116011157750.png" alt="image-20230116011157750" style="zoom:80%;" /></p><p><img src="/assets/image-20230116011246200.png" alt="image-20230116011246200" style="zoom:80%;" /></p><h2 id="守护进程方式启动Redis"><a href="#守护进程方式启动Redis" class="headerlink" title="守护进程方式启动Redis"></a><strong>守护进程方式启动Redis</strong></h2><h3 id="Redis的常用基本配置"><a href="#Redis的常用基本配置" class="headerlink" title="Redis的常用基本配置"></a>Redis的常用基本配置</h3><p><img src="/assets/image-20230116112335756.png" alt="image-20230116112335756" style="zoom:80%;" /></p><p>启动redis</p><p><img src="/assets/image-20230116113258947.png" alt="image-20230116113258947" style="zoom:80%;" /></p><p>按ctrl C 退出服务</p><p><img src="/assets/image-20230116113329193.png" alt="image-20230116113329193" style="zoom:80%;" /></p><p>关掉终端也会关闭服务，但我们并不想这样，想让他保持在后台。</p><p>进入redis的配置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> redis.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>找到守护进程，改为yes：</p><p><img src="/assets/image-20230116113537110.png" alt="image-20230116113537110" style="zoom:80%;" /></p><p>按i进入编辑模式，修改为yes，再按Esc退出比较模式；</p><p>最后按:wq 保存并退出；</p><p>再启动服务：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="regexp">/src/</span>redis-server redis.conf</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230116113811592.png" alt="image-20230116113811592" style="zoom:80%;" /></p><p>验证redis是否启动成功：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">netstat -tulpn</span></span><br></pre></td></tr></table></figure><p>查看当前系统所占端口</p><p><img src="/assets/image-20230116114020431.png" alt="image-20230116114020431" style="zoom:80%;" /></p><p>这时关闭再打开终端查看，进程仍在，说明守护进程启动成功，可以在后台进行；</p><p>如果要关闭redis；，可以使用kill</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kill</span> -<span class="number">9</span> <span class="number">2844</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230116114426319.png" alt="image-20230116114426319" style="zoom:80%;" /></p><p>端口就不见了；</p><p>但kill过于粗暴，不建议这么使用，后面我们用redis提供的命令进行关闭；</p><h2 id="Redis常用基本配置"><a href="#Redis常用基本配置" class="headerlink" title="Redis常用基本配置"></a><strong>Redis常用基本配置</strong></h2><p><img src="/assets/image-20230116141844901.png" alt="image-20230116141844901" style="zoom:80%;" /></p><p><img src="/assets/image-20230116142905575.png" alt="image-20230116142905575" style="zoom:80%;" /></p><p><img src="/assets/image-20230116142954853.png" alt="image-20230116142954853" style="zoom:80%;" /></p><p>进入cli命令</p><p><img src="/assets/image-20230116143143480.png" alt="image-20230116143143480"  /></p><p>exit可以退出命令</p><p><img src="/assets/image-20230116143216034.png" alt="image-20230116143216034"  /></p><p>关闭redis服务用</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./src/redis-cli</span> <span class="keyword">shutdown</span></span><br></pre></td></tr></table></figure><p>这样就不用kill了。</p><p>进入配置</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> redis.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230116143425948.png" alt="image-20230116143425948" style="zoom:80%;" /></p><p>建议改掉，免得遭受黑客攻击：</p><p><img src="/assets/image-20230116143534114.png" alt="image-20230116143534114"  /></p><p><img src="/assets/image-20230116143609938.png" alt="image-20230116143609938"  /></p><p><img src="/assets/image-20230116143933137.png" alt="image-20230116143933137"  /></p><p>最后输入:wq保存并退出；</p><p><img src="/assets/image-20230116144118615.png" alt="image-20230116144118615" style="zoom:80%;" /></p><p>启动的logo不见了，它被放到了log里面</p><p><img src="/assets/image-20230116144307581.png" alt="image-20230116144307581" style="zoom:80%;" /></p><p>尝试cli命令</p><p><img src="/assets/image-20230116144344599.png" alt="image-20230116144344599" style="zoom:80%;" /></p><p>发现端口号连接不上；</p><p>修改端口<img src="/assets/image-20230116144500305.png" alt="image-20230116144500305" style="zoom:80%;" /></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="attribute">src</span>/redis-cli -<span class="selector-tag">p</span> <span class="number">6380</span></span><br></pre></td></tr></table></figure><p>选择数据库：</p><p><img src="/assets/image-20230116144817054.png" alt="image-20230116144817054"  /></p><p>15最大。</p><p>修改数据库数量：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> redis.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230116144920342.png" alt="image-20230116144920342" style="zoom:80%;" /></p><p><img src="/assets/image-20230116144949955.png" alt="image-20230116144949955"  /></p><p>重启配置生效：</p><p><img src="/assets/image-20230116145231667.png" alt="image-20230116145231667" style="zoom:80%;" /></p><p>设置密码：</p><p><img src="/assets/image-20230116145403287.png" alt="image-20230116145403287" style="zoom:80%;" /></p><p>这里被注释了，直接去掉；</p><p>默认密码foobared删掉，改成12345；</p><p><img src="/assets/image-20230116145503716.png" alt="image-20230116145503716"  /></p><p>:wq保存退出；</p><p><img src="/assets/image-20230116150119258.png" alt="image-20230116150119258" style="zoom:80%;" /></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">auth password</span></span><br></pre></td></tr></table></figure><p>更改数据保存路径：</p><p>进入redis.conf</p><p><img src="/assets/image-20230116150307775.png" alt="image-20230116150307775"  /></p><p>大多情况下不需要修改；</p><p><img src="/assets/image-20230116150459523.png" alt="image-20230116150459523" style="zoom:80%;" /></p><p>dump.rdb功能是全量保存，防止宕机带来的数据损失；</p><h2 id="Redis通用命令"><a href="#Redis通用命令" class="headerlink" title="Redis通用命令"></a><strong>Redis通用命令</strong></h2><p><img src="/assets/image-20230116153630049.png" alt="image-20230116153630049" style="zoom:80%;" /></p><p><img src="/assets/image-20230116154240244.png" alt="image-20230116154240244" style="zoom:80%;" /></p><p><img src="/assets/image-20230116154601202.png" alt="image-20230116154601202"  /></p><p><img src="/assets/image-20230116154912917.png" alt="image-20230116154912917"  /></p><p><img src="/assets/image-20230116155321226.png" alt="image-20230116155321226"  /></p><p>设置存在时间</p><p>查看剩余时间</p><p><img src="/assets/image-20230116155436376.png" alt="image-20230116155436376"  /></p><hr><h1 id="Redis数据类型"><a href="#Redis数据类型" class="headerlink" title="Redis数据类型"></a>Redis数据类型</h1><p><img src="/assets/image-20230116155716541.png" alt="image-20230116155716541"  /></p><h2 id="String-字符串类型"><a href="#String-字符串类型" class="headerlink" title="String 字符串类型"></a><strong>String 字符串类型</strong></h2><p><img src="/assets/image-20230116155752795.png" alt="image-20230116155752795"  /></p><h3 id="字符命令"><a href="#字符命令" class="headerlink" title="字符命令"></a>字符命令</h3><p><img src="/assets/image-20230116155953822.png" alt="image-20230116155953822"  /></p><p><img src="/assets/image-20230116160454665.png" alt="image-20230116160454665"  /></p><p><img src="/assets/image-20230116160912871.png" alt="image-20230116160912871"  /></p><p>incr和decrby使用得不是特别多，了解一下就好；</p><p>删除key用del</p><p><img src="/assets/image-20230116161118432.png" alt="image-20230116161118432"  /></p><h2 id="Hash-键值类型"><a href="#Hash-键值类型" class="headerlink" title="Hash 键值类型"></a><strong>Hash 键值类型</strong></h2><p><img src="/assets/image-20230116161222997.png" alt="image-20230116161222997"  /></p><h3 id="Hash命令"><a href="#Hash命令" class="headerlink" title="Hash命令"></a>Hash命令</h3><p><img src="/assets/image-20230116161535180.png" alt="image-20230116161535180"  /></p><p><img src="/assets/image-20230116162358507.png" alt="image-20230116162358507"  /></p><p><img src="/assets/image-20230116162524610.png" alt="image-20230116162524610"  /></p><p><img src="/assets/image-20230116162617975.png" alt="image-20230116162617975"  /></p><p><img src="/assets/image-20230116162644324.png" alt="image-20230116162644324"  /></p><p><img src="/assets/image-20230116162817610.png" alt="image-20230116162817610"  /></p><p><img src="/assets/image-20230116162835786.png" alt="image-20230116162835786"  /></p><h2 id="List-列表类型"><a href="#List-列表类型" class="headerlink" title="List 列表类型"></a><strong>List 列表类型</strong></h2><p><img src="/assets/image-20230116170835293.png" alt="image-20230116170835293"  /></p><h3 id="List-命令"><a href="#List-命令" class="headerlink" title="List 命令"></a>List 命令</h3><p><img src="/assets/image-20230116171131458.png" alt="image-20230116171131458" style="zoom:80%;" /></p><p><img src="D:\Java学习笔记\Redis入门.assets\image-20230116171235414.png" alt="image-20230116171235414"></p><p><img src="/assets/image-20230116172214206.png" alt="image-20230116172214206"  /></p><h2 id="Set与Zset集合类型"><a href="#Set与Zset集合类型" class="headerlink" title="Set与Zset集合类型"></a><strong>Set与Zset集合类型</strong></h2><p><img src="/assets/image-20230116173841494.png" alt="image-20230116173841494" style="zoom:80%;" /></p><p>PS：集合在项目中比较少用。</p><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><p><img src="/assets/image-20230116174613915.png" alt="image-20230116174613915"  /></p><p>不能插入相同的值，说明是全局唯一的。</p><p><img src="/assets/image-20230116174659994.png" alt="image-20230116174659994"  /></p><p><img src="/assets/image-20230116174831403.png" alt="image-20230116174831403"  /></p><p><img src="/assets/image-20230116174856797.png" alt="image-20230116174856797"  /></p><p><img src="/assets/image-20230116175023416.png" alt="image-20230116175023416"  /></p><p><img src="/assets/image-20230116175252991.png" alt="image-20230116175252991"  /></p><h3 id="ZSet"><a href="#ZSet" class="headerlink" title="ZSet"></a>ZSet</h3><p><img src="/assets/image-20230116175703353.png" alt="image-20230116175703353" style="zoom:80%;" /></p><p><img src="/assets/image-20230116175734184.png" alt="image-20230116175734184"  /></p><hr><h1 id="Jedis介绍与环境准备"><a href="#Jedis介绍与环境准备" class="headerlink" title="Jedis介绍与环境准备"></a><strong>Jedis介绍与环境准备</strong></h1><h2 id="Java客户端-Jedis"><a href="#Java客户端-Jedis" class="headerlink" title="Java客户端-Jedis"></a>Java客户端-Jedis</h2><p>Jedis是Java语言开发的Redis客户端工具包</p><p>Jedis只是对Redis命令的封装，掌握Redis命令便可轻易上手</p><p>先关闭服务器，在进入redis.conf</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> redis.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>找到保护模式：</p><p><img src="/assets/image-20230116213814282.png" alt="image-20230116213814282"  /></p><p>因为开发模式的需要，将其关闭，允许其他主机连接进来。</p><p><img src="/assets/image-20230116214510296.png" alt="image-20230116214510296"  /></p><p>这里改为0.0.0.0，所有的ip的主机都能访问进来。</p><p><img src="/assets/image-20230116214613736.png" alt="image-20230116214613736"  /></p><p>注意：开发模式可以这么写，但在线上的时候，千万不要写0.0.0.0，要指名远程主机的ip。</p><p><img src="/assets/image-20230116214931646.png" alt="image-20230116214931646"  /></p><p><img src="/assets/image-20230116214903476.png" alt="image-20230116214903476"  /></p><p>但还要设置防火墙，让防火墙给端口6380的数据通行；</p><p><img src="/assets/image-20230116215159189.png" alt="image-20230116215159189"  /></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--add-port</span>=6380/tcp --permanent</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230116215652804.png" alt="image-20230116215652804"  /></p><p>permanent设置永久，防止下次打开失效；</p><p>重新加载防火墙设置：</p><p><img src="/assets/image-20230116215819859.png" alt="image-20230116215819859"  /></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="comment">--reload</span></span><br></pre></td></tr></table></figure><p>用ifconfig查看本机ip：<img src="/assets/image-20230116220545492.png" alt="image-20230116220545492" style="zoom:80%;" /></p><p><a href="https://redis.io/resources/clients/">https://redis.io/resources/clients/</a></p><p><img src="/assets/image-20230116220647596.png" alt="image-20230116220647596" style="zoom:80%;" /></p><p>我们用的是Java</p><p><img src="/assets/image-20230116220750490.png" alt="image-20230116220750490" style="zoom:80%;" /></p><p>这里用Jedis；</p><p><a href="https://github.com/redis/jedis">https://github.com/redis/jedis</a></p><p><img src="/assets/image-20230116220915855.png" alt="image-20230116220915855" style="zoom:80%;" /></p><p>可以用maven进行下载；</p><p><img src="/assets/image-20230116221725753.png" alt="image-20230116221725753" style="zoom:80%;" /></p><h2 id="Jedis使用入门"><a href="#Jedis使用入门" class="headerlink" title="Jedis使用入门"></a>Jedis使用入门</h2><p>IDEA创建maven新工程，加入依赖；</p><p><img src="/assets/image-20230116224751311.png" alt="image-20230116224751311" style="zoom:80%;" /></p><p><img src="/assets/image-20230116224930965.png" alt="image-20230116224930965"  /></p><p><img src="/assets/image-20230116225317890.png" alt="image-20230116225317890"  /></p><p>这里端口号错了；</p><p><img src="/assets/image-20230116225636915.png" alt="image-20230116225636915"  /></p><h3 id="Jedis操作String类型"><a href="#Jedis操作String类型" class="headerlink" title="Jedis操作String类型"></a>Jedis操作String类型</h3><p><img src="/assets/image-20230116230006622.png" alt="image-20230116230006622" style="zoom:80%;" /></p><p><img src="/assets/image-20230116230410320.png" alt="image-20230116230410320"  /></p><p><img src="/assets/image-20230116232123040.png" alt="image-20230116232123040" style="zoom:80%;" /></p><p><img src="/assets/image-20230116233740366.png" alt="image-20230116233740366"  /></p><h3 id="Jedis操作List类型"><a href="#Jedis操作List类型" class="headerlink" title="Jedis操作List类型"></a><strong>Jedis操作List类型</strong></h3><p><img src="/assets/image-20230116234309181.png" alt="image-20230116234309181" style="zoom:80%;" /></p><h3 id="Jedis操作Hash类型"><a href="#Jedis操作Hash类型" class="headerlink" title="Jedis操作Hash类型"></a><strong>Jedis操作Hash类型</strong></h3><p><img src="/assets/image-20230117003903569.png" alt="image-20230117003903569"  /></p><h3 id="Jedis操作List类型-1"><a href="#Jedis操作List类型-1" class="headerlink" title="Jedis操作List类型"></a><strong>Jedis操作List类型</strong></h3><p><img src="/assets/image-20230117004250911.png" alt="image-20230117004250911" style="zoom:80%;" /></p><hr><h2 id="利用Jedis缓存数据"><a href="#利用Jedis缓存数据" class="headerlink" title="利用Jedis缓存数据"></a><strong>利用Jedis缓存数据</strong></h2><p>创建实体类：</p><p><img src="/assets/image-20230117004714499.png" alt="image-20230117004714499"  /></p><p><a href="https://github.com/alibaba/fastjson">https://github.com/alibaba/fastjson</a></p><p><em>fastjson</em> 是一个java语言编写的高性能且功能完善的JSON库,它采用一种“假定有序快速匹配”的算法,把JSON Parse 的性能提升到了极致。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230117005638159.png" alt="image-20230117005638159"  /></p><p><img src="/assets/image-20230117135839226.png" alt="image-20230117135839226" style="zoom:80%;" /></p><p><img src="/assets/image-20230117135719252.png" alt="image-20230117135719252"  /></p><hr><p><img src="/assets/image-20230117140502672.png" alt="image-20230117140502672"  /></p><p><img src="/assets/image-20230117140510570.png" alt="image-20230117140510570"  /></p><p><img src="/assets/image-20230117141627761.png" alt="image-20230117141627761"  /></p><p><img src="/assets/image-20230117142559335.png" alt="image-20230117142559335"  /></p><p><img src="/assets/image-20230117142537160.png" alt="image-20230117142537160"  /></p>]]></content>
    
    
    <summary type="html">🥧Redis介绍与安装 掌握Redis的常用命令与数据类型 掌握在Java中的操作</summary>
    
    
    
    
    <category term="Redis" scheme="https://815101909.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Java反射</title>
    <link href="https://815101909.github.io/posts/100003d.html"/>
    <id>https://815101909.github.io/posts/100003d.html</id>
    <published>2023-12-07T07:17:55.000Z</published>
    <updated>2023-12-07T07:17:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="反射-Reflect"><a href="#反射-Reflect" class="headerlink" title="反射 Reflect"></a>反射 Reflect</h2><ul><li><p><strong>反射（Reflect</strong>）是在运行时动态访问类与对象的技术</p></li><li><p>反射是 JDK1.2 版本后的高级特性隶属于 java.lang.reflect</p></li><li><p>大多数 Java 框架都基于反射实现参数配置、动态注入等特性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.reflect; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MathOperation</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">operate</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Addition</span> <span class="keyword">implements</span> <span class="title class_">MathOperation</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">operate</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行加法运算&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Subtraction</span> <span class="keyword">implements</span> <span class="title class_">MathOperation</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">operate</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行减法运算&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试（普通）："><a href="#测试（普通）：" class="headerlink" title="测试（普通）："></a>测试（普通）：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case1</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入计算类名:&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">op</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入a:&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入b:&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">    <span class="type">MathOperation</span> <span class="variable">mathOperation</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (op.equals(<span class="string">&quot;Addition&quot;</span>)) &#123;</span><br><span class="line">        mathOperation = <span class="keyword">new</span> <span class="title class_">Addition</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">&quot;Subtraction&quot;</span>)) &#123;</span><br><span class="line">        mathOperation = <span class="keyword">new</span> <span class="title class_">Subtraction</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">&quot;Multiplication&quot;</span>)) &#123;</span><br><span class="line">        mathOperation = <span class="keyword">new</span> <span class="title class_">Multiplication</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无效的计算类&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">float</span> <span class="variable">result</span> <span class="operator">=</span> mathOperation.operate(a, b);</span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试（反射）："><a href="#测试（反射）：" class="headerlink" title="测试（反射）："></a>测试（反射）：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case2</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入计算类名:&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">op</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入a:&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入b:&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">    <span class="type">MathOperation</span> <span class="variable">mathOperation</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        mathOperation = (MathOperation) Class.forName(<span class="string">&quot;com.imooc.reflect.&quot;</span> + op).getDeclaredConstructor().newInstance();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无效的计算类&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">float</span> <span class="variable">result</span> <span class="operator">=</span> mathOperation.operate(a, b);</span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射的核心类"><a href="#反射的核心类" class="headerlink" title="反射的核心类"></a>反射的核心类</h2><p><img src="/assets/1670469858055.png" alt="1670469858055" style="zoom:80%;" /></p><h3 id="Class类"><a href="#Class类" class="headerlink" title="Class类"></a>Class类</h3><p>Class是JVM中代表“类和接口”的类。</p><p>Class对象具体包含了某个特定类的结构信息。</p><p>通过Class对象可获取对应类的构造方法/方法/成员变量</p><p>​                       </p><h4 id="Class核心方法"><a href="#Class核心方法" class="headerlink" title="Class核心方法"></a>Class核心方法</h4><div class="table-container"><table><thead><tr><th>方法</th><th>用途</th></tr></thead><tbody><tr><td>Class.forName()</td><td>静态方法,用于获取指定Class对象</td></tr><tr><td>classObj.newlnstance()</td><td>通过默认构造方法创建新的对象</td></tr><tr><td>classObj.getConstructor()</td><td>获得指定的public修饰构造方法Constructor对象</td></tr><tr><td>classObj.getMethod()</td><td>获取指定的public修饰方法Method对象</td></tr><tr><td>classObj.getField()</td><td>获取指定的public修饰成员变量Field对象</td></tr><tr><td></td></tr></tbody></table></div><p><img src="/assets/1670471364992.png" alt="1670471364992" style="zoom:80%;" /></p><p>遇到’newInstance()’ is deprecated （newInstance()已被弃用）的话，解决方法如下：</p><p>JAVA9之前用法</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>Class.forName(<span class="string">&quot;类的全限定名&quot;</span>).newInstance();</span><br></pre></td></tr></table></figure><p><strong>JAVA9之后用法</strong></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>Class.forName(<span class="string">&quot;类的全限定名&quot;</span>).getDeclaredConstructor().newInstance();</span><br></pre></td></tr></table></figure><p>并Add’catch’异常。</p><p><img src="/assets/1670472634326.png" alt="1670472634326" style="zoom:80%;" /></p><p><img src="/assets/1670472678871.png" alt="1670472678871" style="zoom:80%;" /></p><h2 id="Constructor-构造方法类"><a href="#Constructor-构造方法类" class="headerlink" title="Constructor 构造方法类"></a>Constructor 构造方法类</h2><ul><li>Constructor 类是对 Java 类中的构造方法的抽象</li><li>Contructor 对象包含了具体类的某个具体构造方法的声明</li><li>通过 Constructor 对象调用带参构造方法创建对象</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left"><code>classObj.getConstructor()</code></td><td style="text-align:left">获取指定的 public 修饰构造 Constructor 对象</td></tr><tr><td style="text-align:left"><code>constructorObj.newInstance()</code></td><td style="text-align:left">通过对应的构造方法创建对象</td></tr></tbody></table></div><p><strong>实体类 Class 对象 → 实体类构造方法 Constructor 对象 → 实体类对象</strong></p><p><img src="/assets/1670486878300.png" alt="1670486878300" style="zoom:80%;" /></p><p><img src="/assets/1670486907871.png" alt="1670486907871" style="zoom:80%;" /></p><h2 id="Method方法类"><a href="#Method方法类" class="headerlink" title="Method方法类"></a>Method方法类</h2><ul><li>Method 对象指代某个类中的方法的描述</li><li>Method 对象使用 classObj.getMethod() 方法获取</li><li>通过 Method 对象调用指定对象的对应方法 </li></ul><h4 id="Method类核心方法"><a href="#Method类核心方法" class="headerlink" title="Method类核心方法"></a>Method类核心方法</h4><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left"><code>classObj.getMethod()</code></td><td style="text-align:left">获取指定的 public 修饰方法 Method 对象</td></tr><tr><td style="text-align:left"><code>methodObj.invoke()</code></td><td style="text-align:left">调用指定对象的对应方法</td></tr></tbody></table></div><p><img src="/assets/1670488168440.png" alt="1670488168440" style="zoom:80%;" /></p><p> return this 指的是返回类的当前对象。 </p><p><img src="/assets/1670488323779.png" alt="1670488323779" style="zoom:80%;" /></p><p>invoke( )中要传入两个对象。</p><p> invoke（Object obj,Object… args）</p><h2 id="Field成员变量"><a href="#Field成员变量" class="headerlink" title="Field成员变量"></a>Field成员变量</h2><ul><li>Field对应某个具体类中的成员变量的声明</li><li>Field对象使用classObj.getField()方法获取</li><li>通过Field对象可为某对象成员变量赋值/取值</li></ul><h4 id="Field类核心方法："><a href="#Field类核心方法：" class="headerlink" title="Field类核心方法："></a>Field类核心方法：</h4><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left"><code>classObj.getField</code></td><td style="text-align:left">获取指定<strong>public</strong>修饰的成员变量对象</td></tr><tr><td style="text-align:left"><code>fieldObj.set()</code></td><td style="text-align:left">为某对象指定成员变量赋值</td></tr><tr><td style="text-align:left"><code>fieldObj.get()</code></td><td style="text-align:left">获取某对象指定成员变量数值</td></tr></tbody></table></div><p><img src="/assets/1670489043111.png" alt="1670489043111" style="zoom:80%;" /></p><p><img src="/assets/1670490937950.png" alt="1670490937950" style="zoom:80%;" /></p><p><img src="assets/1670491034249.png" alt="1670491034249"></p><p><img src="/assets/1670491020150.png" alt="1670491020150" style="zoom:80%;" /></p><p>get开头获取方法都是默认获取public修饰的成员变量或方法。</p><h2 id="getDeclared系列方法"><a href="#getDeclared系列方法" class="headerlink" title="getDeclared系列方法"></a>getDeclared系列方法</h2><ul><li>getDeclaredConstructor(s) | Method(s)|Field(s)获取对象</li><li>getConstructor(s)|Method(s) | Field(s)只能获取public对象</li><li><p>访问非作用域内构造方法、方法、成员变量会抛出异常</p><p><img src="/assets/1670575517753.png" alt="1670575517753" style="zoom:80%;" /></p></li></ul><p><img src="/assets/1670576825171.png" alt="1670576825171" style="zoom:80%;" />getModifiers()方法返回int类型值表示该字段的修饰符 </p><p>对应表如下：</p><div class="table-container"><table><thead><tr><th>修饰符</th><th>对应的int类型</th></tr></thead><tbody><tr><td>public</td><td>1</td></tr><tr><td>private</td><td>2</td></tr><tr><td>protected</td><td>4</td></tr><tr><td>static</td><td>8</td></tr><tr><td>final</td><td>16</td></tr><tr><td>synchronized</td><td>32</td></tr><tr><td>volatile</td><td>64</td></tr><tr><td>transient</td><td>128</td></tr><tr><td>native</td><td>256</td></tr><tr><td>interface</td><td>512</td></tr><tr><td>abstract</td><td>1024</td></tr><tr><td>strict</td><td>2048</td></tr></tbody></table></div><h2 id="反射在项目中的应用案例"><a href="#反射在项目中的应用案例" class="headerlink" title="反射在项目中的应用案例"></a><strong>反射在项目中的应用案例</strong></h2><p><img src="/assets/1670578067564.png" alt="1670578067564" style="zoom:80%;" /></p><p><img src="/assets/1670578132003.png" alt="1670578132003" style="zoom:80%;" /></p><p><img src="/assets/1670578153616.png" alt="1670578153616" style="zoom:80%;" /></p><p><img src="/assets/1670578167203.png" alt="1670578167203" style="zoom:80%;" /></p><p><img src="/assets/1670578174608.png" alt="1670578174608" style="zoom:80%;" /></p><p><img src="assets/1670578188136.png" alt="1670578188136"></p>]]></content>
    
    
    <summary type="html">🥧Java反射</summary>
    
    
    
    <category term="演示" scheme="https://815101909.github.io/categories/%E6%BC%94%E7%A4%BA/"/>
    
    
    <category term="算法" scheme="https://815101909.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE</title>
    <link href="https://815101909.github.io/posts/100002d.html"/>
    <id>https://815101909.github.io/posts/100002d.html</id>
    <published>2023-12-05T17:14:03.000Z</published>
    <updated>2023-12-05T17:14:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java中创建一个对象</p><p>例如 Person person = new Person(“张三”, 20); 包括几部分 </p><ol><li>声明(Declaration)：将变量名称与对象类型关联的变量声明。 </li><li><p>Person person 就是告诉编译器你将使用person引用一个Person类型的对象。其初始值将待定，直到有一个对象真正被创造和分配给它。 </p><p>这里只是简单地声明一个引用变量而并没有创建一个对象。 </p></li><li><p>实例化(Instantiating)：new关键字是一个java运算符，它用来创建对象。 </p></li><li><p>初始化(Initialization)：new运算符，随后调用构造函数，初始化新创建的对象。 </p><p>每个构造函数都允许你为矩形的起始值、宽度和高度提供初始值，同时使用原始类型和引用类型。如果一个类有多个构造函数，它们必须有不同的签名。java编译器区分构造函数基于参数的数量和类型。 </p></li></ol><h2 id="方法的调用"><a href="#方法的调用" class="headerlink" title="方法的调用"></a>方法的调用</h2><p><img src="/assets/1664551987366.png" alt="1664551987366" style="zoom:50%;" /></p><p><strong>加void则无返回值。</strong></p><p><img src="/assets/1664552028279.png" alt="1664552028279" style="zoom:67%;" /></p><p><img src="/assets/1664552796424.png" alt="1664552796424" style="zoom:67%;" /></p><hr><h2 id="java创建类"><a href="#java创建类" class="headerlink" title="java创建类"></a>java创建类</h2><p><strong>类</strong>是<strong>对象</strong>的模板。</p><p><img src="/assets/1664550727102.png" alt="1664550727102" style="zoom:67%;" /></p><hr><p>用户输入</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Scanner scanner <span class="operator">=</span> new Scanner(System.in)<span class="comment">;</span></span><br><span class="line">int i <span class="operator">=</span> scanner.nextInt()<span class="comment">;</span></span><br></pre></td></tr></table></figure><p><strong>sout</strong>快捷生成System.out.println();</p><h3 id="创建类的实例对象"><a href="#创建类的实例对象" class="headerlink" title="创建类的实例对象"></a>创建类的实例对象</h3><p>类名 对象名 = new 类名();</p><p>new关键字是创建实例对象最重要的标志。</p><p>对象首字母要小写，不要数字开头和包含特殊字符。</p><p>输入<strong>psvm</strong>可快速生成main入口函数。</p><h2 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h2><p>public class 类名{</p><p>​    <strong>String</strong> name;</p><p>​    <strong>int</strong> age;</p><p>​    <strong>float</strong> weight;</p><p>}</p><h5 id="成员变量使用"><a href="#成员变量使用" class="headerlink" title="成员变量使用"></a>成员变量使用</h5><p>​    类名 对象名 = new 类名();</p><p>​    对象名.name = “名字”;</p><p>​    对象名 .age =  6;</p><p>​    对象名 .weight = 13.5f;</p><p>​    读取成员变量</p><p>​    System.out.println(对象名.name + “今天” + 对象名.age + “岁了”）；</p><h6 id=""><a href="#" class="headerlink" title=" "></a> </h6><h5 id="成员变量须知"><a href="#成员变量须知" class="headerlink" title="成员变量须知"></a>成员变量须知</h5><p>​    *成员变量就是隶属于对象的变量 。</p><pre><code> *成员变量用于保存对象的静态特征 。 *同类型的不同对象拥有相同的成员变量,但值彼此独立 。</code></pre><p>（追加：String属于final类,也即意味着String类不能被继承,并且它的成员方法都默认为final方法。 可用于创建字符串对象。） </p><h2 id="方法（Method）"><a href="#方法（Method）" class="headerlink" title="方法（Method）"></a>方法（Method）</h2><p>方法是用于完成特定功能的整段代码。</p><p><img src="/assets/1664197848825.png" alt="1664197848825" style="zoom:80%;" /></p><p><img src="/assets/1664207634885.png" alt="1664207634885" style="zoom:80%;" /></p><p>P.s : 对象 . 方法（MethodSample01为对象，后者为方法）</p><p>（a）即（int num），被导入到num中。</p><p><img src="/assets/1664551330768.png" alt="1664551330768" style="zoom: 50%;" /></p><h2 id="包（Package）"><a href="#包（Package）" class="headerlink" title="包（Package）"></a>包（Package）</h2><p><img src="/assets/1664247250316.png" alt="1664247250316" style="zoom: 33%;" /></p><h5 id="包的命名规范"><a href="#包的命名规范" class="headerlink" title="包的命名规范"></a>包的命名规范</h5><p>  包采用“逆命名法”进行命名，用 “.” 分割，单词全部小写。</p><p>  标准格式：域名后缀.组织机构名.项目名[.模块名].包的职能</p><p>E.D.  com.imooc.weather.ui</p><p>​         com.alibaba.taobao.customer.data </p><p><img src="/assets/1664248996092.png" alt="1664248996092" style="zoom:50%;" /></p><p><img src="/assets/1664249403065.png" alt="1664249403065" style="zoom:50%;" /></p><p><strong>要使用其他包下的类必须事先import导入。</strong>（语句3）</p><p><img src="/assets/1664249700971.png" alt="1664249700971" style="zoom:50%;" /></p><p>同一个包下的话无需import导入。</p><h2 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h2><p>访问修饰符用于控制类、成员变量、方法的访问范围。</p><p><img src="/assets/1664249952480.png" alt="1664249952480" style="zoom: 67%;" /></p><p><img src="/assets/1664555656578.png" alt="1664555656578" style="zoom:50%;" /></p><p> E.D.</p><p><img src="/assets/1664250227680.png" alt="1664250227680" style="zoom:67%;" /></p><hr><h2 id="面向对象三大特征"><a href="#面向对象三大特征" class="headerlink" title="面向对象三大特征"></a>面向对象三大特征</h2><h3 id="封装、继承、多态。"><a href="#封装、继承、多态。" class="headerlink" title="封装、继承、多态。"></a>封装、继承、多态。</h3><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p><img src="/assets/1664251145918.png" alt="1664251145918" style="zoom:50%;" /></p><p><img src="/assets/1664267901514.png" alt="1664267901514" style="zoom:80%;" /></p><p>Algorithm即是被封装的算法。</p><h4 id="—-对成员变量进行读写封装"><a href="#—-对成员变量进行读写封装" class="headerlink" title="—-对成员变量进行读写封装"></a>—-对成员变量进行读写封装</h4><p>getter方法，getter方法用于读取成员变量的内容。</p><p>书写格式：public 成员变量类型 get成员变量名（），PS：首字母大写</p><p><img src="/assets/1664269093912.png" alt="1664269093912" style="zoom:80%;" /></p><p>this关键字代表当前对象的…</p><p>this.owner就是指向上面的private String owner成员变量</p><p>后面的owner就是局部变量。</p><p>setter方法，setter方法用于设置成员变量的内容</p><p>setter书写格式：public void set成员变量的内容（记得首字母大写）</p><p><img src="/assets/1664280593508.png" alt="1664280593508" style="zoom:80%;" /></p><p>Code—&gt;Generate—&gt;Getter and Setter可同时生成设置和读取格式。</p><hr><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>extends</p><p><img src="/assets/1664354917946.png" alt="1664354917946" style="zoom: 67%;" /></p><p><img src="/assets/1664354979892.png" alt="1664354979892" style="zoom: 67%;" /></p><h5 id="extends为继承关键字。"><a href="#extends为继承关键字。" class="headerlink" title="extends为继承关键字。"></a>extends为继承关键字。</h5><p>extends关键字前为子类，后面是父类。</p><p><img src="/assets/1664357716970.png" alt="1664357716970" style="zoom:80%;" /></p><hr><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>多态是同一个<strong>行为</strong>具有多个不同表现形式。</p><p>实现多态的关键是<strong>接口</strong>。</p><p><strong>接口</strong>（Interface）是一个抽象的类型，只提供方法的定义。</p><p><strong>实现类</strong>是一个接口的具体体现，要实现每一个接口方法的功能。</p><p>在新建类中选择创建Interface类。</p><p>在接口（Interface）中<strong>不能</strong>用<strong>大括号</strong>来作方法体。</p><p><img src="/assets/1664362536350.png" alt="1664362536350" style="zoom:80%;" /></p><p> <em>implements</em>是一个类实现一个接口用的关键字。</p><p>实现一个接口，必须实现接口中的所有方法。 </p><p>使用接口关键字时报错点提示，使用method void调出方法体。</p><p><img src="/assets/1664378692478.png" alt="1664378692478" style="zoom: 67%;" /></p><p>Language是<strong>接口名</strong>，English是<strong>实现类</strong>。</p><p><img src="/assets/1664378837048.png" alt="1664378837048" style="zoom: 50%;" /></p><p>Custmer.java中可调到public Language contact(int areaCode)方法体。</p><p><img src="/assets/1664379166342.png" alt="1664379166342" style="zoom: 67%;" /></p><p><strong>public void 名（）;</strong> 用于类 多态的引入。</p><hr><h3 id="ArrayList列表类的使用（重要）"><a href="#ArrayList列表类的使用（重要）" class="headerlink" title="ArrayList列表类的使用（重要）"></a>ArrayList列表类的使用（重要）</h3><p>ArrayList是Java内置的数据集合，用于存储多个数据。</p><p>ArrayList是数组替代品，提供了更多的数据。</p><p>ArrayList几乎是每一个项目中必用的类。</p><p><img src="/assets/1664380574197.png" alt="1664380574197" style="zoom: 67%;" /></p><p><img src="/assets/1664380404737.png" alt="1664380404737" style="zoom:80%;" /></p><p>出现import java.util.List;完成导入。</p><p>后面的ArrayList也是一样。</p><p>接着按住Ctrl点List弹出源代码。</p><p>List在这作为接口名，后者实现类。</p><p><img src="/assets/1664380857589.png" alt="1664380857589" style="zoom:80%;" /></p><p>bookList为对象，add方法是对List进行追加内容。</p><p><img src="/assets/1664381041388.png" alt="1664381041388" style="zoom:80%;" /></p><p>（0，“ ”），可定列表位置。但这样是错误的。</p><p>为了约束列表类型，采用<strong>泛型</strong>。</p><p><img src="/assets/1664381281720.png" alt="1664381281720" style="zoom: 80%;" /></p><p><img src="/assets/1664427076748.png" alt="1664427076748" style="zoom:80%;" /></p><p>String bookName = bookList.get(2)  // get（）为提取某个内容。</p><p>size( ) - 1为最后内容。</p><p><img src="/assets/1664427339729.png" alt="1664427339729" style="zoom: 67%;" /></p><p>for循环对bookList中每个内容进行变例。（注意String）</p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p><img src="/assets/1664439459124.png" alt="1664439459124" style="zoom:80%;" /></p><p><img src="/assets/1664448669587.png" alt="1664448669587" style="zoom:80%;" /></p><p>调用接口，显示输入appCode，在阿里云中找。</p><p><img src="/assets/1664449843416.png" alt="1664449843416" style="zoom:80%;" /></p><h3 id="利用字符串格式化替代拼接字符串"><a href="#利用字符串格式化替代拼接字符串" class="headerlink" title="利用字符串格式化替代拼接字符串"></a>利用字符串格式化替代拼接字符串</h3><p><img src="/assets/1664529874215.png" alt="1664529874215" style="zoom:80%;" /></p><p>前者为普通，后者采用占用符。</p><p>注意row、format、new等关键字，和括号位置。</p><hr><h2 id="异常-（Throwable）"><a href="#异常-（Throwable）" class="headerlink" title="异常 （Throwable）"></a>异常 （Throwable）</h2><p><img src="/assets/1664515053773.png" alt="1664515053773" style="zoom:80%;" /></p><p>此类错误无提示。</p><p>在程序运行过程中，意外发生的情况，背离我们程序本身的意图的表现，都可以理解为异常。</p><p><img src="/assets/1664517397216.png" alt="1664517397216" style="zoom:80%;" /></p><p><strong>Error</strong>对于设计合理的应用程序来说,即使确实发生了错误,本质上也不应该试图去处理它所引起的异常状况。 </p><p>而<strong>Exception</strong>是程序本身可以处理的异常。异常处理通常指针对这种类型异常的处理。它包括<strong>非检查异常</strong>和<strong>检查异常</strong>。</p><p><strong>非检查异常</strong>（RuntimeException）：编译器不要求强制处置的异常。</p><p>它包括<em>空指针异常</em>（NullPointerException）、<em>数组下标越界异常</em>(ArrayIndexOutOfBoundsException)、<em>算数异常</em>(ArithmeticExceptior)、<em>类型转换异常</em>(ClassCastException)。</p><p><strong>检查异常</strong>：</p><p>IO异常、SQL异常。</p><p>在Java应用程序中，异常处理机制为：<strong>抛出异常</strong>、<strong>捕捉异常</strong>。</p><p><strong>抛出异常</strong>包含异常类型、异常出现程序的状态。</p><p><img src="/assets/1664518168492.png" alt="1664518168492" style="zoom: 67%;" /></p><p>异常处理的5个关键字：try、catch、finally、throw、throws</p><p><img src="/assets/1664518246293.png" alt="1664518246293" style="zoom:80%;" /></p><p> <img src="/assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FxdGluZw==,size_16,color_FFFFFF,t_70.png" alt="异常结构" style="zoom:80%;" /> </p><h4 id="处理异常"><a href="#处理异常" class="headerlink" title="处理异常"></a>处理异常</h4><p>try-catch以及try-catch-finally</p><p><img src="/assets/1664586723381.png" alt="1664586723381" style="zoom: 67%;" /></p><p>E.D.:</p><p><img src="/assets/1664586991793.png" alt="1664586991793" style="zoom:67%;" /></p><p>处理异常要按先子类后父类的形式。</p><p><img src="/assets/1664587362114.png" alt="1664587362114" style="zoom: 67%;" /></p><p>顺序错了，程序也会报错。</p><p>finally语句块：</p><p><img src="/assets/1664587467853.png" alt="1664587467853" style="zoom: 50%;" /></p><h4 id="异常抛出"><a href="#异常抛出" class="headerlink" title="异常抛出"></a>异常抛出</h4><p><img src="/assets/1664766131663.png" alt="1664766131663" style="zoom: 33%;" /></p><h5 id="——自定义异常"><a href="#——自定义异常" class="headerlink" title="——自定义异常"></a>——自定义异常</h5><p><img src="/assets/1664766726155.png" alt="1664766726155" style="zoom:67%;" /></p><p>E.D. :     <img src="/assets/1664767536606.png" alt="1664767536606" style="zoom:50%;" /></p><p>补充：<strong><code>e</code> 就是一个类型为 <code>Exception</code> 的异常对象</strong>。 </p><h3 id="异常链"><a href="#异常链" class="headerlink" title="异常链"></a>异常链</h3><p><img src="/assets/1664770556110.png" alt="1664770556110" style="zoom:50%;" /> </p><p><strong>e.printStackTrace()</strong> : 当try语句中出现异常是时，会执行catch中的语句，java运行时系统会自动将catch括号中的Exception e 初始化，也就是实例化Exception类型的对象。e是此对象引用名称。然后e（引用）会自动调用Exception类中指定的方法，也就出现了e.printStackTrace() ;。<br><strong>printStackTrace()方法</strong>的意思是：在命令行打印异常信息在程序中出错的位置及原因。</p><p><img src="/assets/1664770643485.png" alt="1664770643485" style="zoom:50%;" /></p><p> <strong>runtime exception</strong>，也称运行时异常，我们可以不处理。出现运行时异常后，系统会把异常一直往上层抛，一直遇到处理代码。 </p><p><img src="/assets/1664770912279.png" alt="1664770912279" style="zoom:50%;" /></p><hr><h2 id="Java-中的字符串"><a href="#Java-中的字符串" class="headerlink" title="Java 中的字符串"></a>Java 中的字符串</h2><h3 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h3><p><strong>Java中字符串的不变性：</strong></p><p><img src="https://img.mukewang.com/53a8dcce0001cc7406130396.jpg" alt="166477279" style="zoom:50%;" /></p><hr><p> <strong>String 类的常用方法：</strong> </p><p> <img src="https://img.mukewang.com/53d9f7d200010bb007780366.jpg" alt="img" style="zoom:67%;" /> </p><hr><h5 id="Java-中-String-类的常用方法-Ⅰ"><a href="#Java-中-String-类的常用方法-Ⅰ" class="headerlink" title="Java 中 String 类的常用方法 Ⅰ"></a>Java 中 String 类的常用方法 Ⅰ</h5><p>*<br><img src="/assets/1664854484081.png" alt="1664854484081" style="zoom: 67%;" /></p><p><img src="/assets/1664854657272.png" alt="1664854657272" style="zoom: 67%;" /></p><p>补充，<strong>Java中引号注意</strong>：</p><p>1.java中的单引号表示字符；java中的双引号是字符串。 </p><p>2.单引号引的数据一般是char类型的;双引号引的数据 是String类型的。 </p><p> 3.java中单引号里面只能放一个字母或数字或符号;java中的双引号里面是0到多个字符构成。所以字符可以直接转换成字符串。<strong>字符串需要使用charAt(n) 来获取第几个字符。</strong> </p><p><img src="/assets/1664883900667.png" alt="1664883900667" style="zoom: 67%;" /></p><h5 id="Java-中的-String-类常用方法-Ⅱ"><a href="#Java-中的-String-类常用方法-Ⅱ" class="headerlink" title="Java 中的 String 类常用方法 Ⅱ"></a>Java 中的 String 类常用方法 Ⅱ</h5><p><strong>“==” 和 equals()  的区别</strong></p><p>==: 判断两个字符串在内存中首地址是否相同，即判断是否是同一个字符串对象</p><p>equals(): 比较存储在两个字符串对象中的内容是否一致。</p><p> PS：字节是计算机存储信息的基本单位，<strong>1 个字节等于 8 位</strong>， <strong>gbk 编码中 1 个汉字字符存储需要 2 个字节</strong>，<strong>1 个英文字符存储需要 1 个字节</strong>。  因为每个字节是 8 位，最大值不能超过 127，而<strong>汉字转换为字节后超过 127，如果超过就会溢出，以负数的形式显示。</strong> </p><p><strong>E.D.</strong> :</p><p><img src="/assets/1664935828817.png" alt="1664935828817" style="zoom: 67%;" /></p><h5 id="认识-Java-中的-StringBuilder-类"><a href="#认识-Java-中的-StringBuilder-类" class="headerlink" title="认识 Java 中的 StringBuilder 类"></a>认识 Java 中的 StringBuilder 类</h5><p> 在Java中，除了可以使用 String 类来存储字符串，还可以使用 StringBuilder 类或 StringBuffer 类存储字符串。但 String 类是具有不可变性。    </p><p> 至于 StringBuilder 和StringBuffer ，它们基本相似，不同之处，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用 StringBuilder 类。 </p><p> <img src="https://img.mukewang.com/53a7d1f70001be9d06340127.jpg" alt="img" style="zoom: 80%;" /> </p><h5 id="Java-中的-StringBuilder-类的常用方法"><a href="#Java-中的-StringBuilder-类的常用方法" class="headerlink" title="Java 中的 StringBuilder 类的常用方法"></a>Java 中的 StringBuilder 类的常用方法</h5><p> <img src="https://img.mukewang.com/53a7d34300011c6005970125.jpg" alt="img" style="zoom: 80%;" /> </p><p><strong>ED：</strong></p><p> <img src="https://img.mukewang.com/53a7d36c0001e3cd06760242.jpg" alt="img" style="zoom:67%;" /> </p><p>以上 操作修改了 str 对象的值，而没有创建新的对象，这就是 StringBuilder 和 String 最大的区别。 </p><p>输出：  <img src="https://img.mukewang.com/53a7d3ab0001ff3803060080.jpg" alt="img" style="zoom:67%;" /> </p><hr><h2 id="Java中的包装类"><a href="#Java中的包装类" class="headerlink" title="Java中的包装类"></a>Java中的包装类</h2><p> 基本数据类型是不具备对象的特性的，比如基本类型不能调用方法、功能简单。。。为了让基本数据类型也具备对象的特性， Java 为每个基本数据类型都提供了一个包装类，这样我们就可以像操作对象那样来操作基本数据类型。  </p><p> 基本类型和包装类之间的对应关系： </p><p><img src="https://img.mukewang.com/53abd8450001911703630223.jpg" alt="img" style="zoom:67%;" /> </p><p>包装类主要提供了两大类方法：</p><p>1） 将本类型和其他基本类型进行转换的方法</p><p>2）将字符串和本类型及包装类互相转换的方法</p><p><img src="http://img.mukewang.com/53abde780001144905740055.jpg" alt="img" style="zoom:67%;" /> </p><p><img src="http://img.mukewang.com/53abdee00001542805680224.jpg" alt="img" style="zoom:67%;" /> </p><p><strong>ED:</strong><img src="/assets/1664970822776.png" alt="1664970822776" style="zoom:80%;" /></p><h5 id="Java-中基本类型和包装类之间的转换"><a href="#Java-中基本类型和包装类之间的转换" class="headerlink" title="Java 中基本类型和包装类之间的转换"></a>Java 中基本类型和包装类之间的转换</h5><p><img src="/assets/1664971273356.png" alt="1664971273356" style="zoom: 80%;" /></p><h5 id="Java-中基本类型和字符串之间的转换"><a href="#Java-中基本类型和字符串之间的转换" class="headerlink" title="Java 中基本类型和字符串之间的转换"></a>Java 中基本类型和字符串之间的转换</h5><p>\1. 使用包装类的 toString() 方法</p><p>\2. 使用String类的 valueOf() 方法</p><p>\3. 用一个空字符串加上基本类型，得到的就是基本类型数据对应的字符串</p><p> <img src="https://img.mukewang.com/53abea61000151e105120118.jpg" alt="img" style="zoom:67%;" /> </p><p> 而将字符串转换成基本类型有两种方法： </p><p> <img src="https://img.mukewang.com/53abeaad000109af04610098.jpg" alt="img" style="zoom:67%;" /> </p><h5 id="使用-Date-和-SimpleDateFormat-类表示时间"><a href="#使用-Date-和-SimpleDateFormat-类表示时间" class="headerlink" title="使用 Date 和 SimpleDateFormat 类表示时间"></a>使用 Date 和 SimpleDateFormat 类表示时间</h5><p> 要处理日期和时间的相关数据，此时我们可以使用 java.util 包中的 Date 类。这个类最主要的作用就是获取当前时间 :</p><p> <img src="https://img.mukewang.com/53b2125e0001429505470051.jpg" alt="img" style="zoom:67%;" /> </p><p> 使用 Date 类的<strong>默认无参构造方法</strong>创建出的对象就代表<strong>当前时间</strong>，我们可以直接输出 Date 对象显示当前的时间 </p><p><img src="./images.assets/1664973950866.png" alt="1664973950866" style="zoom: 80%;" /></p><p><strong>E.D. :</strong></p><p><img src="/assets/1664975423336.png" alt="1664975423336" style="zoom: 80%;" /></p><h5 id="Calendar-类的应用"><a href="#Calendar-类的应用" class="headerlink" title="Calendar 类的应用"></a>Calendar 类的应用</h5><p>由于本身设计的问题，Date类却遭到众多批评，不建议使用， 更推荐使用 <strong>Calendar 类</strong>进行时间和日期的处理。 </p><p> java.util.Calendar 类是一个抽象类，可以通过调用 getInstance() 静态方法获取一个 Calendar 对象，此对象已由当前日期时间初始化，即默认代表当前时间，如 Calendar c = Calendar.getInstance(); </p><p> <img src="https://img.mukewang.com/53b23219000153b608030239.jpg" alt="img" style="zoom: 67%;" /> </p><p> Calendar 类提供了 getTime() 方法，用来获取 Date 对象，完成 Calendar 和 Date 的转换，还可通过 getTimeInMillis() 方法，获取此 Calendar 的时间值，以毫秒为单位。 </p><p> <img src="https://img.mukewang.com/53b232b200015b8306120095.jpg" alt="img" style="zoom:67%;" /> </p><p><strong>ED:</strong> <img src="http://img.mukewang.com/53b233ad00011bc409310384.jpg" alt="img"> </p><h5 id="使用-Math-类操作数据"><a href="#使用-Math-类操作数据" class="headerlink" title="使用 Math 类操作数据"></a>使用 Math 类操作数据</h5><p>Math 类位于 java.lang 包中，包含用于执行基本数学运算的方法， Math 类的所有方法都是静态方法，所以使用该类中的方法时，可以直接使用  <strong>类名.方法名</strong>，如： Math.round(); </p><p> 常用的方法：  <img src="https://img.mukewang.com/53b22ff10001b6d104810124.jpg" alt="img" style="zoom:67%;" /> </p><p>E.D.:** </p><p><img src="https://img.mukewang.com/544ef6360001036e07280313.jpg" alt="img" style="zoom:67%;" /> </p><p><img src="/assets/1664981988202.png" alt="1664981988202" style="zoom: 67%;" /></p><p>补充：</p><p> 增强型for循环   for(类型 变量：数组){</p><p>​                                    System.out.println(变量);} </p><h2 id="集合框架"><a href="#集合框架" class="headerlink" title="集合框架"></a>集合框架</h2><p>Java中的<strong>集合类</strong>是一种工具类，就像是容器，存储任意数量的具有共同属性的对象。</p><p><img src="/assets/1664983816190.png" alt="1664983816190" style="zoom: 50%;" /></p><h5 id="与数组区别"><a href="#与数组区别" class="headerlink" title="与数组区别"></a>与数组区别</h5><p><img src="/assets/1664983971199.png" alt="1664983971199" style="zoom: 50%;" /></p><h5 id="Java集合框架体系结构"><a href="#Java集合框架体系结构" class="headerlink" title="Java集合框架体系结构"></a>Java集合框架体系结构</h5><p>分为了<strong>Collection</strong>和<strong>Map</strong>两主接口。</p><p><img src="/assets/1664984214395.png" alt="1664984214395" style="zoom: 50%;" /></p><h3 id="Collection接口"><a href="#Collection接口" class="headerlink" title="Collection接口"></a>Collection接口</h3><p>是List、Set和Queue接口的父接口。</p><p>定义了可用于操作List、Set和Queue的方法——增删改查。</p><p><img src="/assets/1665022905252.png" alt="1665022905252" style="zoom: 50%;" /></p><h6 id="List接口常用的实现ArrayList。"><a href="#List接口常用的实现ArrayList。" class="headerlink" title="List接口常用的实现ArrayList。"></a>List接口常用的实现ArrayList。</h6><p>常用方法：add(Object obj) 增加一个元素</p><p>add(int index,Object obj) 在指定索引位置添加元素</p><p>remove(int index) 删除指定位置的元素</p><p>remove(Objiect) 从列表中删除元素</p><p>set(index,Object) 修改指定位置的元素</p><p>get(int index) 获取指定位置的元素</p><p>size() 获取集合大小</p><p>contains(Object obj) 查找集合中是否存在传入的元素</p><p><img src="/assets/1665025182580.png" alt="1665025182580" style="zoom: 33%;" /></p><p><img src="/assets/1665032958165.png" alt="1665032958165" style="zoom: 33%;" /></p><p><img src="/assets/1665033273326.png" alt="1665033273326" style="zoom: 67%;" /></p><p><img src="/assets/1665059069441.png" alt="1665059069441" style="zoom: 67%;" /></p><p>coursesToSelect.add(cr1); 直接将obj(括号里的)对象加入List末位 </p><p>coursesToSelect.add(i,cr1) ; 将obj对象加入第i位。 </p><p>coursesToSelect.addAll(Arrays.asList(course)) ;</p><p>coursesToSelect.addAll(i, c) ;将n个对象插入到第i位至第i+n位。 </p><p>同时加入多个对象，需要注意的是，addAll方法的参数为collection对象，需通过Arrays类的asList方法将数组转换为collection对象才可。 </p><p>get（）将List对应索引位置的元素取出来。</p><p><img src="/assets/1665059573703.png" alt="1665059573703" style="zoom:50%;" /></p><p>通过for循环可直接将元素连续取出。</p><p>输出顺序和输入顺序也是一致的。</p><p><img src="/assets/1665059632614.png" alt="1665059632614" style="zoom:50%;" /></p><h6 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h6><p><strong>Iterator</strong></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过迭代器来遍历<span class="built_in">List</span></span><br></pre></td></tr></table></figure><p><img src="/assets/1665063542917.png" alt="1665063542917" style="zoom:50%;" /></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过<span class="keyword">for</span> <span class="keyword">each</span>方法访问集合元素</span><br></pre></td></tr></table></figure><p><img src="/assets/1665063775388.png" alt="1665063775388" style="zoom:50%;" /></p><h6 id="修改List元素"><a href="#修改List元素" class="headerlink" title="修改List元素"></a>修改List元素</h6><p><img src="/assets/1665113933323.png" alt="1665113933323" style="zoom:50%;" /></p><p><img src="/assets/1665114106641.png" alt="1665114106641" style="zoom:50%;" /></p><p>修改了索引位置上原来的 “数据结构”为“毛概”。</p><h6 id="删除List中的元素"><a href="#删除List中的元素" class="headerlink" title="删除List中的元素"></a>删除List中的元素</h6><p><img src="/assets/1665114519394.png" alt="1665114519394" style="zoom:50%;" /></p><p><img src="/assets/1665114558301.png" alt="1665114558301" style="zoom:50%;" /></p><p><img src="/assets/1665115705473.png" alt="1665115705473" style="zoom:50%;" /></p><h4 id="应用泛型管理课程-Ⅰ"><a href="#应用泛型管理课程-Ⅰ" class="headerlink" title="应用泛型管理课程 Ⅰ"></a>应用泛型管理课程 Ⅰ</h4><p><img src="/assets/1665120835108.png" alt="1665120835108" style="zoom:50%;" /></p><p>强行添加字符串，会抛出异常。</p><p>这时候我们要引入泛型。</p><hr><h5 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a><strong>泛型</strong></h5><p><img src="/assets/1665120980613.png" alt="1665120980613" style="zoom: 33%;" /></p><p><img src="/assets/1665122686546.png" alt="1665122686546" style="zoom:50%;" /><img src="/assets/1665123100479.png" alt="1665123100479" style="zoom: 80%;" /></p><p><strong>List&lt;&gt;</strong></p><p>for(<strong>Course</strong> cr:courses) 直接作为课程类型取出来。</p><h4 id="应用泛型管理课程-ⅠⅠ"><a href="#应用泛型管理课程-ⅠⅠ" class="headerlink" title="应用泛型管理课程 ⅠⅠ"></a>应用泛型管理课程 ⅠⅠ</h4><p><img src="/assets/1665123170490.png" alt="1665123170490" style="zoom: 67%;" /></p><p>会导致超类报错<img src="/assets/1665123418917.png" alt="1665123418917" style="zoom: 67%;" /></p><p>则需在该含参构造器下面再加一个无参构造器。如下：</p><p><img src="/assets/1665123513490.png" alt="1665123513490" style="zoom: 67%;" /></p><p><strong>补充</strong>：               <img src="/assets/1665123808683.png" alt="1665123808683" style="zoom: 67%;" /></p><p><img src="/assets/1665123910415.png" alt="1665123910415" style="zoom:50%;" /></p><p><img src="/assets/1665124066520.png" alt="1665124066520" style="zoom: 67%;" /></p><p>​                                                                 <strong>泛型不能使用基本类型！</strong></p><p><img src="/assets/1665124092309.png" alt="1665124092309" style="zoom: 67%;" /></p><p><img src="/assets/1665124257277.png" alt="1665124257277" style="zoom: 67%;" /></p><p><strong>基本类型必须使用包装类作为泛型！</strong></p><h4 id="Set接口及其实现类——HashSet"><a href="#Set接口及其实现类——HashSet" class="headerlink" title="Set接口及其实现类——HashSet"></a>Set接口及其实现类——HashSet</h4><p>Set是元素无序并且不可以重复的集合，被称作集。</p><p>HashSet——哈希集，是Set的一个只要实现类。</p><p><img src="/assets/1665125264643.png" alt="1665125264643" style="zoom: 67%;" /></p><hr><p><img src="/assets/1665126443040.png" alt="1665126443040" style="zoom:50%;" /></p><p><img src="/assets/1665126850729.png" alt="1665126850729" style="zoom:50%;" /></p><p> asList()方法：返回一个受指定数组支持的固定大小的列表。 </p><p><img src="/assets/1665150206350.png" alt="1665150206350" style="zoom:50%;" /></p><h3 id="Map和HashMap"><a href="#Map和HashMap" class="headerlink" title="Map和HashMap"></a>Map和HashMap</h3><p><img src="/assets/1665202533535.png" alt="1665202533535" style="zoom: 33%;" /></p><p><strong>Map接口 ： </strong><img src="/assets/1665202654809.png" alt="1665202654809" style="zoom: 33%;" /></p><p><strong>HashMap  ：</strong><img src="/assets/1665202684840.png" alt="1665202684840" style="zoom:33%;" /></p><hr><p><img src="/assets/1665202772754.png" alt="1665202772754" style="zoom: 33%;" /></p><p><img src="/assets/1665230680437.png" alt="1665230680437" style="zoom:50%;" /></p><p><img src="/assets/1665232132408.png" alt="1665232132408" style="zoom:50%;" /></p><h4 id="判断List中课程是否存在。"><a href="#判断List中课程是否存在。" class="headerlink" title="判断List中课程是否存在。"></a>判断List中课程是否存在。</h4><p><img src="/assets/1665236297894.png" alt="1665236297894" style="zoom:50%;" /></p><p><img src="/assets/1665285333544.png" alt="1665285333544" style="zoom: 33%;" /></p><h4 id="equals-方法"><a href="#equals-方法" class="headerlink" title="equals 方法"></a>equals 方法</h4><p><img src="/assets/1665285793013.png" alt="1665285793013" style="zoom: 67%;" /></p><h4 id="containsAll"><a href="#containsAll" class="headerlink" title="containsAll"></a>containsAll<img src="/assets/1665292728985.png" alt="1665292728985" style="zoom: 50%;" /></h4><p><img src="/assets/1665309882349.png" alt="1665309882349" style="zoom: 33%;" /></p><p><img src="./images.assets/1665325349514.png" alt="1665325349514" style="zoom:33%;" /></p><p>生成equals()hashCode : Alt+Ins，equals and hashCode</p><p>、</p><h2 id="泛型-1"><a href="#泛型-1" class="headerlink" title="泛型"></a>泛型</h2><p><img src="/assets/1665382596574.png" alt="1665382596574" style="zoom: 67%;"/></p><h4 id="什么是泛型？"><a href="#什么是泛型？" class="headerlink" title="什么是泛型？"></a><strong>什么是泛型？</strong></h4><p>所谓泛型,就是允许在定义类、接口、方法时使用类型形参(泛型),这个类型形参将在声明变量、创建对象、调用方法时动态地指定,进而让程序具备编译时检查能力 </p><p>泛型是JDK1.5提供的特性,最常见的泛型应用场景便是在使用集合时通过泛型指定集合内对象的类型,为程序代码提供了编译时纠错的能力。</p><h4 id="泛型类创建与使用"><a href="#泛型类创建与使用" class="headerlink" title="泛型类创建与使用"></a><strong>泛型类创建与使用</strong></h4><p><img src="/assets/1665383793663.png" alt="1665383793663" style="zoom: 50%;" /></p><p><img src="./images.assets/1665383904178.png" alt="1665383904178" style="zoom: 50%;" /></p><h4 id="泛型方法"><a href="#泛型方法" class="headerlink" title="泛型方法"></a>泛型方法</h4><p><img src="/assets/1665391178447.png" alt="1665391178447" style="zoom: 50%;" /></p><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><h4 id="多线程的安全与应用"><a href="#多线程的安全与应用" class="headerlink" title="多线程的安全与应用"></a>多线程的安全与应用</h4><p>程序是静态文件</p><p>进程是程序运行的实例</p><p>1）当一个程序执行进入内存运行时,即变成一个进程</p><p>2）进程的资源是彼此隔离的,其他进程不允许访问 </p><p><strong>线程是进程内执行的“任务”。</strong></p><p><img src="/assets/1665396870505.png" alt="1665396870505" style="zoom: 50%;" /></p><p><strong>CPU、进程、线程关系</strong></p><p><img src="/assets/1665397302222.png" alt="1665397302222" style="zoom:50%;" /></p><p><strong>Java进程与线程</strong></p><p><img src="/assets/1665397720390.png" alt="1665397720390" style="zoom: 50%;" /></p><h4 id="通过继承Thread类创建线程"><a href="#通过继承Thread类创建线程" class="headerlink" title="通过继承Thread类创建线程"></a><strong>通过继承Thread类创建线程</strong></h4><p> <strong>步骤：</strong>      ①、定义类继承Thread；</p><p>　　　　　②、复写Thread类中的run方法；</p><p>​        public void run(){</p><p>​                }</p><p>　　　　目的：将自定义代码存储在run方法，让线程运行</p><p>　　　　　③、调用线程的start方法：</p><p>​                        start();</p><p>　　　　该方法有两步：启动线程，调用run方法。</p><h4 id="实现Runnable接口创建线程"><a href="#实现Runnable接口创建线程" class="headerlink" title="实现Runnable接口创建线程"></a><strong>实现Runnable接口创建线程</strong></h4><p> 接口应该由那些打算通过某一线程执行其实例的类来实现。类必须定义一个称为run 的无参方法。</p><p> 　　　<strong>实现步骤：</strong>      ①、定义类实现Runnable接口     </p><p>​            class ** implements Runnable {</p><p>​                } </p><p>　　　　　　　　　　②、覆盖Runnable接口中的run方法</p><p>　　　　　　　　　　　　　将线程要运行的代码放在该run方法中。</p><p>　　　　　　　　　　③、通过Thread类建立线程对象。</p><p>　　　　　　　　　　④、将Runnable接口的子类对象作为实际参数传递给Thread类的构造函数。</p><p><img src="/assets/1665408273896.png" alt="1665408273896" style="zoom:50%;" /></p><p>　　　　　　　　　　　　　自定义的run方法所属的对象是Runnable接口的子类对象。所以要让线程执行指定对象的run方法就要先明确run方法所属对象</p><p>　　　　　　　　　　⑤、调用Thread类的start方法开启线程并调用Runnable接口子类的run方法。</p><p><img src="/assets/1665408409838.png" alt="1665408409838" style="zoom:50%;" /></p><p>追加多个线程：</p><p><img src="/assets/1665408514199.png" alt="1665408514199" style="zoom:50%;" /></p><p>ps：注意可以直接在实例后面线程时直接(new Runner())</p><h4 id="实现Callable接口创建线程"><a href="#实现Callable接口创建线程" class="headerlink" title="实现Callable接口创建线程"></a><strong>实现Callable接口创建线程</strong></h4><p><img src="/assets/1665410199887.png" alt="1665410199887" style="zoom:50%;" /></p><p><strong>实现步骤</strong>：①、创建Callable接口的实现类，并实现<strong>call()方法</strong>，改方法将作为线程执行体，且<strong>具有返回值</strong>。</p><p>　　　　　　　　　②、创建Callable实现类的实例，使用FutrueTask类进行包装Callable对象，FutureTask对象封装了Callable对象的call()方法的返回值</p><p><img src="/assets/1665410419962.png" alt="1665410419962" style="zoom:50%;" /></p><p>　　　　　　　　　③、使用FutureTask对象作为Thread对象启动新线程。</p><p>　　　　　　　　　④、调用FutureTask对象的get（）方法获取子线程执行结束后的返回值。</p><p><img src="/assets/1665410676156.png" alt="1665410676156" style="zoom:50%;" /></p><h4 id="三种创建方式的对比"><a href="#三种创建方式的对比" class="headerlink" title="三种创建方式的对比"></a>三种创建方式的对比</h4><p><img src="/assets/1665410829657.png" alt="1665410829657" style="zoom:50%;" /></p><p><strong>补充：  </strong>线程睡眠—-sleep：</p><p>　　　　线程睡眠的原因：线程执行的太快，或需要强制执行到下一个线程。</p><p>　　　　线程睡眠的方法（两个）：sleep（long millis）在指定的毫秒数内让正在执行的线程休眠。</p><p>　　　　　　　　　　　　　　　　sleep（long millis，int nanos）在指定的毫秒数加指定的纳秒数内让正在执行的线程休眠。</p><h2 id="Java-IO流"><a href="#Java-IO流" class="headerlink" title="Java IO流"></a>Java IO流</h2><p><img src="/assets/1665381442019.png" alt="1665381442019" style="zoom: 33%;" /></p><h3 id="File类"><a href="#File类" class="headerlink" title="File类"></a>File类</h3><p>File类是java.io包下代表与平台无关的文件和目录。</p><p>程序中操作文件和目录，都可以通过File类来完成，File能新建、删除、重命名文件和目录。</p><p>File类并不能访问文件内容本身。如果需要访问文件内容本身，则需要使用输入/输出流。</p><p><img src="/assets/1667054262481.png" alt="1667054262481" style="zoom: 67%;" /></p><p>p.s : .mkdirs( );创建多级文件</p><h3 id="流-Stream"><a href="#流-Stream" class="headerlink" title="流-Stream"></a>流-Stream</h3><p>Java把输入的数据抽象成流（Stream）的概念，简化了程序处理。</p><p><img src="/assets/1667060375970.png" alt="1667060375970" style="zoom: 50%;" /></p><p>四种抽象类：</p><p>字节输入流-InputStream</p><p>字节输出流-OutputStream</p><p>字符输入流-Reader</p><p>字符输出流-Writer</p><h4 id="字节输入流-InputStream"><a href="#字节输入流-InputStream" class="headerlink" title="字节输入流-InputStream"></a>字节输入流-InputStream</h4><p>InputStream是所有字节输入流的父类。<img src="/assets/1667110456804.png" alt="1667110456804" style="zoom: 80%;" align="right" width=""  /></p><p>InputStream提供核心方法read()，用于读取字节数据。</p><p>FileInputStream类专用于<strong>读取</strong>二进制文件。</p><h5 id="InputStream通用开发模式"><a href="#InputStream通用开发模式" class="headerlink" title="InputStream通用开发模式"></a>InputStream通用开发模式</h5><p>实例化InputStream对象。</p><p>利用read方法循环读取的字节数据，并进行处理。</p><p>调用close方法关闭InputStream对象。</p><p><img src="/assets/1667115401333.png" alt="1667115401333" style="zoom: 67%;" /></p><h4 id="字节输出流-OutputStream"><a href="#字节输出流-OutputStream" class="headerlink" title="字节输出流-OutputStream"></a>字节输出流-OutputStream</h4><p>OutputStream是所有字节输出流的父类。<img src="/assets/1667116250500.png" alt="1667116250500" style="zoom: 67%;" align="right" width=""  /></p><p>OutputStream提供核心方法write(),用于指定输出流输出字节数组</p><p>FileOutputStream类专用于<strong>写入</strong>二进制文件。</p><p><img src="/assets/1667140901335.png" alt="1667140901335" style="zoom: 67%;" /></p><h4 id="字符输入-输出流"><a href="#字符输入-输出流" class="headerlink" title="字符输入/输出流"></a>字符输入/输出流</h4><p><strong>Reader</strong>与<strong>Writer</strong></p><p>Reader是所有字符输入流的抽象父类。</p><p>Writer是所有字符输出流的抽象父类。</p><p>FileReader与FileWriter分别对应了文本文件的读取与写入。</p><p><strong>写入：</strong></p><p><img src="/assets/1667218210554.png" alt="1667218210554" style="zoom: 67%;" /></p><p><sup><a href="#fn_第五行file.exists()改为！file.exists()" id="reffn_第五行file.exists()改为！file.exists()">第五行file.exists()改为！file.exists()</a></sup>: </p><p>读取：</p><p><img src="./images.assets/1667219110876.png" alt="1667219110876" style="zoom:67%;" /></p><h4 id="转化流的应用"><a href="#转化流的应用" class="headerlink" title="转化流的应用"></a>转化流的应用</h4><p> 输入/输出流体系中还提供了两个转换流,这两个转换流用于实现将字节流转换成字符流 </p><p> InputStreamReader将字节输入流转换成字符输入流 </p><p> OutputStreamWriter将字节输出流转换成字符输出流 </p><p><img src="/assets/1667222501969.png" alt="1667222501969" style="zoom:67%;" /></p><p>输出流同理：</p><p><img src="/assets/1667222760025.png" alt="1667222760025" style="zoom:67%;" /></p><p>ps：画出的蓝色部分其实是可以不写的，但小白最好养成习惯。</p><h4 id="缓冲区的作用"><a href="#缓冲区的作用" class="headerlink" title="缓冲区的作用"></a>缓冲区的作用</h4><p>默认文件的读取与写入都是逐个字节/字符完成的，但这种处理方式并不高效，如果将读取或写入的数据整块在内存中缓存,一次性批量读取、写入，便可以有效提高数据交互效率 </p><p>BufferedInputStream与BufferedOutputStream用于缓冲字节输入、输出流</p><p>BufferedReader与BufferedWriter用于缓冲字符输入、输出流 </p><p><strong>BufferedReader实现文本整行读取</strong></p><p><img src="/assets/1667316660765.png" alt="1667316660765" style="zoom: 67%;" /></p><h2 id="多线程下载器"><a href="#多线程下载器" class="headerlink" title="多线程下载器"></a>多线程下载器</h2><h3 id="需求介绍"><a href="#需求介绍" class="headerlink" title="需求介绍"></a>需求介绍</h3><p>通过读取源文件多线程自动下载所有网络资源到本地硬盘。</p><p>遇到下载故障在控制台打印错误信息。</p><p>允许自定义源文件的地址，保存下载文件的目录要自动创建。</p><p>允许自定义同时下载的任务数量，不指定默认开启10个下载任务。</p><p>下载的文件的文件名要与网址包含文件名保持一致。</p><p>下载成功后在控制台输出存储路径与文件尺寸。</p><p><img src="/assets/1667452596954.png" alt="1667452596954" style="zoom:67%;" /></p><h3 id="封装URLConnection单资源下载器。"><a href="#封装URLConnection单资源下载器。" class="headerlink" title="封装URLConnection单资源下载器。"></a>封装URLConnection单资源下载器。</h3><p><img src="/assets/1667523393374.png" alt="1667523393374" style="zoom:67%;" /></p><h3 id="Properties类"><a href="#Properties类" class="headerlink" title="Properties类"></a>Properties类</h3><p>Properties(属性)类是java.utils包专用于读取应用属性文件的类。</p><p>Properties文件采用属性名=属性值的形式存储数据。</p><p>多线程下载器我们利用config.properties保证程序配置信息。</p><p><img src="/assets/1667538768911.png" alt="1667538768911" style="zoom:80%;" /></p><p><img src="/assets/1667538632941.png" alt="1667538632941" style="zoom:67%;" /></p><h3 id="读取download-txt下载列表"><a href="#读取download-txt下载列表" class="headerlink" title="读取download.txt下载列表"></a>读取download.txt下载列表</h3><p><img src="/assets/1667545584723.png" alt="1667545584723" style="zoom:67%;" /></p><p><img src="/assets/1667545606809.png" alt="1667545606809" style="zoom:67%;" /></p><p>main方法同上。</p><h3 id="实现多线程并行下载"><a href="#实现多线程并行下载" class="headerlink" title="实现多线程并行下载"></a>实现多线程并行下载</h3><h4 id="JUC支持的线程池种类"><a href="#JUC支持的线程池种类" class="headerlink" title="JUC支持的线程池种类"></a>JUC支持的线程池种类</h4><p>在java.util.concurrent中，提供了工具类Executor（调度器）对象来创建线程池，可创建的线程池有四种：</p><p>1.FixedThreadPool-定常线程池</p><p>2.CachedThreadPool-可缓存线程池</p><p>3.SingleThreadExecutor-单线程池</p><p>4.ScheduledThreadPool-调度线程池</p><h2 id="JDK不同版本特性"><a href="#JDK不同版本特性" class="headerlink" title="JDK不同版本特性"></a>JDK不同版本特性</h2><h4 id="JDK9-通过try块自动关闭资源"><a href="#JDK9-通过try块自动关闭资源" class="headerlink" title="JDK9-通过try块自动关闭资源"></a>JDK9-通过try块自动关闭资源</h4><p><img src="/assets/1667867196147.png" alt="1667867196147" style="zoom: 67%;" /></p><p>原：</p><p><img src="/assets/1667868409068.png" alt="1667868409068" style="zoom:80%;" /></p><p>通过try块后简化。</p><p><img src="/assets/1667868378416.png" alt="1667868378416" style="zoom:67%;" /></p><h4 id="JDK10新特性-var动态类型判断"><a href="#JDK10新特性-var动态类型判断" class="headerlink" title="JDK10新特性-var动态类型判断"></a>JDK10新特性-var动态类型判断</h4><p><img src="/assets/1667871530733.png" alt="1667871530733" style="zoom: 50%;" /></p><p><img src="/assets/1667876550747.png" alt="1667876550747" style="zoom:67%;" /></p>]]></content>
    
    
    <summary type="html">🥧JavaSE相关</summary>
    
    
    
    <category term="演示" scheme="https://815101909.github.io/categories/%E6%BC%94%E7%A4%BA/"/>
    
    
    <category term="Java" scheme="https://815101909.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>算法题</title>
    <link href="https://815101909.github.io/posts/100001d.html"/>
    <id>https://815101909.github.io/posts/100001d.html</id>
    <published>2023-12-05T10:19:03.000Z</published>
    <updated>2023-12-05T10:19:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(target - nums[i]))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;map.get(target - nums[i]), i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(nums[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二分查找法"><a href="#二分查找法" class="headerlink" title="二分查找法"></a>二分查找法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = a.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= j) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> (i + j) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (target &lt; a[m]) &#123;</span><br><span class="line">            j = m - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; a[m]) &#123;</span><br><span class="line">            i = m + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> m;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = a.length;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> (i + j) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (target &lt; a[m]) &#123;</span><br><span class="line">            j = m;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; a[m]) &#123;</span><br><span class="line">            i = m + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> m;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230319212135284.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minDistance</span><span class="params">(String s1, String s2)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> s1.length(), n = s2.length();</span><br><span class="line">        <span class="type">int</span> <span class="variable">lcs</span> <span class="operator">=</span> longestCommonSubsequence(s1, s2);</span><br><span class="line">        <span class="comment">//删去相同的字母，剩下的就是最小步数。</span></span><br><span class="line">        <span class="keyword">return</span> m - lcs + n - lcs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">longestCommonSubsequence</span><span class="params">(String s1, String s2)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> s1.length(), n = s2.length();</span><br><span class="line">        <span class="type">int</span>[][] dp = <span class="keyword">new</span> <span class="title class_">int</span>[m + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;j &lt;= n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s1.charAt(i - <span class="number">1</span>) == s2.charAt(j - <span class="number">1</span>))&#123;</span><br><span class="line">                    dp[i][j] = dp[i-<span class="number">1</span>][j-<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] = Math.max(dp[i][j-<span class="number">1</span>], dp[i-<span class="number">1</span>][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QKSort</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> q[l], i = l - <span class="number">1</span>, j = r + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j)&#123;</span><br><span class="line">            <span class="keyword">do</span> i++;<span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">            <span class="keyword">do</span> j--;<span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">            <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> q[i];</span><br><span class="line">                q[i] = q[j];</span><br><span class="line">                q[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        quick_sort(q, l, j);</span><br><span class="line">        quick_sort(q, j + <span class="number">1</span>, r);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">float</span> <span class="variable">v</span> <span class="operator">=</span> (<span class="type">float</span>) (<span class="number">1e6</span> + <span class="number">10</span>);</span><br><span class="line">        <span class="type">int</span> q[] = <span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) v];</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            q[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        quick_sort(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.print(q[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MergeSort</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">v</span> <span class="operator">=</span> <span class="number">1000010</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] q = <span class="keyword">new</span> <span class="title class_">int</span>[v];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] tmp = <span class="keyword">new</span> <span class="title class_">int</span>[v];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> r + l &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        merge_sort(q, l, mid);</span><br><span class="line">        merge_sort(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>, i = l,j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; mid &amp;&amp; j &lt;= r)</span><br><span class="line">            <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">            <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = l,j = <span class="number">0</span>;i &lt;= r;i++)</span><br><span class="line">            q[i] = tmp[j];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        merge_sort(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.print(q[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="旋转数组"><a href="#旋转数组" class="headerlink" title="旋转数组"></a>旋转数组</h2><p><img src="/assets/image-20230325004458587.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">使用临时数组</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rotate</span><span class="params">(<span class="type">int</span> nums[], <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">int</span> temp[] = <span class="keyword">new</span> <span class="title class_">int</span>[length];</span><br><span class="line">        <span class="comment">//把原数组值放到一个临时数组中，</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            temp[i] = nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//然后在把临时数组的值重新放到原数组，并且往右移动k位</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            nums[(i + k) % length] = temp[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">多次反转</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rotate</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> nums.length;</span><br><span class="line">       k %= length;</span><br><span class="line">       reverse(nums, <span class="number">0</span>, length - <span class="number">1</span>);<span class="comment">//先反转全部的元素</span></span><br><span class="line">       reverse(nums, <span class="number">0</span>, k - <span class="number">1</span>);<span class="comment">//在反转前k个元素</span></span><br><span class="line">       reverse(nums, k, length - <span class="number">1</span>);<span class="comment">//接着反转剩余的</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//把数组中从[start，end]之间的元素两两交换,也就是反转</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">       <span class="keyword">while</span> (start &lt; end) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> nums[start];</span><br><span class="line">           nums[start++] = nums[end];</span><br><span class="line">           nums[end--] = temp;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rotate</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> nums.length;</span><br><span class="line">      k %= length;</span><br><span class="line">      reverse(nums, <span class="number">0</span>, length - k - <span class="number">1</span>);<span class="comment">//先反转前面的</span></span><br><span class="line">      reverse(nums, length - k, length - <span class="number">1</span>);<span class="comment">//接着反转后面k个</span></span><br><span class="line">      reverse(nums, <span class="number">0</span>, length - <span class="number">1</span>);<span class="comment">//最后在反转全部的元素</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//把数组中从[start，end]之间的元素两两交换,也就是反转</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">      <span class="keyword">while</span> (start &lt; end) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> nums[start];</span><br><span class="line">          nums[start++] = nums[end];</span><br><span class="line">          nums[end--] = temp;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">环形旋转</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">rotate</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">hold</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">boolean</span>[] visited = <span class="keyword">new</span> <span class="title class_">boolean</span>[length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            index = (index + k) % length;</span><br><span class="line">            <span class="keyword">if</span> (visited[index]) &#123;</span><br><span class="line">                <span class="comment">//如果访问过，再次访问的话，会出现原地打转的现象，</span></span><br><span class="line">                <span class="comment">//不能再访问当前元素了，我们直接从他的下一个元素开始</span></span><br><span class="line">                index = (index + <span class="number">1</span>) % length;</span><br><span class="line">                hold = nums[index];</span><br><span class="line">                i--;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//把当前值保存在下一个位置，保存之前要把下一个位置的</span></span><br><span class="line">                <span class="comment">//值给记录下来</span></span><br><span class="line">                visited[index] = <span class="literal">true</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> nums[index];</span><br><span class="line">                nums[index] = hold;</span><br><span class="line">                hold = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">使用一个数组visited表示这个元素有没有被访问过，如果被访问过就从他的下一个开始，防止原地打转。</span><br></pre></td></tr></table></figure><h2 id="滑动窗口框架"><a href="#滑动窗口框架" class="headerlink" title="滑动窗口框架"></a>滑动窗口框架</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滑动窗口算法框架 */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">slidingWindow</span><span class="params">(string s, string t)</span> &#123;</span><br><span class="line">    Map&lt;Character,Integer&gt; need = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    Map&lt;Character,Integer&gt; window = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c : t.toCharArray()) </span><br><span class="line">        need.put(c, need.getOrDefault(c, <span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.length()) &#123;</span><br><span class="line">        <span class="comment">// c 是将移入窗口的字符</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> s.charAt(right);</span><br><span class="line">        <span class="comment">// 右移窗口</span></span><br><span class="line">        right++;</span><br><span class="line">        <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">        ...</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 判断左侧窗口是否要收缩</span></span><br><span class="line">        <span class="keyword">while</span> (window needs shrink) &#123;</span><br><span class="line">            <span class="comment">// d 是将移出窗口的字符</span></span><br><span class="line">            <span class="type">char</span> <span class="variable">d</span> <span class="operator">=</span> s.charAt(left);</span><br><span class="line">            <span class="comment">// 左移窗口</span></span><br><span class="line">            left++;</span><br><span class="line">            <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20230325105124395.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfLongestSubstring</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; window = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right &lt; s.length())&#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> s.charAt(right);</span><br><span class="line">            right++;</span><br><span class="line">            window.put(c, window.getOrDefault(c, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(window.get(c) &gt; <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="type">char</span> <span class="variable">d</span> <span class="operator">=</span> s.charAt(left);</span><br><span class="line">                left++;</span><br><span class="line">                window.put(d, window.get(d) - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            res = Math.max(res, right - left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="存在重复的元素"><a href="#存在重复的元素" class="headerlink" title="存在重复的元素"></a>存在重复的元素</h2><p><img src="/assets/image-20230325130708290.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num : nums)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!set.add(num)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="只出现一次的数字"><a href="#只出现一次的数字" class="headerlink" title="只出现一次的数字"></a>只出现一次的数字</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">singleNumber</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; nums.length;i++)&#123;</span><br><span class="line">            result ^= nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="两个数组的交集"><a href="#两个数组的交集" class="headerlink" title="两个数组的交集"></a>两个数组的交集</h2><p><img src="/assets/image-20230325161758087.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] intersect(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">       <span class="comment">// 先对两个数组进行排序</span></span><br><span class="line">       Arrays.sort(nums1);</span><br><span class="line">       Arrays.sort(nums2);</span><br><span class="line">       <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">       <span class="keyword">while</span> (i &lt; nums1.length &amp;&amp; j &lt; nums2.length) &#123;</span><br><span class="line">           <span class="keyword">if</span> (nums1[i] &lt; nums2[j]) &#123;</span><br><span class="line">               <span class="comment">// 如果i指向的值小于j指向的值，，说明i指向</span></span><br><span class="line">               <span class="comment">// 的值小了，i往后移一步</span></span><br><span class="line">               i++;</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums1[i] &gt; nums2[j]) &#123;</span><br><span class="line">               <span class="comment">// 如果i指向的值大于j指向的值，说明j指向的值</span></span><br><span class="line">               <span class="comment">// 小了，j往后移一步</span></span><br><span class="line">               j++;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="comment">// 如果i和j指向的值相同，说明这两个值是重复的，</span></span><br><span class="line">               <span class="comment">// 把他加入到集合list中，然后i和j同时都往后移一步</span></span><br><span class="line">               list.add(nums1[i]);</span><br><span class="line">               i++;</span><br><span class="line">               j++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//把list转化为数组</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[list.size()];</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; list.size(); k++) &#123;</span><br><span class="line">           res[index++] = list.get(k);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> res;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] intersect(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//先把数组nums1的所有元素都存放到map中，其中key是数组中</span></span><br><span class="line">    <span class="comment">//的元素，value是这个元素出现在数组中的次数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums1.length; i++) &#123;</span><br><span class="line">        map.put(nums1[i], map.getOrDefault(nums1[i], <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//然后再遍历nums2数组，查看map中是否包含nums2的元素，如果包含，</span></span><br><span class="line">    <span class="comment">//就把当前值加入到集合list中，然后再把对应的value值减1。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums2.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map.getOrDefault(nums2[i], <span class="number">0</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            list.add(nums2[i]);</span><br><span class="line">            map.put(nums2[i], map.get(nums2[i]) - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把集合list转化为数组</span></span><br><span class="line">    <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[list.size()];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        res[i] = list.get(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加一"><a href="#加一" class="headerlink" title="加一"></a>加一</h2><p><img src="/assets/image-20230325201311548.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span>[] plusOne(<span class="type">int</span>[] digits) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> digits.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (digits[i] != <span class="number">9</span>) &#123;</span><br><span class="line">                <span class="comment">//如果数组当前元素不等于9，直接加1</span></span><br><span class="line">                <span class="comment">//然后直接返回</span></span><br><span class="line">                digits[i]++;</span><br><span class="line">                <span class="keyword">return</span> digits;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果数组当前元素等于9，那么加1之后</span></span><br><span class="line">                <span class="comment">//肯定会变为0，我们先让他变为0</span></span><br><span class="line">                digits[i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//除非数组中的元素都是9，否则不会走到这一步，</span></span><br><span class="line">        <span class="comment">//如果数组的元素都是9，我们只需要把数组的长度</span></span><br><span class="line">        <span class="comment">//增加1，并且把数组的第一个元素置为1即可</span></span><br><span class="line">        <span class="type">int</span> temp[] = <span class="keyword">new</span> <span class="title class_">int</span>[length + <span class="number">1</span>];</span><br><span class="line">        temp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="移动零"><a href="#移动零" class="headerlink" title="移动零"></a>移动零</h2><p><img src="/assets/image-20230325234557002.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveZeroes</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (nums == <span class="literal">null</span> || nums.length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//一次遍历，把非零的都往前挪</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] != <span class="number">0</span>)</span><br><span class="line">            nums[index++] = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//后面的都是0,</span></span><br><span class="line">    <span class="keyword">while</span> (index &lt; nums.length) &#123;</span><br><span class="line">        nums[index++] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveZeroes</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span><span class="number">0</span>;j &lt; nums.length;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j] == <span class="number">0</span>) i++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i != <span class="number">0</span>)&#123;</span><br><span class="line">                nums[j -i] = nums[j];</span><br><span class="line">                nums[j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveZeroes</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j &lt; nums.length;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j] != <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> nums[j];</span><br><span class="line">                nums[j] = nums[i];</span><br><span class="line">                nums[i] = temp;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="有效的数独"><a href="#有效的数独" class="headerlink" title="有效的数独"></a>有效的数独</h2><p><img src="/assets/image-20230326143551832.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValidSudoku</span><span class="params">(<span class="type">char</span>[][] board)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">9</span>;i++)&#123;</span><br><span class="line">            <span class="type">boolean</span>[] used = <span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j &lt; <span class="number">9</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][j] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> board[i][j] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(used[num]) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                used[num] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j &lt; <span class="number">9</span>;j++)&#123;</span><br><span class="line">            <span class="type">boolean</span>[] used = <span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">9</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> board[i][j] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(used[num]) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                used[num] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">3</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j &lt; <span class="number">3</span>;j++)&#123;</span><br><span class="line">                <span class="type">boolean</span>[] used = <span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">10</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> i*<span class="number">3</span>;r &lt; i * <span class="number">3</span> + <span class="number">3</span>;r++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> j * <span class="number">3</span>;c &lt; j * <span class="number">3</span> + <span class="number">3</span>;c ++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(board[r][c] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> board[r][c] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                        <span class="keyword">if</span>(used[num]) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        used[num] = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="罗马数字转整数"><a href="#罗马数字转整数" class="headerlink" title="罗马数字转整数"></a>罗马数字转整数</h2><p><img src="/assets/image-20230326222353794.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">romanToInt</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">perv</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt; s.length();i++)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">curr</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">switch</span>(s.charAt(i))&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>:curr = <span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;V&#x27;</span>:curr = <span class="number">5</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>:curr = <span class="number">10</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:curr = <span class="number">50</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:curr = <span class="number">100</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:curr = <span class="number">500</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;M&#x27;</span>:curr = <span class="number">1000</span>;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(curr &gt; perv)&#123;</span><br><span class="line">                num+=curr - perv * <span class="number">2</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                num += curr;</span><br><span class="line">            &#125;</span><br><span class="line">            perv = curr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="有效的字母异位词"><a href="#有效的字母异位词" class="headerlink" title="有效的字母异位词"></a>有效的字母异位词</h2><p><img src="/assets/image-20230328115459295.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (s.length() != t.length())</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       <span class="type">int</span>[] letterCount = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">       <span class="comment">//统计字符串s中的每个字符的数量</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++)</span><br><span class="line">           letterCount[s.charAt(i) - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">       <span class="comment">//减去字符串t中的每个字符的数量</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; t.length(); i++)</span><br><span class="line">           letterCount[t.charAt(i) - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">       <span class="comment">//如果数组letterCount的每个值都是0，返回true，否则返回false</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> count : letterCount)</span><br><span class="line">           <span class="keyword">if</span> (count != <span class="number">0</span>)</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>优化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (s.length() != t.length())</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       <span class="type">int</span>[] letterCount = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">       <span class="comment">//统计字符串s中的每个字符的数量</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++)</span><br><span class="line">           letterCount[s.charAt(i) - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">       <span class="comment">//减去字符串t中的每个字符的数量</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; t.length(); i++) &#123;</span><br><span class="line">           <span class="comment">//如果当前字符等于0，直接返回false，</span></span><br><span class="line">           <span class="keyword">if</span> (letterCount[t.charAt(i) - <span class="string">&#x27;a&#x27;</span>] == <span class="number">0</span>)</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">           letterCount[t.charAt(i) - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>先排序，在比较：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">    <span class="type">char</span>[] sChar = s.toCharArray();</span><br><span class="line">    <span class="type">char</span>[] tChar = t.toCharArray();</span><br><span class="line">    <span class="comment">//对两个字符串中的字符进行排序</span></span><br><span class="line">    Arrays.sort(sChar);</span><br><span class="line">    Arrays.sort(tChar);</span><br><span class="line">    <span class="keyword">return</span> Arrays.equals(sChar, tChar);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一次遍历：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.length() != t.length())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">char</span>[] cs = s.toCharArray();</span><br><span class="line">    <span class="type">char</span>[] ct = t.toCharArray();</span><br><span class="line">    <span class="type">int</span>[] map = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cs.length; i++) &#123;</span><br><span class="line">        <span class="comment">//出现了一个新的字符</span></span><br><span class="line">        <span class="keyword">if</span> (++map[cs[i] - <span class="string">&#x27;a&#x27;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//消失了一个新的字符</span></span><br><span class="line">        <span class="keyword">if</span> (--map[ct[i] - <span class="string">&#x27;a&#x27;</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证回文字符串"><a href="#验证回文字符串" class="headerlink" title="验证回文字符串"></a>验证回文字符串</h2><p><img src="/assets/image-20230328222012258.png" alt="示例图片" style="zoom:50%;" /></p><p><img src="/assets/4d9102ff750701d75d5ba25800498d67bb11b06444cc543670ced1aac00cf4d0-image.png" alt="image.png" style="zoom:150%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = s.length() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="comment">//因为题中说了，只考虑字母和数字，所以不是字母和数字的先过滤掉</span></span><br><span class="line">            <span class="keyword">while</span> (left &lt; right &amp;&amp; !Character.isLetterOrDigit(s.charAt(left)))</span><br><span class="line">                left++;</span><br><span class="line">            <span class="keyword">while</span> (left &lt; right &amp;&amp; !Character.isLetterOrDigit(s.charAt(right)))</span><br><span class="line">                right--;</span><br><span class="line">            <span class="comment">//然后把两个字符变为小写，在判断是否一样，如果不一样，直接返回false</span></span><br><span class="line">            <span class="keyword">if</span> (Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right)))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双指针的另一种写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (s == <span class="literal">null</span> || s.length() == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    s = s.toLowerCase();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = s.length() - <span class="number">1</span>; i &lt; j; i++, j--) &#123;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; !Character.isLetterOrDigit(s.charAt(i)))</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; !Character.isLetterOrDigit(s.charAt(j)))</span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">if</span> (s.charAt(i) != s.charAt(j))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用正则匹配：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">actual</span> <span class="operator">=</span> s.replaceAll(<span class="string">&quot;[^A-Za-z0-9]&quot;</span>, <span class="string">&quot;&quot;</span>).toLowerCase();</span><br><span class="line">    <span class="type">String</span> <span class="variable">rev</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(actual).reverse().toString();</span><br><span class="line">    <span class="keyword">return</span> actual.equals(rev);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>递归方式实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> isPalindromeHelper(s, <span class="number">0</span>, s.length() - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindromeHelper</span><span class="params">(String s, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right &amp;&amp; !Character.isLetterOrDigit(s.charAt(left)))</span><br><span class="line">        left++;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right &amp;&amp; !Character.isLetterOrDigit(s.charAt(right)))</span><br><span class="line">        right--;</span><br><span class="line">    <span class="keyword">return</span> Character.toLowerCase(s.charAt(left)) == Character.toLowerCase(s.charAt(right)) &amp;&amp; isPalindromeHelper(s, ++left, --right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串转换整数-atoi"><a href="#字符串转换整数-atoi" class="headerlink" title="字符串转换整数 (atoi)"></a>字符串转换整数 (atoi)</h2><p><img src="/assets/image-20230329000802124.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">myAtoi</span><span class="params">(String s)</span> &#123;</span><br><span class="line">            <span class="type">char</span>[] chars = s.toCharArray();</span><br><span class="line">            <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> chars.length;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 先去除空格</span></span><br><span class="line">            <span class="keyword">while</span> (index &lt; length &amp;&amp; chars[index] == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 极端情况 &quot;  &quot; 和&quot;&quot;</span></span><br><span class="line">            <span class="keyword">if</span>(index &gt;= length)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 再判断符号</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">sign</span> <span class="operator">=</span>  <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(chars[index] == <span class="string">&#x27;-&#x27;</span> || chars[index] == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(chars[index] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                    sign = -<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (index &lt; length)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> chars[index] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(num &gt; <span class="number">9</span> || num &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                temp = result;</span><br><span class="line">                result = result * <span class="number">10</span> + num;</span><br><span class="line">                <span class="comment">// 越界后，数值和期望数值发生变化，取余再除10获取原始值，比对判断</span></span><br><span class="line">                <span class="keyword">if</span>(result/<span class="number">10</span> !=temp)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(sign &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="keyword">return</span> Integer.MAX_VALUE;</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> Integer.MIN_VALUE;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result*sign;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现-strStr"><a href="#实现-strStr" class="headerlink" title="实现 strStr()"></a>实现 strStr()</h2><p>暴力匹配：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">strStr</span><span class="params">(String haystack, String needle)</span> &#123;</span><br><span class="line">        <span class="type">char</span>[] hay = haystack.toCharArray();</span><br><span class="line">        <span class="type">char</span>[] nee = needle.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= hay.length - nee.length; i++) &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">found</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; nee.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (hay[i+j] != nee[j]) &#123;</span><br><span class="line">                    found = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (found) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一行代码搞定：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">strStr</span><span class="params">(String haystack, String needle)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> haystack.indexOf(needle);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>KMP算法：</strong></p><p><img src="/assets/1615790372-AiUMmb-image.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">strStr</span><span class="params">(String haystack, String needle)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (needle.length() == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数组next表示pattern指定的下标前具有相同的字符串数量，语言组织能力不好，可能不是太好理解，我举个例子吧</span></span><br><span class="line"><span class="comment">     * ，比如ABCABA，数组next[0]是-1，这个是固定的，因为第一个A前面是没有字符的，next[1]是0，因为B的前面就一个A，没有</span></span><br><span class="line"><span class="comment">     * 重复的，所以是0,同理next[2]也是,next[3]也是0,而next[4]是1，因为next[4]所指向的是第二个B，第二个B前面有一个A和</span></span><br><span class="line"><span class="comment">     * 第一个A相同，所以是1,next[5]是2，因为next[5]所指向的是最后一个Ａ，因为前面的Ａ对比成功，并且Ｂ也对比成功，所以是２，</span></span><br><span class="line"><span class="comment">     * 也就是ＡＢ两个字符串匹配成功,再举个例子，比如WABCABA，数组除了第一个为-1，其他的都是为0，因为只有第一个匹配成功之后</span></span><br><span class="line"><span class="comment">     * 才能匹配后面的，虽然后面的AB和前面的AB匹配成功，但是后面AB的前面是C和前面AB的前面一个W不匹配，所以后面的匹配都是0.</span></span><br><span class="line"><span class="comment">     * 要记住只有指定字符前面的字符和第一个字符匹配成功的时候才能往后匹配，否则后面的永远都是先和第一个匹配。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span>[] next = <span class="keyword">new</span> <span class="title class_">int</span>[needle.length()];</span><br><span class="line">    getNext(needle, next);</span><br><span class="line">    <span class="keyword">while</span> (i &lt; haystack.length() &amp;&amp; j &lt; needle.length()) &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 这里j等于-1的时候也只有在下面next数组赋值的时候才会出现，并且只有在数组next[0]的时候才会等于-1，</span></span><br><span class="line"><span class="comment">         其他时候是没有的，这一点要谨记，待会下面求next数组的时候就会用到。这里可以这样来理解，如果j不等于-1，</span></span><br><span class="line"><span class="comment">         并且下标i和j所指向的字符相等，那么i和j分别往后移一位继续比较，这个很好理解，那么如果j==-1的时候，就表示</span></span><br><span class="line"><span class="comment">         就表示前面没有匹配成功的，同时i往后移一位，j置为0（j==-1的时候，j++为0），再从0开始比较。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (j == -<span class="number">1</span> || haystack.charAt(i) == needle.charAt(j)) &#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * i = i - j + 1;</span></span><br><span class="line"><span class="comment">             j = 0;</span></span><br><span class="line"><span class="comment">             返回到指定的位置，不是返回到匹配失败的下一个位置，这里都好理解，重点是求数组next。</span></span><br><span class="line"><span class="comment">             这里只要j等于0，在next[j]赋值的之后，j就会等于-1；因为next[0]等于-1</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            j = next[j]; <span class="comment">// j回到指定位置</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j == needle.length())</span><br><span class="line">            <span class="keyword">return</span> i - j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getNext</span><span class="params">(String p, <span class="type">int</span> next[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> p.length();</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">    next[<span class="number">0</span>] = -<span class="number">1</span>;<span class="comment">//这个默认的，</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 匹配的时候是当前字符的前一个和前面的匹配，所以最后一个是不参与匹配的，可以看strStr方法的注释，</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; len - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == -<span class="number">1</span> || p.charAt(i) == p.charAt(j)) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 如果j不等于-1，指定的字符相等，那么i和j要往后移一位，这点很好理解，如果j为-1的时候，i往后移移位，j置为0</span></span><br><span class="line"><span class="comment">             * 重新开始匹配。next[i]是匹配成功的数量</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">            next[i] = j;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 关键是这里不好理解，为什么匹配失败要让next[j]等于j，要记住这里的next[j]是指匹配成功的数量，有可能为0，也有可能是其他数.比如</span></span><br><span class="line"><span class="comment">         * 字符串ABCABXYABCABATDM,对应的next数组为&#123;-1000120012345100&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">            j = next[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="x的n次幂"><a href="#x的n次幂" class="headerlink" title="x的n次幂"></a>x的n次幂</h2><p><img src="/assets/image-20230331003341022.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x: the base number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n: the power number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: the result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">myPow</span><span class="params">(<span class="type">double</span> x, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">N</span> <span class="operator">=</span> n;</span><br><span class="line">        <span class="keyword">if</span> (N &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            N = -N;</span><br><span class="line">            x = <span class="number">1</span> / x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (N &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((N &amp; <span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">                ans *= x;</span><br><span class="line">            &#125;</span><br><span class="line">            x *= x;</span><br><span class="line">            N &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次循环中都会判断当前指数 <code>N</code> 是否为奇数，如果是奇数，则将结果乘上 <code>x</code>，否则只是将 <code>x</code> 自乘，然后将指数 <code>N</code> 右移一位。这样就可以通过不断将指数除以 2，来逐步计算 <code>x</code> 的指数幂，优化计算效率。</p><h2 id="旋转数字"><a href="#旋转数字" class="headerlink" title="旋转数字"></a>旋转数字</h2><p>我们称一个数 X 为好数, 如果它的每位数字逐个地被旋转 180 度后，我们仍可以得到一个有效的，且和 X 不同的数。要求每位数字都要被旋转。</p><p>如果一个数的每位数字被旋转以后仍然还是一个数字， 则这个数是有效的。0, 1, 和 8 被旋转后仍然是它们自己；2 和 5 可以互相旋转成对方（在这种情况下，它们以不同的方向旋转，换句话说，2 和 5 互为镜像）；6 和 9 同理，除了这些以外其他的数字旋转以后都不再是有效的数字。</p><p>现在我们有一个正整数 N, 计算从 1 到 N 中有多少个数 X 是好数？</p><p><img src="/assets/image-20230403000306667.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">rotatedDigits</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= n;i++)&#123;</span><br><span class="line">            String s= String.valueOf(i);</span><br><span class="line">            s = s.replaceAll(<span class="string">&quot;[+0, +1, +8]&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="string">&quot;&quot;</span>.equals(s))&#123;</span><br><span class="line">                s = s.replaceAll(<span class="string">&quot;[+2,+5,+6+,9]&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">&quot;&quot;</span>.equals(s))&#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="找到所有好下标"><a href="#找到所有好下标" class="headerlink" title="找到所有好下标"></a>找到所有好下标</h2><p><img src="/assets/image-20230407184813434.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">goodIndices</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt; n - <span class="number">1</span>;i++)&#123;</span><br><span class="line">                res.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt; n - k - <span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] &lt;= nums[i - <span class="number">1</span>] &amp;&amp; nums[i + k + <span class="number">1</span>] &gt;= nums[i + k])&#123;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span>(count &gt;= k) &#123;</span><br><span class="line">                    res.add(i + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                count = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最长公共前缀"><a href="#最长公共前缀" class="headerlink" title="最长公共前缀"></a>最长公共前缀</h2><p><img src="/assets/image-20230412200336580.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestCommonPrefix</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> strs.length;</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ans</span> <span class="operator">=</span> strs[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt; m;i++)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(;j &lt; ans.length() &amp;&amp; j &lt; strs[i].length();j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(ans.charAt(j) != strs[i].charAt(j))&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ans = ans.substring(<span class="number">0</span>, j);</span><br><span class="line">            <span class="keyword">if</span>(ans.equals(<span class="string">&quot;&quot;</span>)) <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将数组和减半的最少操作次数"><a href="#将数组和减半的最少操作次数" class="headerlink" title="将数组和减半的最少操作次数"></a>将数组和减半的最少操作次数</h2><p>给你一个正整数数组 <code>nums</code> 。每一次操作中，你可以从 <code>nums</code> 中选择 <strong>任意</strong> 一个数并将它减小到 <strong>恰好</strong> 一半。（注意，在后续操作中你可以对减半过的数继续执行操作）</p><p>请你返回将 <code>nums</code> 数组和 <strong>至少</strong> 减少一半的 <strong>最少</strong> 操作数。</p><p><strong>示例：</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [5,19,8,1]</span><br><span class="line">输出：3</span><br><span class="line">解释：初始 nums 的和为<span class="number"> 5 </span>+<span class="number"> 19 </span>+<span class="number"> 8 </span>+<span class="number"> 1 </span>=<span class="number"> 33 </span>。</span><br><span class="line">以下是将数组和减少至少一半的一种方法：</span><br><span class="line">选择数字<span class="number"> 19 </span>并减小为 9.5 。</span><br><span class="line">选择数字 9.5 并减小为 4.75 。</span><br><span class="line">选择数字<span class="number"> 8 </span>并减小为<span class="number"> 4 </span>。</span><br><span class="line">最终数组为 [5, 4.75, 4, 1] ，和为<span class="number"> 5 </span>+ 4.75 +<span class="number"> 4 </span>+<span class="number"> 1 </span>= 14.75 。</span><br><span class="line">nums 的和减小了<span class="number"> 33 </span>- 14.75 = 18.25 ，减小的部分超过了初始数组和的一半，18.25 &gt;= 33/2 = 16.5 。</span><br><span class="line">我们需要<span class="number"> 3 </span>个操作实现题目要求，所以返回<span class="number"> 3 </span>。</span><br><span class="line">可以证明，无法通过少于<span class="number"> 3 </span>个操作使数组和减少至少一半。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">halveArray</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        PriorityQueue&lt;Double&gt; pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Double&gt;((a, b) -&gt; b.compareTo(a));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num : nums)&#123;</span><br><span class="line">            pq.offer((<span class="type">double</span>) num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num : nums) &#123;</span><br><span class="line">            sum += num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum2</span> <span class="operator">=</span> <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">while</span>(sum2 &lt; sum / <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> pq.poll();</span><br><span class="line">            sum2 += x / <span class="number">2</span>;</span><br><span class="line">            pq.offer(x / <span class="number">2</span>);</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="删除链表的倒数第N个节点"><a href="#删除链表的倒数第N个节点" class="headerlink" title="删除链表的倒数第N个节点"></a>删除链表的倒数第N个节点</h2><p><img src="/assets/image-20230331235352678.png" alt="示例图片" style="zoom:50%;" /></p><p><strong>提示：</strong></p><ul><li>链表中结点的数目为 <code>sz</code></li><li><code>1 &lt;= sz &lt;= 30</code></li><li><code>0 &lt;= Node.val &lt;= 100</code></li><li><code>1 &lt;= n &lt;= sz</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">removeNthFromEnd</span><span class="params">(ListNode head, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        dummy.next = head;</span><br><span class="line"></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">fast</span> <span class="operator">=</span> dummy;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> dummy;</span><br><span class="line">        <span class="keyword">while</span>(fast.next != <span class="literal">null</span>)&#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        slow.next = slow.next.next;</span><br><span class="line">        <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1><h2 id="二叉树的最大深度"><a href="#二叉树的最大深度" class="headerlink" title="二叉树的最大深度"></a>二叉树的最大深度</h2><p><img src="/assets/image-20230402165933145.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxDepth</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Math.max(maxDepth(root.left)+<span class="number">1</span>, maxDepth(root.right)+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证二叉搜索树"><a href="#验证二叉搜索树" class="headerlink" title="验证二叉搜索树"></a>验证二叉搜索树</h2><p><img src="/assets/image-20230402170057604.png" alt="示例图片" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValidBST</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> isValidBST(root, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValidBST</span><span class="params">(TreeNode root, Integer min, Integer max)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(min != <span class="literal">null</span> &amp;&amp; root.val &lt;= min) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(max != <span class="literal">null</span> &amp;&amp; root.val &gt;= max) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> isValidBST(root.left, min, root.val) &amp;&amp; isValidBST(root.right, root.val, max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">🥧本文算法题均用Java解题</summary>
    
    
    
    <category term="演示" scheme="https://815101909.github.io/categories/%E6%BC%94%E7%A4%BA/"/>
    
    
    <category term="算法" scheme="https://815101909.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法与外挂标签写法汇总</title>
    <link href="https://815101909.github.io/posts/2013454d.html"/>
    <id>https://815101909.github.io/posts/2013454d.html</id>
    <published>2022-08-09T10:19:03.000Z</published>
    <updated>2022-10-23T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Markdown语法自带格式"><a href="#1-Markdown语法自带格式" class="headerlink" title="1.Markdown语法自带格式"></a>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块"><a href="#1-1-代码块" class="headerlink" title="1.1 代码块"></a>1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题"><a href="#1-2-多级标题" class="headerlink" title="1.2 多级标题"></a>1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式"><a href="#1-3-文字样式" class="headerlink" title="1.3 文字样式"></a>1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><font size = 5>5号字</font><font face="黑体">黑体</font><font color=blue>蓝色</font><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p> Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以"><a href="#1-6-列表-跟空格都可以" class="headerlink" title="1.6 列表(*,+,-跟空格都可以)"></a>1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表"><a href="#1-6-1-无序列表" class="headerlink" title="1.6.1 无序列表"></a>1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表"><a href="#1-6-2-有序列表" class="headerlink" title="1.6.2 有序列表"></a>1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片"><a href="#1-7-图片" class="headerlink" title="1.7 图片"></a>1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格"><a href="#1-8-表格" class="headerlink" title="1.8 表格"></a>1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式"><a href="#1-9-公式" class="headerlink" title="1.9 公式"></a>1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><script type="math/tex; mode=display">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="2-Butterfly外挂标签"><a href="#2-Butterfly外挂标签" class="headerlink" title="2.Butterfly外挂标签"></a>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text"><a href="#2-1-行内文本样式-text" class="headerlink" title="2.1 行内文本样式 text"></a>2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span"><a href="#2-2-行内文本-span" class="headerlink" title="2.2 行内文本 span"></a>2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p"><a href="#2-3-段落文本-p" class="headerlink" title="2.3 段落文本 p"></a>2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note"><a href="#2-4-引用note" class="headerlink" title="2.4 引用note"></a>2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><p>2.外部icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>2.<code>modern</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip"><a href="#2-5-上标标签-tip" class="headerlink" title="2.5 上标标签 tip"></a>2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima"><a href="#2-6-动态标签-anima" class="headerlink" title="2.6 动态标签 anima"></a>2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>   1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>3.On hover（当鼠标悬停时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>4.On parent hover（当鼠标悬停在父级元素时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox"><a href="#2-7-复选列表-checkbox" class="headerlink" title="2.7 复选列表 checkbox"></a>2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio"><a href="#2-8-单选列表-radio" class="headerlink" title="2.8 单选列表 radio"></a>2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline"><a href="#2-9-时间轴-timeline" class="headerlink" title="2.9 时间轴 timeline"></a>2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link"><a href="#2-10-链接卡片-link" class="headerlink" title="2.10 链接卡片 link"></a>2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns"><a href="#2-11-按钮-btns" class="headerlink" title="2.11 按钮 btns"></a>2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard"><a href="#2-12-github卡片-ghcard" class="headerlink" title="2.12 github卡片 ghcard"></a>2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><div class="table-container"><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><p>2.仓库信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage"><a href="#2-13-github徽标-ghbdage" class="headerlink" title="2.13 github徽标 ghbdage"></a>2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object><p>3.拓展参数，支持shields的API的全部参数内容</p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites"><a href="#2-14-网站卡片-sites" class="headerlink" title="2.14 网站卡片 sites"></a>2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage"><a href="#2-15-行内图片-inlineimage" class="headerlink" title="2.15 行内图片 inlineimage"></a>2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image"><a href="#2-16-单张图片-image" class="headerlink" title="2.16 单张图片 image"></a>2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>2.指定宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><br>3.指定宽度并添加描述：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><br>4.设置占位背景色：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio"><a href="#2-17-音频-audio" class="headerlink" title="2.17 音频 audio"></a>2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video"><a href="#2-18-视频-video" class="headerlink" title="2.18 视频 video"></a>2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><br>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery"><a href="#2-19-相册-gallery" class="headerlink" title="2.19 相册 gallery"></a>2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>2.gallery 相册<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table></div><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding"><a href="#2-20-折叠框-folding" class="headerlink" title="2.20 折叠框 folding"></a>2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><br><!-- tab 参数配置 --></p><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab"><a href="#2-21-分栏-tab" class="headerlink" title="2.21 分栏 tab"></a>2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem"><a href="#2-22-诗词标签-poem" class="headerlink" title="2.22 诗词标签 poem"></a>2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon"><a href="#2-23-阿里图标-icon" class="headerlink" title="2.23 阿里图标 icon"></a>2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow"><a href="#2-24-特效标签wow" class="headerlink" title="2.24 特效标签wow"></a>2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>3.slideInRight动画效果，持续5s，延时5s<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><br>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress"><a href="#2-25-进度条-progress" class="headerlink" title="2.25  进度条 progress"></a>2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation"><a href="#2-26-注释-notation" class="headerlink" title="2.26 注释 notation"></a>2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble"><a href="#2-27-气泡注释-bubble" class="headerlink" title="2.27 气泡注释 bubble"></a>2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference"><a href="#2-28-引用文献-reference" class="headerlink" title="2.28 引用文献 reference"></a>2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，Butterfly主题<span class="hidden-anchor" id="referto_[3]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[7]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[8]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[9]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示"><a href="#2-29-PDF展示" class="headerlink" title="2.29 PDF展示"></a>2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件"><a href="#2-30-Hexo-tag-map-插件" class="headerlink" title="2.30 Hexo-tag-map 插件"></a>2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="table-container"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table></div><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>&lt;/div&gt;<script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><p><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><br></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块"><a href="#2-31-隐藏块" class="headerlink" title="2.31 隐藏块"></a>2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">🥧本文汇总Markdown格式以及外挂标签在网页端的渲染效果，可作为文档进行查询</summary>
    
    
    
    <category term="演示" scheme="https://815101909.github.io/categories/%E6%BC%94%E7%A4%BA/"/>
    
    
    <category term="Markdown" scheme="https://815101909.github.io/tags/Markdown/"/>
    
    <category term="外挂标签" scheme="https://815101909.github.io/tags/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
</feed>
